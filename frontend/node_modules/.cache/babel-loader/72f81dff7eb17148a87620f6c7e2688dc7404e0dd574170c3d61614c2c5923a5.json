{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx\",\n  _s = $RefreshSig$();\n// Improved VideoDisplay.jsx with better video rendering logic\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Users } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children,\n  callStatus\n}) => {\n  _s();\n  var _remoteVideoRef$curre3, _remoteVideoRef$curre4;\n  // Video background styling\n  const videoOffBg = isDarkMode ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n\n  // Enhanced state tracking for video display issues\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n  const [hasVideoTracks, setHasVideoTracks] = useState(false);\n  const [forceShowVideo, setForceShowVideo] = useState(false);\n  const [videoDebugInfo, setVideoDebugInfo] = useState('');\n\n  // Refs for timers\n  const playAttemptsRef = useRef(0);\n  const trackCheckerTimer = useRef(null);\n  const playTimeoutRef = useRef(null);\n\n  // Enhanced logging with console visualization\n  const log = message => {\n    console.log(`[VideoDisplay] ${message}`);\n    setVideoDebugInfo(prev => `${message}\\n${prev.split('\\n').slice(0, 10).join('\\n')}`);\n  };\n\n  // Force show video regardless of status after a short delay\n  useEffect(() => {\n    if (callStatus === 'active') {\n      const timer = setTimeout(() => {\n        log(\"Forcing video display after active timeout\");\n        setForceShowVideo(true);\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [callStatus]);\n\n  // Enhanced track detection with improved logging\n  const checkAndHandleVideoTracks = () => {\n    if (!remoteVideoRef.current || !remoteVideoRef.current.srcObject) {\n      return false;\n    }\n    const tracks = remoteVideoRef.current.srcObject.getTracks();\n    const videoTracks = tracks.filter(t => t.kind === 'video');\n\n    // Detailed track logging\n    tracks.forEach((track, i) => {\n      log(`Track ${i}: ${track.kind}, enabled: ${track.enabled}, ready: ${track.readyState}`);\n    });\n    const hasVideo = videoTracks.length > 0;\n    setHasVideoTracks(hasVideo);\n    if (hasVideo && !remotePlaying) {\n      log(`Found ${videoTracks.length} video tracks but not playing yet, attempting playback`);\n      attemptToPlayVideo();\n    }\n    return hasVideo;\n  };\n\n  // Aggressive video playback attempt\n  const attemptToPlayVideo = async () => {\n    if (!remoteVideoRef.current || !remoteVideoRef.current.srcObject) {\n      log(\"Cannot play: video ref or srcObject missing\");\n      return false;\n    }\n    try {\n      log(\"Attempting to play video\");\n      await remoteVideoRef.current.play();\n      log(\"Video playback started successfully\");\n      setRemotePlaying(true);\n      setRemoteReady(true);\n      return true;\n    } catch (err) {\n      log(`Play failed: ${err.message}. Attempts: ${playAttemptsRef.current + 1}`);\n\n      // Try muted first then unmute (browser autoplay policy workaround)\n      try {\n        const originalMuted = remoteVideoRef.current.muted;\n        remoteVideoRef.current.muted = true;\n        await remoteVideoRef.current.play();\n        log(\"Video playing with mute workaround\");\n\n        // Restore original muted state\n        setTimeout(() => {\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.muted = originalMuted;\n            log(`Restored original muted state: ${originalMuted}`);\n          }\n        }, 500);\n        setRemotePlaying(true);\n        setRemoteReady(true);\n        return true;\n      } catch (e) {\n        log(`Play failed even with mute workaround: ${e.message}`);\n\n        // Increment play attempts\n        playAttemptsRef.current++;\n\n        // Schedule another attempt\n        if (playAttemptsRef.current < 5) {\n          if (playTimeoutRef.current) clearTimeout(playTimeoutRef.current);\n          playTimeoutRef.current = setTimeout(() => {\n            log(`Scheduling retry #${playAttemptsRef.current + 1} in 1000ms`);\n            attemptToPlayVideo();\n          }, 1000);\n        } else {\n          // After multiple failures, force show the video anyway\n          log(\"Multiple play failures, forcing video display\");\n          setForceShowVideo(true);\n        }\n        return false;\n      }\n    }\n  };\n\n  // Set up video monitoring when remote ref or srcObject changes\n  useEffect(() => {\n    if (!remoteVideoRef.current) return;\n    const checkVideoState = () => {\n      if (remoteVideoRef.current.srcObject) {\n        const statusText = remoteVideoRef.current.paused ? \"paused\" : \"playing\";\n        log(`Video element status: ${statusText}, readyState: ${remoteVideoRef.current.readyState}`);\n        checkAndHandleVideoTracks();\n      } else {\n        log(\"No srcObject on remote video\");\n      }\n    };\n    log(\"Setting up video element monitoring\");\n\n    // Set up event listeners\n    const handleLoadedMetadata = () => {\n      log(\"Video loadedmetadata event\");\n      setRemoteReady(true);\n      checkVideoState();\n      attemptToPlayVideo();\n    };\n    const handleCanPlay = () => {\n      log(\"Video canplay event\");\n      setRemoteReady(true);\n      checkVideoState();\n      attemptToPlayVideo();\n    };\n    const handlePlaying = () => {\n      log(\"Video playing event\");\n      setRemotePlaying(true);\n      setRemoteReady(true);\n      setForceShowVideo(true);\n    };\n    const handleSeeked = () => {\n      log(\"Video seeked event\");\n      attemptToPlayVideo();\n    };\n\n    // Add all listeners\n    remoteVideoRef.current.addEventListener('loadedmetadata', handleLoadedMetadata);\n    remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n    remoteVideoRef.current.addEventListener('playing', handlePlaying);\n    remoteVideoRef.current.addEventListener('seeked', handleSeeked);\n\n    // Do an immediate check\n    checkVideoState();\n\n    // Set up periodic checking\n    if (trackCheckerTimer.current) clearInterval(trackCheckerTimer.current);\n    trackCheckerTimer.current = setInterval(() => {\n      log(\"Periodic video check\");\n      if (callStatus === 'active' && !remotePlaying) {\n        var _remoteVideoRef$curre;\n        checkVideoState();\n        if ((_remoteVideoRef$curre = remoteVideoRef.current) !== null && _remoteVideoRef$curre !== void 0 && _remoteVideoRef$curre.srcObject) {\n          log(\"Active call with srcObject but not playing, attempting playback\");\n          attemptToPlayVideo();\n        }\n      }\n\n      // Force show video after enough attempts\n      if (callStatus === 'active' && !forceShowVideo && playAttemptsRef.current >= 3) {\n        log(\"Forcing video display after multiple attempts\");\n        setForceShowVideo(true);\n      }\n    }, 1000);\n\n    // Try playing immediately if we have srcObject\n    if (remoteVideoRef.current.srcObject) {\n      log(\"Found srcObject on mount, attempting immediate playback\");\n      attemptToPlayVideo();\n    }\n    return () => {\n      // Clean up listeners\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n        remoteVideoRef.current.removeEventListener('playing', handlePlaying);\n        remoteVideoRef.current.removeEventListener('seeked', handleSeeked);\n      }\n\n      // Clear timers\n      if (trackCheckerTimer.current) {\n        clearInterval(trackCheckerTimer.current);\n        trackCheckerTimer.current = null;\n      }\n      if (playTimeoutRef.current) {\n        clearTimeout(playTimeoutRef.current);\n        playTimeoutRef.current = null;\n      }\n    };\n  }, [remoteVideoRef.current, callStatus]);\n\n  // Handle srcObject changes\n  useEffect(() => {\n    var _remoteVideoRef$curre2;\n    if ((_remoteVideoRef$curre2 = remoteVideoRef.current) !== null && _remoteVideoRef$curre2 !== void 0 && _remoteVideoRef$curre2.srcObject) {\n      log(\"Remote video srcObject changed\");\n      checkAndHandleVideoTracks();\n\n      // Try playback when srcObject changes\n      if (callStatus === 'active') {\n        log(\"Active call with new srcObject, attempting playback\");\n        attemptToPlayVideo();\n      }\n    }\n  }, [(_remoteVideoRef$curre3 = remoteVideoRef.current) === null || _remoteVideoRef$curre3 === void 0 ? void 0 : _remoteVideoRef$curre3.srcObject]);\n\n  // Update video muted state\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      remoteVideoRef.current.muted = isSpeakerOff;\n      log(`Updated muted state: ${isSpeakerOff}`);\n    }\n  }, [isSpeakerOff]);\n\n  // Determine if we should show the video element\n  // IMPROVED: More permissive conditions to ensure video shows\n  const shouldShowVideo = callStatus === 'active' || remoteReady || hasVideoTracks || forceShowVideo || ((_remoteVideoRef$curre4 = remoteVideoRef.current) === null || _remoteVideoRef$curre4 === void 0 ? void 0 : _remoteVideoRef$curre4.srcObject) && remoteVideoRef.current.srcObject.getTracks().length > 0;\n  log(`Render state - callStatus: ${callStatus}, hasVideoTracks: ${hasVideoTracks}, remoteReady: ${remoteReady}, shouldShowVideo: ${shouldShowVideo}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black dark-mode-transition\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: isSpeakerOff,\n          className: \"w-full h-full object-cover\",\n          style: {\n            display: 'block',\n            // Always show the element\n            visibility: 'visible',\n            // Always visible\n            zIndex: 10\n          },\n          onError: e => log(`Video error: ${e.type}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), children, connectionQuality !== 'good' && reconnectAttempt > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\",\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            backdropFilter: 'blur(4px)',\n            zIndex: 30\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-white font-medium\",\n              children: [\"Reconnecting\", reconnectAttempt > 1 ? ` (${reconnectAttempt})` : '', \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), (isVideoOff || !shouldShowVideo && callStatus === 'active' || !hasVideoTracks && callStatus === 'active') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center dark-mode-transition\",\n          style: {\n            background: isDarkMode ? colors.darkBg : '#000811',\n            zIndex: 15\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (doctor === null || doctor === void 0 ? void 0 : doctor.image) || '/User_1.png',\n              alt: (doctor === null || doctor === void 0 ? void 0 : doctor.name) || 'Doctor',\n              className: \"w-full h-full object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-28 left-4 p-2 bg-black bg-opacity-70 text-white text-xs font-mono z-50 max-w-xs overflow-auto\",\n          style: {\n            maxHeight: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"status: \", callStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"hasVideoTracks: \", hasVideoTracks.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"remoteReady: \", remoteReady.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"remotePlaying: \", remotePlaying.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"shouldShow: \", shouldShowVideo.toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"attempts: \", playAttemptsRef.current]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              children: \"Debug Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"whitespace-pre-wrap\",\n              children: videoDebugInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\",\n      style: {\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n        zIndex: 40,\n        backgroundColor: 'black',\n        transform: showControls ? 'scale(1)' : 'scale(0.95)',\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true // Always mute local video\n        ,\n        className: \"w-full h-full object-cover\",\n        style: {\n          display: isVideoOff ? 'none' : 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`,\n        style: {\n          background: videoOffBg\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), isVideoOff && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            size: 18,\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoDisplay, \"bcqw7KphjSq/UW7jNP7G/kiYvMQ=\");\n_c = VideoDisplay;\nexport default VideoDisplay;\nvar _c;\n$RefreshReg$(_c, \"VideoDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Users","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoDisplay","remoteVideoRef","localVideoRef","isSpeakerOff","isVideoOff","doctor","connectionQuality","reconnectAttempt","showControls","isDarkMode","colors","children","callStatus","_s","_remoteVideoRef$curre3","_remoteVideoRef$curre4","videoOffBg","darkBg","primaryDark","remoteReady","setRemoteReady","remotePlaying","setRemotePlaying","hasVideoTracks","setHasVideoTracks","forceShowVideo","setForceShowVideo","videoDebugInfo","setVideoDebugInfo","playAttemptsRef","trackCheckerTimer","playTimeoutRef","log","message","console","prev","split","slice","join","timer","setTimeout","clearTimeout","checkAndHandleVideoTracks","current","srcObject","tracks","getTracks","videoTracks","filter","t","kind","forEach","track","i","enabled","readyState","hasVideo","length","attemptToPlayVideo","play","err","originalMuted","muted","e","checkVideoState","statusText","paused","handleLoadedMetadata","handleCanPlay","handlePlaying","handleSeeked","addEventListener","clearInterval","setInterval","_remoteVideoRef$curre","removeEventListener","_remoteVideoRef$curre2","shouldShowVideo","className","ref","autoPlay","playsInline","style","display","visibility","zIndex","onError","type","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","backdropFilter","background","src","image","alt","name","process","env","NODE_ENV","maxHeight","toString","boxShadow","transform","transition","size","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx"],"sourcesContent":["// Improved VideoDisplay.jsx with better video rendering logic\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Users } from 'lucide-react';\n\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children,\n  callStatus\n}) => {\n  // Video background styling\n  const videoOffBg = isDarkMode \n    ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` \n    : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n  \n  // Enhanced state tracking for video display issues\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n  const [hasVideoTracks, setHasVideoTracks] = useState(false);\n  const [forceShowVideo, setForceShowVideo] = useState(false);\n  const [videoDebugInfo, setVideoDebugInfo] = useState('');\n  \n  // Refs for timers\n  const playAttemptsRef = useRef(0);\n  const trackCheckerTimer = useRef(null);\n  const playTimeoutRef = useRef(null);\n  \n  // Enhanced logging with console visualization\n  const log = (message) => {\n    console.log(`[VideoDisplay] ${message}`);\n    setVideoDebugInfo(prev => `${message}\\n${prev.split('\\n').slice(0, 10).join('\\n')}`);\n  };\n\n  // Force show video regardless of status after a short delay\n  useEffect(() => {\n    if (callStatus === 'active') {\n      const timer = setTimeout(() => {\n        log(\"Forcing video display after active timeout\");\n        setForceShowVideo(true);\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [callStatus]);\n\n  // Enhanced track detection with improved logging\n  const checkAndHandleVideoTracks = () => {\n    if (!remoteVideoRef.current || !remoteVideoRef.current.srcObject) {\n      return false;\n    }\n    \n    const tracks = remoteVideoRef.current.srcObject.getTracks();\n    const videoTracks = tracks.filter(t => t.kind === 'video');\n    \n    // Detailed track logging\n    tracks.forEach((track, i) => {\n      log(`Track ${i}: ${track.kind}, enabled: ${track.enabled}, ready: ${track.readyState}`);\n    });\n    \n    const hasVideo = videoTracks.length > 0;\n    setHasVideoTracks(hasVideo);\n    \n    if (hasVideo && !remotePlaying) {\n      log(`Found ${videoTracks.length} video tracks but not playing yet, attempting playback`);\n      attemptToPlayVideo();\n    }\n    \n    return hasVideo;\n  };\n\n  // Aggressive video playback attempt\n  const attemptToPlayVideo = async () => {\n    if (!remoteVideoRef.current || !remoteVideoRef.current.srcObject) {\n      log(\"Cannot play: video ref or srcObject missing\");\n      return false;\n    }\n    \n    try {\n      log(\"Attempting to play video\");\n      await remoteVideoRef.current.play();\n      log(\"Video playback started successfully\");\n      setRemotePlaying(true);\n      setRemoteReady(true);\n      return true;\n    } catch (err) {\n      log(`Play failed: ${err.message}. Attempts: ${playAttemptsRef.current + 1}`);\n      \n      // Try muted first then unmute (browser autoplay policy workaround)\n      try {\n        const originalMuted = remoteVideoRef.current.muted;\n        remoteVideoRef.current.muted = true;\n        await remoteVideoRef.current.play();\n        log(\"Video playing with mute workaround\");\n        \n        // Restore original muted state\n        setTimeout(() => {\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.muted = originalMuted;\n            log(`Restored original muted state: ${originalMuted}`);\n          }\n        }, 500);\n        \n        setRemotePlaying(true);\n        setRemoteReady(true);\n        return true;\n      } catch (e) {\n        log(`Play failed even with mute workaround: ${e.message}`);\n        \n        // Increment play attempts\n        playAttemptsRef.current++;\n        \n        // Schedule another attempt\n        if (playAttemptsRef.current < 5) {\n          if (playTimeoutRef.current) clearTimeout(playTimeoutRef.current);\n          \n          playTimeoutRef.current = setTimeout(() => {\n            log(`Scheduling retry #${playAttemptsRef.current + 1} in 1000ms`);\n            attemptToPlayVideo();\n          }, 1000);\n        } else {\n          // After multiple failures, force show the video anyway\n          log(\"Multiple play failures, forcing video display\");\n          setForceShowVideo(true);\n        }\n        \n        return false;\n      }\n    }\n  };\n\n  // Set up video monitoring when remote ref or srcObject changes\n  useEffect(() => {\n    if (!remoteVideoRef.current) return;\n    \n    const checkVideoState = () => {\n      if (remoteVideoRef.current.srcObject) {\n        const statusText = remoteVideoRef.current.paused ? \"paused\" : \"playing\";\n        log(`Video element status: ${statusText}, readyState: ${remoteVideoRef.current.readyState}`);\n        checkAndHandleVideoTracks();\n      } else {\n        log(\"No srcObject on remote video\");\n      }\n    };\n    \n    log(\"Setting up video element monitoring\");\n    \n    // Set up event listeners\n    const handleLoadedMetadata = () => {\n      log(\"Video loadedmetadata event\");\n      setRemoteReady(true);\n      checkVideoState();\n      attemptToPlayVideo();\n    };\n    \n    const handleCanPlay = () => {\n      log(\"Video canplay event\");\n      setRemoteReady(true);\n      checkVideoState();\n      attemptToPlayVideo();\n    };\n    \n    const handlePlaying = () => {\n      log(\"Video playing event\");\n      setRemotePlaying(true);\n      setRemoteReady(true);\n      setForceShowVideo(true);\n    };\n    \n    const handleSeeked = () => {\n      log(\"Video seeked event\");\n      attemptToPlayVideo();\n    };\n    \n    // Add all listeners\n    remoteVideoRef.current.addEventListener('loadedmetadata', handleLoadedMetadata);\n    remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n    remoteVideoRef.current.addEventListener('playing', handlePlaying);\n    remoteVideoRef.current.addEventListener('seeked', handleSeeked);\n    \n    // Do an immediate check\n    checkVideoState();\n    \n    // Set up periodic checking\n    if (trackCheckerTimer.current) clearInterval(trackCheckerTimer.current);\n    \n    trackCheckerTimer.current = setInterval(() => {\n      log(\"Periodic video check\");\n      \n      if (callStatus === 'active' && !remotePlaying) {\n        checkVideoState();\n        \n        if (remoteVideoRef.current?.srcObject) {\n          log(\"Active call with srcObject but not playing, attempting playback\");\n          attemptToPlayVideo();\n        }\n      }\n      \n      // Force show video after enough attempts\n      if (callStatus === 'active' && !forceShowVideo && playAttemptsRef.current >= 3) {\n        log(\"Forcing video display after multiple attempts\");\n        setForceShowVideo(true);\n      }\n    }, 1000);\n    \n    // Try playing immediately if we have srcObject\n    if (remoteVideoRef.current.srcObject) {\n      log(\"Found srcObject on mount, attempting immediate playback\");\n      attemptToPlayVideo();\n    }\n    \n    return () => {\n      // Clean up listeners\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n        remoteVideoRef.current.removeEventListener('playing', handlePlaying);\n        remoteVideoRef.current.removeEventListener('seeked', handleSeeked);\n      }\n      \n      // Clear timers\n      if (trackCheckerTimer.current) {\n        clearInterval(trackCheckerTimer.current);\n        trackCheckerTimer.current = null;\n      }\n      \n      if (playTimeoutRef.current) {\n        clearTimeout(playTimeoutRef.current);\n        playTimeoutRef.current = null;\n      }\n    };\n  }, [remoteVideoRef.current, callStatus]);\n  \n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current?.srcObject) {\n      log(\"Remote video srcObject changed\");\n      checkAndHandleVideoTracks();\n      \n      // Try playback when srcObject changes\n      if (callStatus === 'active') {\n        log(\"Active call with new srcObject, attempting playback\");\n        attemptToPlayVideo();\n      }\n    }\n  }, [remoteVideoRef.current?.srcObject]);\n  \n  // Update video muted state\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      remoteVideoRef.current.muted = isSpeakerOff;\n      log(`Updated muted state: ${isSpeakerOff}`);\n    }\n  }, [isSpeakerOff]);\n\n  // Determine if we should show the video element\n  // IMPROVED: More permissive conditions to ensure video shows\n  const shouldShowVideo = \n    callStatus === 'active' || \n    remoteReady || \n    hasVideoTracks || \n    forceShowVideo ||\n    (remoteVideoRef.current?.srcObject && remoteVideoRef.current.srcObject.getTracks().length > 0);\n    \n  log(`Render state - callStatus: ${callStatus}, hasVideoTracks: ${hasVideoTracks}, remoteReady: ${remoteReady}, shouldShowVideo: ${shouldShowVideo}`);\n\n  return (\n    <>\n      {/* Doctor video (remote) */}\n      <div className=\"absolute inset-0 bg-black dark-mode-transition\">\n        <div className=\"h-full relative\">\n          {/* Remote video element - Always visible when active */}\n          <video\n            ref={remoteVideoRef}\n            autoPlay\n            playsInline\n            muted={isSpeakerOff}\n            className=\"w-full h-full object-cover\"\n            style={{\n              display: 'block', // Always show the element\n              visibility: 'visible', // Always visible\n              zIndex: 10\n            }}\n            onError={(e) => log(`Video error: ${e.type}`)}\n          />\n          \n          {/* Pass children (call header & connection status) */}\n          {children}\n          \n          {/* Reconnecting indicator */}\n          {connectionQuality !== 'good' && reconnectAttempt > 0 && (\n            <div \n              className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\"\n              style={{ \n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                backdropFilter: 'blur(4px)',\n                zIndex: 30\n              }}\n            >\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"></div>\n                <span className=\"text-sm text-white font-medium\">Reconnecting{reconnectAttempt > 1 ? ` (${reconnectAttempt})` : ''}...</span>\n              </div>\n            </div>\n          )}\n          \n          {/* Doctor avatar fallback - now with more permissive conditions */}\n          {(isVideoOff || \n            (!shouldShowVideo && callStatus === 'active') || \n            (!hasVideoTracks && callStatus === 'active')) && (\n            <div className=\"absolute inset-0 flex items-center justify-center dark-mode-transition\"\n                style={{ \n                  background: isDarkMode ? colors.darkBg : '#000811',\n                  zIndex: 15\n                }}>\n              <div className=\"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\">\n                <img src={doctor?.image || '/User_1.png'} alt={doctor?.name || 'Doctor'} className=\"w-full h-full object-cover\" />\n              </div>\n            </div>\n          )}\n          \n          {/* Debug information overlay (only in development) */}\n          {process.env.NODE_ENV === 'development' && (\n            <div className=\"absolute top-28 left-4 p-2 bg-black bg-opacity-70 text-white text-xs font-mono z-50 max-w-xs overflow-auto\" style={{ maxHeight: '200px' }}>\n              <div>status: {callStatus}</div>\n              <div>hasVideoTracks: {hasVideoTracks.toString()}</div>\n              <div>remoteReady: {remoteReady.toString()}</div>\n              <div>remotePlaying: {remotePlaying.toString()}</div>\n              <div>shouldShow: {shouldShowVideo.toString()}</div>\n              <div>attempts: {playAttemptsRef.current}</div>\n              <details>\n                <summary>Debug Log</summary>\n                <pre className=\"whitespace-pre-wrap\">{videoDebugInfo}</pre>\n              </details>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* User video (local) */}\n      <div className=\"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\"\n           style={{ \n             boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n             zIndex: 40,\n             backgroundColor: 'black',\n             transform: showControls ? 'scale(1)' : 'scale(0.95)',\n             transition: 'all 0.3s ease'\n           }}>\n        {/* Local video element */}\n        <video\n          ref={localVideoRef}\n          autoPlay\n          playsInline\n          muted={true} // Always mute local video\n          className=\"w-full h-full object-cover\"\n          style={{ display: isVideoOff ? 'none' : 'block' }}\n        />\n        \n        {/* Background when video is off */}\n        <div className={`absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`} \n             style={{ background: videoOffBg }}>\n        </div>\n        \n        {/* User placeholder when video is off */}\n        {isVideoOff && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\">\n              <Users size={18} className=\"text-white\" />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default VideoDisplay;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,YAAY,GAAGA,CAAC;EACpBC,cAAc;EACdC,aAAa;EACbC,YAAY;EACZC,UAAU;EACVC,MAAM;EACNC,iBAAiB;EACjBC,gBAAgB;EAChBC,YAAY;EACZC,UAAU;EACVC,MAAM;EACNC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,sBAAA,EAAAC,sBAAA;EACJ;EACA,MAAMC,UAAU,GAAGP,UAAU,GACzB,2BAA2BC,MAAM,CAACO,MAAM,YAAY,GACpD,2BAA2BP,MAAM,CAACQ,WAAW,YAAY;;EAE7D;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMoC,eAAe,GAAGnC,MAAM,CAAC,CAAC,CAAC;EACjC,MAAMoC,iBAAiB,GAAGpC,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMqC,cAAc,GAAGrC,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAMsC,GAAG,GAAIC,OAAO,IAAK;IACvBC,OAAO,CAACF,GAAG,CAAC,kBAAkBC,OAAO,EAAE,CAAC;IACxCL,iBAAiB,CAACO,IAAI,IAAI,GAAGF,OAAO,KAAKE,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;EACtF,CAAC;;EAED;EACA9C,SAAS,CAAC,MAAM;IACd,IAAIoB,UAAU,KAAK,QAAQ,EAAE;MAC3B,MAAM2B,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BR,GAAG,CAAC,4CAA4C,CAAC;QACjDN,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMe,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAC3B,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAM8B,yBAAyB,GAAGA,CAAA,KAAM;IACtC,IAAI,CAACzC,cAAc,CAAC0C,OAAO,IAAI,CAAC1C,cAAc,CAAC0C,OAAO,CAACC,SAAS,EAAE;MAChE,OAAO,KAAK;IACd;IAEA,MAAMC,MAAM,GAAG5C,cAAc,CAAC0C,OAAO,CAACC,SAAS,CAACE,SAAS,CAAC,CAAC;IAC3D,MAAMC,WAAW,GAAGF,MAAM,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,OAAO,CAAC;;IAE1D;IACAL,MAAM,CAACM,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MAC3BrB,GAAG,CAAC,SAASqB,CAAC,KAAKD,KAAK,CAACF,IAAI,cAAcE,KAAK,CAACE,OAAO,YAAYF,KAAK,CAACG,UAAU,EAAE,CAAC;IACzF,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGT,WAAW,CAACU,MAAM,GAAG,CAAC;IACvCjC,iBAAiB,CAACgC,QAAQ,CAAC;IAE3B,IAAIA,QAAQ,IAAI,CAACnC,aAAa,EAAE;MAC9BW,GAAG,CAAC,SAASe,WAAW,CAACU,MAAM,wDAAwD,CAAC;MACxFC,kBAAkB,CAAC,CAAC;IACtB;IAEA,OAAOF,QAAQ;EACjB,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACzD,cAAc,CAAC0C,OAAO,IAAI,CAAC1C,cAAc,CAAC0C,OAAO,CAACC,SAAS,EAAE;MAChEZ,GAAG,CAAC,6CAA6C,CAAC;MAClD,OAAO,KAAK;IACd;IAEA,IAAI;MACFA,GAAG,CAAC,0BAA0B,CAAC;MAC/B,MAAM/B,cAAc,CAAC0C,OAAO,CAACgB,IAAI,CAAC,CAAC;MACnC3B,GAAG,CAAC,qCAAqC,CAAC;MAC1CV,gBAAgB,CAAC,IAAI,CAAC;MACtBF,cAAc,CAAC,IAAI,CAAC;MACpB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOwC,GAAG,EAAE;MACZ5B,GAAG,CAAC,gBAAgB4B,GAAG,CAAC3B,OAAO,eAAeJ,eAAe,CAACc,OAAO,GAAG,CAAC,EAAE,CAAC;;MAE5E;MACA,IAAI;QACF,MAAMkB,aAAa,GAAG5D,cAAc,CAAC0C,OAAO,CAACmB,KAAK;QAClD7D,cAAc,CAAC0C,OAAO,CAACmB,KAAK,GAAG,IAAI;QACnC,MAAM7D,cAAc,CAAC0C,OAAO,CAACgB,IAAI,CAAC,CAAC;QACnC3B,GAAG,CAAC,oCAAoC,CAAC;;QAEzC;QACAQ,UAAU,CAAC,MAAM;UACf,IAAIvC,cAAc,CAAC0C,OAAO,EAAE;YAC1B1C,cAAc,CAAC0C,OAAO,CAACmB,KAAK,GAAGD,aAAa;YAC5C7B,GAAG,CAAC,kCAAkC6B,aAAa,EAAE,CAAC;UACxD;QACF,CAAC,EAAE,GAAG,CAAC;QAEPvC,gBAAgB,CAAC,IAAI,CAAC;QACtBF,cAAc,CAAC,IAAI,CAAC;QACpB,OAAO,IAAI;MACb,CAAC,CAAC,OAAO2C,CAAC,EAAE;QACV/B,GAAG,CAAC,0CAA0C+B,CAAC,CAAC9B,OAAO,EAAE,CAAC;;QAE1D;QACAJ,eAAe,CAACc,OAAO,EAAE;;QAEzB;QACA,IAAId,eAAe,CAACc,OAAO,GAAG,CAAC,EAAE;UAC/B,IAAIZ,cAAc,CAACY,OAAO,EAAEF,YAAY,CAACV,cAAc,CAACY,OAAO,CAAC;UAEhEZ,cAAc,CAACY,OAAO,GAAGH,UAAU,CAAC,MAAM;YACxCR,GAAG,CAAC,qBAAqBH,eAAe,CAACc,OAAO,GAAG,CAAC,YAAY,CAAC;YACjEe,kBAAkB,CAAC,CAAC;UACtB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,MAAM;UACL;UACA1B,GAAG,CAAC,+CAA+C,CAAC;UACpDN,iBAAiB,CAAC,IAAI,CAAC;QACzB;QAEA,OAAO,KAAK;MACd;IACF;EACF,CAAC;;EAED;EACAlC,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,cAAc,CAAC0C,OAAO,EAAE;IAE7B,MAAMqB,eAAe,GAAGA,CAAA,KAAM;MAC5B,IAAI/D,cAAc,CAAC0C,OAAO,CAACC,SAAS,EAAE;QACpC,MAAMqB,UAAU,GAAGhE,cAAc,CAAC0C,OAAO,CAACuB,MAAM,GAAG,QAAQ,GAAG,SAAS;QACvElC,GAAG,CAAC,yBAAyBiC,UAAU,iBAAiBhE,cAAc,CAAC0C,OAAO,CAACY,UAAU,EAAE,CAAC;QAC5Fb,yBAAyB,CAAC,CAAC;MAC7B,CAAC,MAAM;QACLV,GAAG,CAAC,8BAA8B,CAAC;MACrC;IACF,CAAC;IAEDA,GAAG,CAAC,qCAAqC,CAAC;;IAE1C;IACA,MAAMmC,oBAAoB,GAAGA,CAAA,KAAM;MACjCnC,GAAG,CAAC,4BAA4B,CAAC;MACjCZ,cAAc,CAAC,IAAI,CAAC;MACpB4C,eAAe,CAAC,CAAC;MACjBN,kBAAkB,CAAC,CAAC;IACtB,CAAC;IAED,MAAMU,aAAa,GAAGA,CAAA,KAAM;MAC1BpC,GAAG,CAAC,qBAAqB,CAAC;MAC1BZ,cAAc,CAAC,IAAI,CAAC;MACpB4C,eAAe,CAAC,CAAC;MACjBN,kBAAkB,CAAC,CAAC;IACtB,CAAC;IAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;MAC1BrC,GAAG,CAAC,qBAAqB,CAAC;MAC1BV,gBAAgB,CAAC,IAAI,CAAC;MACtBF,cAAc,CAAC,IAAI,CAAC;MACpBM,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,MAAM4C,YAAY,GAAGA,CAAA,KAAM;MACzBtC,GAAG,CAAC,oBAAoB,CAAC;MACzB0B,kBAAkB,CAAC,CAAC;IACtB,CAAC;;IAED;IACAzD,cAAc,CAAC0C,OAAO,CAAC4B,gBAAgB,CAAC,gBAAgB,EAAEJ,oBAAoB,CAAC;IAC/ElE,cAAc,CAAC0C,OAAO,CAAC4B,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;IACjEnE,cAAc,CAAC0C,OAAO,CAAC4B,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;IACjEpE,cAAc,CAAC0C,OAAO,CAAC4B,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;;IAE/D;IACAN,eAAe,CAAC,CAAC;;IAEjB;IACA,IAAIlC,iBAAiB,CAACa,OAAO,EAAE6B,aAAa,CAAC1C,iBAAiB,CAACa,OAAO,CAAC;IAEvEb,iBAAiB,CAACa,OAAO,GAAG8B,WAAW,CAAC,MAAM;MAC5CzC,GAAG,CAAC,sBAAsB,CAAC;MAE3B,IAAIpB,UAAU,KAAK,QAAQ,IAAI,CAACS,aAAa,EAAE;QAAA,IAAAqD,qBAAA;QAC7CV,eAAe,CAAC,CAAC;QAEjB,KAAAU,qBAAA,GAAIzE,cAAc,CAAC0C,OAAO,cAAA+B,qBAAA,eAAtBA,qBAAA,CAAwB9B,SAAS,EAAE;UACrCZ,GAAG,CAAC,iEAAiE,CAAC;UACtE0B,kBAAkB,CAAC,CAAC;QACtB;MACF;;MAEA;MACA,IAAI9C,UAAU,KAAK,QAAQ,IAAI,CAACa,cAAc,IAAII,eAAe,CAACc,OAAO,IAAI,CAAC,EAAE;QAC9EX,GAAG,CAAC,+CAA+C,CAAC;QACpDN,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,IAAIzB,cAAc,CAAC0C,OAAO,CAACC,SAAS,EAAE;MACpCZ,GAAG,CAAC,yDAAyD,CAAC;MAC9D0B,kBAAkB,CAAC,CAAC;IACtB;IAEA,OAAO,MAAM;MACX;MACA,IAAIzD,cAAc,CAAC0C,OAAO,EAAE;QAC1B1C,cAAc,CAAC0C,OAAO,CAACgC,mBAAmB,CAAC,gBAAgB,EAAER,oBAAoB,CAAC;QAClFlE,cAAc,CAAC0C,OAAO,CAACgC,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;QACpEnE,cAAc,CAAC0C,OAAO,CAACgC,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC;QACpEpE,cAAc,CAAC0C,OAAO,CAACgC,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;MACpE;;MAEA;MACA,IAAIxC,iBAAiB,CAACa,OAAO,EAAE;QAC7B6B,aAAa,CAAC1C,iBAAiB,CAACa,OAAO,CAAC;QACxCb,iBAAiB,CAACa,OAAO,GAAG,IAAI;MAClC;MAEA,IAAIZ,cAAc,CAACY,OAAO,EAAE;QAC1BF,YAAY,CAACV,cAAc,CAACY,OAAO,CAAC;QACpCZ,cAAc,CAACY,OAAO,GAAG,IAAI;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAAC1C,cAAc,CAAC0C,OAAO,EAAE/B,UAAU,CAAC,CAAC;;EAExC;EACApB,SAAS,CAAC,MAAM;IAAA,IAAAoF,sBAAA;IACd,KAAAA,sBAAA,GAAI3E,cAAc,CAAC0C,OAAO,cAAAiC,sBAAA,eAAtBA,sBAAA,CAAwBhC,SAAS,EAAE;MACrCZ,GAAG,CAAC,gCAAgC,CAAC;MACrCU,yBAAyB,CAAC,CAAC;;MAE3B;MACA,IAAI9B,UAAU,KAAK,QAAQ,EAAE;QAC3BoB,GAAG,CAAC,qDAAqD,CAAC;QAC1D0B,kBAAkB,CAAC,CAAC;MACtB;IACF;EACF,CAAC,EAAE,EAAA5C,sBAAA,GAACb,cAAc,CAAC0C,OAAO,cAAA7B,sBAAA,uBAAtBA,sBAAA,CAAwB8B,SAAS,CAAC,CAAC;;EAEvC;EACApD,SAAS,CAAC,MAAM;IACd,IAAIS,cAAc,CAAC0C,OAAO,EAAE;MAC1B1C,cAAc,CAAC0C,OAAO,CAACmB,KAAK,GAAG3D,YAAY;MAC3C6B,GAAG,CAAC,wBAAwB7B,YAAY,EAAE,CAAC;IAC7C;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA;EACA,MAAM0E,eAAe,GACnBjE,UAAU,KAAK,QAAQ,IACvBO,WAAW,IACXI,cAAc,IACdE,cAAc,IACb,EAAAV,sBAAA,GAAAd,cAAc,CAAC0C,OAAO,cAAA5B,sBAAA,uBAAtBA,sBAAA,CAAwB6B,SAAS,KAAI3C,cAAc,CAAC0C,OAAO,CAACC,SAAS,CAACE,SAAS,CAAC,CAAC,CAACW,MAAM,GAAG,CAAE;EAEhGzB,GAAG,CAAC,8BAA8BpB,UAAU,qBAAqBW,cAAc,kBAAkBJ,WAAW,sBAAsB0D,eAAe,EAAE,CAAC;EAEpJ,oBACEhF,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBAEEd,OAAA;MAAKiF,SAAS,EAAC,gDAAgD;MAAAnE,QAAA,eAC7Dd,OAAA;QAAKiF,SAAS,EAAC,iBAAiB;QAAAnE,QAAA,gBAE9Bd,OAAA;UACEkF,GAAG,EAAE9E,cAAe;UACpB+E,QAAQ;UACRC,WAAW;UACXnB,KAAK,EAAE3D,YAAa;UACpB2E,SAAS,EAAC,4BAA4B;UACtCI,KAAK,EAAE;YACLC,OAAO,EAAE,OAAO;YAAE;YAClBC,UAAU,EAAE,SAAS;YAAE;YACvBC,MAAM,EAAE;UACV,CAAE;UACFC,OAAO,EAAGvB,CAAC,IAAK/B,GAAG,CAAC,gBAAgB+B,CAAC,CAACwB,IAAI,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,EAGDhF,QAAQ,EAGRL,iBAAiB,KAAK,MAAM,IAAIC,gBAAgB,GAAG,CAAC,iBACnDV,OAAA;UACEiF,SAAS,EAAC,4FAA4F;UACtGI,KAAK,EAAE;YACLU,eAAe,EAAE,oBAAoB;YACrCC,cAAc,EAAE,WAAW;YAC3BR,MAAM,EAAE;UACV,CAAE;UAAA1E,QAAA,eAEFd,OAAA;YAAKiF,SAAS,EAAC,4BAA4B;YAAAnE,QAAA,gBACzCd,OAAA;cAAKiF,SAAS,EAAC;YAA+F;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrH9F,OAAA;cAAMiF,SAAS,EAAC,gCAAgC;cAAAnE,QAAA,GAAC,cAAY,EAACJ,gBAAgB,GAAG,CAAC,GAAG,KAAKA,gBAAgB,GAAG,GAAG,EAAE,EAAC,KAAG;YAAA;cAAAiF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1H;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGA,CAACvF,UAAU,IACT,CAACyE,eAAe,IAAIjE,UAAU,KAAK,QAAS,IAC5C,CAACW,cAAc,IAAIX,UAAU,KAAK,QAAS,kBAC5Cf,OAAA;UAAKiF,SAAS,EAAC,wEAAwE;UACnFI,KAAK,EAAE;YACLY,UAAU,EAAErF,UAAU,GAAGC,MAAM,CAACO,MAAM,GAAG,SAAS;YAClDoE,MAAM,EAAE;UACV,CAAE;UAAA1E,QAAA,eACJd,OAAA;YAAKiF,SAAS,EAAC,gFAAgF;YAAAnE,QAAA,eAC7Fd,OAAA;cAAKkG,GAAG,EAAE,CAAA1F,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE2F,KAAK,KAAI,aAAc;cAACC,GAAG,EAAE,CAAA5F,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE6F,IAAI,KAAI,QAAS;cAACpB,SAAS,EAAC;YAA4B;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/G;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGAQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,iBACrCxG,OAAA;UAAKiF,SAAS,EAAC,4GAA4G;UAACI,KAAK,EAAE;YAAEoB,SAAS,EAAE;UAAQ,CAAE;UAAA3F,QAAA,gBACxJd,OAAA;YAAAc,QAAA,GAAK,UAAQ,EAACC,UAAU;UAAA;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/B9F,OAAA;YAAAc,QAAA,GAAK,kBAAgB,EAACY,cAAc,CAACgF,QAAQ,CAAC,CAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtD9F,OAAA;YAAAc,QAAA,GAAK,eAAa,EAACQ,WAAW,CAACoF,QAAQ,CAAC,CAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChD9F,OAAA;YAAAc,QAAA,GAAK,iBAAe,EAACU,aAAa,CAACkF,QAAQ,CAAC,CAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpD9F,OAAA;YAAAc,QAAA,GAAK,cAAY,EAACkE,eAAe,CAAC0B,QAAQ,CAAC,CAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnD9F,OAAA;YAAAc,QAAA,GAAK,YAAU,EAACkB,eAAe,CAACc,OAAO;UAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9C9F,OAAA;YAAAc,QAAA,gBACEd,OAAA;cAAAc,QAAA,EAAS;YAAS;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,eAC5B9F,OAAA;cAAKiF,SAAS,EAAC,qBAAqB;cAAAnE,QAAA,EAAEgB;YAAc;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN9F,OAAA;MAAKiF,SAAS,EAAC,uFAAuF;MACjGI,KAAK,EAAE;QACLsB,SAAS,EAAE,+BAA+B;QAC1CnB,MAAM,EAAE,EAAE;QACVO,eAAe,EAAE,OAAO;QACxBa,SAAS,EAAEjG,YAAY,GAAG,UAAU,GAAG,aAAa;QACpDkG,UAAU,EAAE;MACd,CAAE;MAAA/F,QAAA,gBAELd,OAAA;QACEkF,GAAG,EAAE7E,aAAc;QACnB8E,QAAQ;QACRC,WAAW;QACXnB,KAAK,EAAE,IAAK,CAAC;QAAA;QACbgB,SAAS,EAAC,4BAA4B;QACtCI,KAAK,EAAE;UAAEC,OAAO,EAAE/E,UAAU,GAAG,MAAM,GAAG;QAAQ;MAAE;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAGF9F,OAAA;QAAKiF,SAAS,EAAE,yCAAyC1E,UAAU,GAAG,EAAE,GAAG,QAAQ,EAAG;QACjF8E,KAAK,EAAE;UAAEY,UAAU,EAAE9E;QAAW;MAAE;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EAGLvF,UAAU,iBACTP,OAAA;QAAKiF,SAAS,EAAC,mDAAmD;QAAAnE,QAAA,eAChEd,OAAA;UAAKiF,SAAS,EAAC,gFAAgF;UAAAnE,QAAA,eAC7Fd,OAAA,CAACF,KAAK;YAACgH,IAAI,EAAE,EAAG;YAAC7B,SAAS,EAAC;UAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC9E,EAAA,CAxXIb,YAAY;AAAA4G,EAAA,GAAZ5G,YAAY;AA0XlB,eAAeA,YAAY;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}