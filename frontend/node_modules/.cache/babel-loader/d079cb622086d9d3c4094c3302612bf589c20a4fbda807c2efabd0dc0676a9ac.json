{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver4/frontend2/src/components/screens/DoctorAvailabilityIndicator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Users } from 'lucide-react';\nimport { useTheme } from '../ThemeContext';\nimport useGlobalCallStore from '../services/GlobalCallService';\n\n/**\n * Shows a small indicator when doctors are available\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorAvailabilityIndicator = () => {\n  _s();\n  const {\n    colors,\n    isDarkMode\n  } = useTheme();\n  const {\n    availableDoctors,\n    loadingDoctors,\n    loadAvailableDoctors\n  } = useGlobalCallStore();\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Effect to handle visibility of the indicator\n  useEffect(() => {\n    // Only show the indicator when we have doctors available\n    if (availableDoctors.length > 0 && !loadingDoctors) {\n      setIsVisible(true);\n\n      // Hide the indicator after 5 seconds\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    } else {\n      setIsVisible(false);\n    }\n  }, [availableDoctors, loadingDoctors]);\n\n  // Load doctors on mount and periodically refresh\n  useEffect(() => {\n    loadAvailableDoctors();\n    const interval = setInterval(() => {\n      loadAvailableDoctors();\n    }, 60000); // Refresh every minute\n\n    return () => clearInterval(interval);\n  }, [loadAvailableDoctors]);\n\n  // Don't render anything if no doctors or not visible\n  if (!isVisible || availableDoctors.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed top-8 right-4 z-40 py-1 px-3 rounded-full flex items-center shadow-md transition-all duration-500 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4 pointer-events-none'}`,\n    style: {\n      backgroundColor: isDarkMode ? colors.cardBg : 'white',\n      boxShadow: `0 4px 12px rgba(0, 0, 0, 0.1)`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2 h-2 rounded-full mr-2 animate-pulse\",\n      style: {\n        backgroundColor: colors.success\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs mr-1\",\n      style: {\n        color: colors.textPrimary\n      },\n      children: [availableDoctors.length, \" \", availableDoctors.length === 1 ? 'doctor' : 'doctors', \" available\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Users, {\n      size: 12,\n      style: {\n        color: colors.primary\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorAvailabilityIndicator, \"g8dQV/JwpwGU1ngfxMBmILWrHko=\", false, function () {\n  return [useTheme, useGlobalCallStore];\n});\n_c = DoctorAvailabilityIndicator;\nexport default DoctorAvailabilityIndicator;\nvar _c;\n$RefreshReg$(_c, \"DoctorAvailabilityIndicator\");","map":{"version":3,"names":["React","useState","useEffect","Users","useTheme","useGlobalCallStore","jsxDEV","_jsxDEV","DoctorAvailabilityIndicator","_s","colors","isDarkMode","availableDoctors","loadingDoctors","loadAvailableDoctors","isVisible","setIsVisible","length","timer","setTimeout","clearTimeout","interval","setInterval","clearInterval","className","style","backgroundColor","cardBg","boxShadow","children","success","fileName","_jsxFileName","lineNumber","columnNumber","color","textPrimary","size","primary","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver4/frontend2/src/components/screens/DoctorAvailabilityIndicator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Users } from 'lucide-react';\nimport { useTheme } from '../ThemeContext';\nimport useGlobalCallStore from '../services/GlobalCallService';\n\n/**\n * Shows a small indicator when doctors are available\n */\nconst DoctorAvailabilityIndicator = () => {\n  const { colors, isDarkMode } = useTheme();\n  const { availableDoctors, loadingDoctors, loadAvailableDoctors } = useGlobalCallStore();\n  const [isVisible, setIsVisible] = useState(false);\n  \n  // Effect to handle visibility of the indicator\n  useEffect(() => {\n    // Only show the indicator when we have doctors available\n    if (availableDoctors.length > 0 && !loadingDoctors) {\n      setIsVisible(true);\n      \n      // Hide the indicator after 5 seconds\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, 5000);\n      \n      return () => clearTimeout(timer);\n    } else {\n      setIsVisible(false);\n    }\n  }, [availableDoctors, loadingDoctors]);\n  \n  // Load doctors on mount and periodically refresh\n  useEffect(() => {\n    loadAvailableDoctors();\n    \n    const interval = setInterval(() => {\n      loadAvailableDoctors();\n    }, 60000); // Refresh every minute\n    \n    return () => clearInterval(interval);\n  }, [loadAvailableDoctors]);\n  \n  // Don't render anything if no doctors or not visible\n  if (!isVisible || availableDoctors.length === 0) {\n    return null;\n  }\n  \n  return (\n    <div \n      className={`fixed top-8 right-4 z-40 py-1 px-3 rounded-full flex items-center shadow-md transition-all duration-500 ${\n        isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4 pointer-events-none'\n      }`}\n      style={{ \n        backgroundColor: isDarkMode ? colors.cardBg : 'white',\n        boxShadow: `0 4px 12px rgba(0, 0, 0, 0.1)`\n      }}\n    >\n      <div className=\"w-2 h-2 rounded-full mr-2 animate-pulse\" style={{ backgroundColor: colors.success }}></div>\n      <span className=\"text-xs mr-1\" style={{ color: colors.textPrimary }}>\n        {availableDoctors.length} {availableDoctors.length === 1 ? 'doctor' : 'doctors'} available\n      </span>\n      <Users size={12} style={{ color: colors.primary }} />\n    </div>\n  );\n};\n\nexport default DoctorAvailabilityIndicator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}