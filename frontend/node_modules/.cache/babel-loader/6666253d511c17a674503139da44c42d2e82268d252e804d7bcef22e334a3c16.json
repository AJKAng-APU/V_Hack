{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx\",\n  _s = $RefreshSig$();\n// Fixed VideoDisplay.jsx with improved video rendering and state handling\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Users } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children,\n  callStatus\n}) => {\n  _s();\n  var _remoteVideoRef$curre;\n  // Dark mode specific colors\n  const videoOffBg = isDarkMode ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n\n  // State to track stream readiness\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n  const [hasVideoTracks, setHasVideoTracks] = useState(false);\n  const [playAttempts, setPlayAttempts] = useState(0);\n\n  // Refs for timers and stable state values\n  const playAttemptsRef = useRef(0);\n  const forcePlayTimer = useRef(null);\n  const trackCheckerTimer = useRef(null);\n\n  // Debug logging function\n  const log = message => console.log(`[VideoDisplay] ${message}`);\n\n  // Function to safely check for video tracks\n  const checkVideoTracks = () => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      const tracks = remoteVideoRef.current.srcObject.getTracks();\n      const videoTracks = tracks.filter(t => t.kind === 'video');\n      log(`Remote video has ${videoTracks.length} video tracks`);\n      setHasVideoTracks(videoTracks.length > 0);\n      return videoTracks.length > 0;\n    }\n    return false;\n  };\n\n  // Function to attempt playing video with fallbacks\n  const attemptPlayVideo = async () => {\n    if (!remoteVideoRef.current || !remoteVideoRef.current.srcObject) {\n      log('Cannot play video: no remote video ref or srcObject');\n      return false;\n    }\n    try {\n      log('Attempting to play remote video');\n      await remoteVideoRef.current.play();\n      log('Remote video playing successfully');\n      setRemotePlaying(true);\n      return true;\n    } catch (err) {\n      log(`Video play failed (attempt ${playAttemptsRef.current}): ${err.message}`);\n\n      // Try again with muted first (browsers allow muted autoplay)\n      try {\n        remoteVideoRef.current.muted = true;\n        await remoteVideoRef.current.play();\n        log('Remote video playing (muted first)');\n\n        // Now that it's playing, unmute if needed\n        setTimeout(() => {\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.muted = isSpeakerOff;\n          }\n        }, 1000);\n        setRemotePlaying(true);\n        return true;\n      } catch (e) {\n        log(`Video play failed even muted: ${e.message}`);\n\n        // Increment attempt counter\n        playAttemptsRef.current += 1;\n        setPlayAttempts(playAttemptsRef.current);\n        return false;\n      }\n    }\n  };\n\n  // Force check and play video at regular intervals\n  useEffect(() => {\n    // Clear any existing timers first\n    if (trackCheckerTimer.current) clearInterval(trackCheckerTimer.current);\n    if (forcePlayTimer.current) clearTimeout(forcePlayTimer.current);\n    if (remoteVideoRef.current) {\n      log('Setting up remote video monitoring');\n\n      // Initial check\n      checkVideoTracks();\n\n      // Set up video event listeners\n      const handleLoadedData = () => {\n        log('Remote video loadeddata event fired');\n        setRemoteReady(true);\n        attemptPlayVideo();\n        checkVideoTracks();\n      };\n      const handleCanPlay = () => {\n        log('Remote video canplay event fired');\n        setRemoteReady(true);\n        attemptPlayVideo();\n        checkVideoTracks();\n      };\n      const handlePlaying = () => {\n        log('Remote video playing event fired');\n        setRemotePlaying(true);\n        setRemoteReady(true);\n      };\n      const handlePause = () => {\n        log('Remote video pause event fired');\n        if (callStatus === 'active') {\n          log('Video paused but call active - attempting to resume');\n          attemptPlayVideo();\n        }\n      };\n\n      // Add event listeners\n      remoteVideoRef.current.addEventListener('loadeddata', handleLoadedData);\n      remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n      remoteVideoRef.current.addEventListener('playing', handlePlaying);\n      remoteVideoRef.current.addEventListener('pause', handlePause);\n\n      // Start periodic track checks\n      trackCheckerTimer.current = setInterval(() => {\n        const hasTracks = checkVideoTracks();\n\n        // If we have tracks but aren't playing, try to play\n        if (hasTracks && !remotePlaying && remoteVideoRef.current && !remoteVideoRef.current.paused && callStatus === 'active') {\n          attemptPlayVideo();\n        }\n\n        // If we're active but video is paused, try to play\n        if (callStatus === 'active' && remoteVideoRef.current && remoteVideoRef.current.paused && remoteVideoRef.current.srcObject) {\n          log('Video paused but call active - periodic check attempting to resume');\n          attemptPlayVideo();\n        }\n      }, 1000);\n\n      // Set up play retry for edge cases\n      const setupForcePlayTimeout = () => {\n        if (forcePlayTimer.current) clearTimeout(forcePlayTimer.current);\n        forcePlayTimer.current = setTimeout(async () => {\n          if (callStatus === 'active' && remoteVideoRef.current) {\n            const isPlaying = !remoteVideoRef.current.paused;\n            if (!isPlaying && remoteVideoRef.current.srcObject) {\n              log(`Force play attempt ${playAttemptsRef.current + 1}: video not playing but call active`);\n              const success = await attemptPlayVideo();\n\n              // Schedule another attempt if needed\n              if (!success && playAttemptsRef.current < 5) {\n                setupForcePlayTimeout();\n              }\n            }\n          }\n        }, 2000);\n      };\n\n      // Initial forced play attempt for safety\n      setupForcePlayTimeout();\n      return () => {\n        // Clean up event listeners\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.removeEventListener('loadeddata', handleLoadedData);\n          remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n          remoteVideoRef.current.removeEventListener('playing', handlePlaying);\n          remoteVideoRef.current.removeEventListener('pause', handlePause);\n        }\n\n        // Clear timers\n        if (trackCheckerTimer.current) clearInterval(trackCheckerTimer.current);\n        if (forcePlayTimer.current) clearTimeout(forcePlayTimer.current);\n      };\n    }\n  }, [remoteVideoRef.current, callStatus]);\n\n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      log('Remote video srcObject changed');\n      checkVideoTracks();\n\n      // Try to play the video when srcObject changes\n      if (callStatus === 'active') {\n        attemptPlayVideo();\n      }\n    }\n  }, [(_remoteVideoRef$curre = remoteVideoRef.current) === null || _remoteVideoRef$curre === void 0 ? void 0 : _remoteVideoRef$curre.srcObject]);\n\n  // Handle speaker mute changes\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      remoteVideoRef.current.muted = isSpeakerOff;\n      log(`Updated remote video muted state: ${isSpeakerOff}`);\n    }\n  }, [isSpeakerOff]);\n\n  // Use this condition to determine if we should show the actual remote video\n  const showRemoteVideo = callStatus === 'active' || hasVideoTracks || remoteReady;\n  log(`Render state - callStatus: ${callStatus}, hasVideoTracks: ${hasVideoTracks}, remoteReady: ${remoteReady}, showRemoteVideo: ${showRemoteVideo}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black dark-mode-transition\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: isSpeakerOff,\n          className: \"w-full h-full object-cover\",\n          style: {\n            visibility: showRemoteVideo ? 'visible' : 'hidden',\n            display: 'block',\n            zIndex: 10 // Ensure video is on top\n          },\n          onError: e => console.error(\"[VideoDisplay] Remote video error:\", e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), children, connectionQuality !== 'good' && reconnectAttempt > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\",\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            backdropFilter: 'blur(4px)',\n            zIndex: 30 // Higher zIndex to show above video\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-white font-medium\",\n              children: [\"Reconnecting\", reconnectAttempt > 1 ? ` (${reconnectAttempt})` : '', \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), (isVideoOff || !hasVideoTracks || !showRemoteVideo) && callStatus === 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center dark-mode-transition\",\n          style: {\n            background: isDarkMode ? colors.darkBg : '#000811',\n            zIndex: 15 // Higher than video but lower than reconnecting indicator\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (doctor === null || doctor === void 0 ? void 0 : doctor.image) || '/User_1.png',\n              alt: (doctor === null || doctor === void 0 ? void 0 : doctor.name) || 'Doctor',\n              className: \"w-full h-full object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), callStatus === 'active' && !remoteReady && !hasVideoTracks && playAttempts > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center dark-mode-transition\",\n          style: {\n            background: 'rgba(0, 0, 0, 0.7)',\n            zIndex: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-16 h-16 rounded-full border-4 border-white border-opacity-20 border-t-white animate-spin mb-4 mx-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white text-lg font-medium\",\n              children: \"Establishing video...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white text-opacity-70 text-sm\",\n              children: \"Call is connected, setting up video feed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\",\n      style: {\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n        zIndex: 40,\n        // Highest zIndex to always be on top\n        backgroundColor: 'black',\n        transform: showControls ? 'scale(1)' : 'scale(0.95)',\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true // Always mute local video to prevent feedback\n        ,\n        className: \"w-full h-full object-cover\",\n        style: {\n          display: isVideoOff ? 'none' : 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`,\n        style: {\n          background: videoOffBg\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), isVideoOff && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            size: 18,\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoDisplay, \"ll4qnkyY2IASclV03gt/JOl3uB8=\");\n_c = VideoDisplay;\nexport default VideoDisplay;\nvar _c;\n$RefreshReg$(_c, \"VideoDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Users","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoDisplay","remoteVideoRef","localVideoRef","isSpeakerOff","isVideoOff","doctor","connectionQuality","reconnectAttempt","showControls","isDarkMode","colors","children","callStatus","_s","_remoteVideoRef$curre","videoOffBg","darkBg","primaryDark","remoteReady","setRemoteReady","remotePlaying","setRemotePlaying","hasVideoTracks","setHasVideoTracks","playAttempts","setPlayAttempts","playAttemptsRef","forcePlayTimer","trackCheckerTimer","log","message","console","checkVideoTracks","current","srcObject","tracks","getTracks","videoTracks","filter","t","kind","length","attemptPlayVideo","play","err","muted","setTimeout","e","clearInterval","clearTimeout","handleLoadedData","handleCanPlay","handlePlaying","handlePause","addEventListener","setInterval","hasTracks","paused","setupForcePlayTimeout","isPlaying","success","removeEventListener","showRemoteVideo","className","ref","autoPlay","playsInline","style","visibility","display","zIndex","onError","error","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","backdropFilter","background","src","image","alt","name","boxShadow","transform","transition","size","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx"],"sourcesContent":["// Fixed VideoDisplay.jsx with improved video rendering and state handling\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Users } from 'lucide-react';\n\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children,\n  callStatus\n}) => {\n  // Dark mode specific colors\n  const videoOffBg = isDarkMode \n    ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` \n    : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n  \n  // State to track stream readiness\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n  const [hasVideoTracks, setHasVideoTracks] = useState(false);\n  const [playAttempts, setPlayAttempts] = useState(0);\n  \n  // Refs for timers and stable state values\n  const playAttemptsRef = useRef(0);\n  const forcePlayTimer = useRef(null);\n  const trackCheckerTimer = useRef(null);\n  \n  // Debug logging function\n  const log = (message) => console.log(`[VideoDisplay] ${message}`);\n\n  // Function to safely check for video tracks\n  const checkVideoTracks = () => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      const tracks = remoteVideoRef.current.srcObject.getTracks();\n      const videoTracks = tracks.filter(t => t.kind === 'video');\n      log(`Remote video has ${videoTracks.length} video tracks`);\n      setHasVideoTracks(videoTracks.length > 0);\n      return videoTracks.length > 0;\n    }\n    return false;\n  };\n  \n  // Function to attempt playing video with fallbacks\n  const attemptPlayVideo = async () => {\n    if (!remoteVideoRef.current || !remoteVideoRef.current.srcObject) {\n      log('Cannot play video: no remote video ref or srcObject');\n      return false;\n    }\n    \n    try {\n      log('Attempting to play remote video');\n      await remoteVideoRef.current.play();\n      log('Remote video playing successfully');\n      setRemotePlaying(true);\n      return true;\n    } catch (err) {\n      log(`Video play failed (attempt ${playAttemptsRef.current}): ${err.message}`);\n      \n      // Try again with muted first (browsers allow muted autoplay)\n      try {\n        remoteVideoRef.current.muted = true;\n        await remoteVideoRef.current.play();\n        log('Remote video playing (muted first)');\n        \n        // Now that it's playing, unmute if needed\n        setTimeout(() => {\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.muted = isSpeakerOff;\n          }\n        }, 1000);\n        \n        setRemotePlaying(true);\n        return true;\n      } catch (e) {\n        log(`Video play failed even muted: ${e.message}`);\n        \n        // Increment attempt counter\n        playAttemptsRef.current += 1;\n        setPlayAttempts(playAttemptsRef.current);\n        \n        return false;\n      }\n    }\n  };\n\n  // Force check and play video at regular intervals\n  useEffect(() => {\n    // Clear any existing timers first\n    if (trackCheckerTimer.current) clearInterval(trackCheckerTimer.current);\n    if (forcePlayTimer.current) clearTimeout(forcePlayTimer.current);\n    \n    if (remoteVideoRef.current) {\n      log('Setting up remote video monitoring');\n      \n      // Initial check\n      checkVideoTracks();\n      \n      // Set up video event listeners\n      const handleLoadedData = () => {\n        log('Remote video loadeddata event fired');\n        setRemoteReady(true);\n        attemptPlayVideo();\n        checkVideoTracks();\n      };\n      \n      const handleCanPlay = () => {\n        log('Remote video canplay event fired');\n        setRemoteReady(true);\n        attemptPlayVideo();\n        checkVideoTracks();\n      };\n      \n      const handlePlaying = () => {\n        log('Remote video playing event fired');\n        setRemotePlaying(true);\n        setRemoteReady(true);\n      };\n      \n      const handlePause = () => {\n        log('Remote video pause event fired');\n        if (callStatus === 'active') {\n          log('Video paused but call active - attempting to resume');\n          attemptPlayVideo();\n        }\n      };\n      \n      // Add event listeners\n      remoteVideoRef.current.addEventListener('loadeddata', handleLoadedData);\n      remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n      remoteVideoRef.current.addEventListener('playing', handlePlaying);\n      remoteVideoRef.current.addEventListener('pause', handlePause);\n      \n      // Start periodic track checks\n      trackCheckerTimer.current = setInterval(() => {\n        const hasTracks = checkVideoTracks();\n        \n        // If we have tracks but aren't playing, try to play\n        if (hasTracks && !remotePlaying && remoteVideoRef.current && \n            !remoteVideoRef.current.paused && callStatus === 'active') {\n          attemptPlayVideo();\n        }\n        \n        // If we're active but video is paused, try to play\n        if (callStatus === 'active' && remoteVideoRef.current && \n            remoteVideoRef.current.paused && remoteVideoRef.current.srcObject) {\n          log('Video paused but call active - periodic check attempting to resume');\n          attemptPlayVideo();\n        }\n      }, 1000);\n      \n      // Set up play retry for edge cases\n      const setupForcePlayTimeout = () => {\n        if (forcePlayTimer.current) clearTimeout(forcePlayTimer.current);\n        \n        forcePlayTimer.current = setTimeout(async () => {\n          if (callStatus === 'active' && remoteVideoRef.current) {\n            const isPlaying = !remoteVideoRef.current.paused;\n            \n            if (!isPlaying && remoteVideoRef.current.srcObject) {\n              log(`Force play attempt ${playAttemptsRef.current + 1}: video not playing but call active`);\n              const success = await attemptPlayVideo();\n              \n              // Schedule another attempt if needed\n              if (!success && playAttemptsRef.current < 5) {\n                setupForcePlayTimeout();\n              }\n            }\n          }\n        }, 2000);\n      };\n      \n      // Initial forced play attempt for safety\n      setupForcePlayTimeout();\n      \n      return () => {\n        // Clean up event listeners\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.removeEventListener('loadeddata', handleLoadedData);\n          remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n          remoteVideoRef.current.removeEventListener('playing', handlePlaying);\n          remoteVideoRef.current.removeEventListener('pause', handlePause);\n        }\n        \n        // Clear timers\n        if (trackCheckerTimer.current) clearInterval(trackCheckerTimer.current);\n        if (forcePlayTimer.current) clearTimeout(forcePlayTimer.current);\n      };\n    }\n  }, [remoteVideoRef.current, callStatus]);\n  \n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      log('Remote video srcObject changed');\n      checkVideoTracks();\n      \n      // Try to play the video when srcObject changes\n      if (callStatus === 'active') {\n        attemptPlayVideo();\n      }\n    }\n  }, [remoteVideoRef.current?.srcObject]);\n  \n  // Handle speaker mute changes\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      remoteVideoRef.current.muted = isSpeakerOff;\n      log(`Updated remote video muted state: ${isSpeakerOff}`);\n    }\n  }, [isSpeakerOff]);\n\n  // Use this condition to determine if we should show the actual remote video\n  const showRemoteVideo = callStatus === 'active' || hasVideoTracks || remoteReady;\n  \n  log(`Render state - callStatus: ${callStatus}, hasVideoTracks: ${hasVideoTracks}, remoteReady: ${remoteReady}, showRemoteVideo: ${showRemoteVideo}`);\n\n  return (\n    <>\n      {/* Doctor video (remote) */}\n      <div className=\"absolute inset-0 bg-black dark-mode-transition\">\n        <div className=\"h-full relative\">\n          {/* Remote video element - ALWAYS RENDER BUT CONTROL VISIBILITY */}\n          <video\n            ref={remoteVideoRef}\n            autoPlay\n            playsInline\n            muted={isSpeakerOff}\n            className=\"w-full h-full object-cover\"\n            style={{\n              visibility: showRemoteVideo ? 'visible' : 'hidden', \n              display: 'block',\n              zIndex: 10  // Ensure video is on top\n            }}\n            onError={(e) => console.error(\"[VideoDisplay] Remote video error:\", e)}\n          />\n          \n          {/* Pass children (call header & connection status) */}\n          {children}\n          \n          {/* Reconnecting indicator */}\n          {connectionQuality !== 'good' && reconnectAttempt > 0 && (\n            <div \n              className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\"\n              style={{ \n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                backdropFilter: 'blur(4px)',\n                zIndex: 30  // Higher zIndex to show above video\n              }}\n            >\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"></div>\n                <span className=\"text-sm text-white font-medium\">Reconnecting{reconnectAttempt > 1 ? ` (${reconnectAttempt})` : ''}...</span>\n              </div>\n            </div>\n          )}\n          \n          {/* Fallback when remote video is off or not available yet */}\n          {((isVideoOff || !hasVideoTracks || !showRemoteVideo) && callStatus === 'active') && (\n            <div className=\"absolute inset-0 flex items-center justify-center dark-mode-transition\"\n                 style={{ \n                   background: isDarkMode ? colors.darkBg : '#000811',\n                   zIndex: 15  // Higher than video but lower than reconnecting indicator\n                 }}>\n              <div className=\"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\">\n                <img src={doctor?.image || '/User_1.png'} alt={doctor?.name || 'Doctor'} className=\"w-full h-full object-cover\" />\n              </div>\n            </div>\n          )}\n          \n          {/* Connecting state for active call that's still setting up */}\n          {(callStatus === 'active' && !remoteReady && !hasVideoTracks && playAttempts > 2) && (\n            <div className=\"absolute inset-0 flex items-center justify-center dark-mode-transition\"\n                 style={{ \n                   background: 'rgba(0, 0, 0, 0.7)',\n                   zIndex: 20\n                 }}>\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 rounded-full border-4 border-white border-opacity-20 border-t-white animate-spin mb-4 mx-auto\"></div>\n                <p className=\"text-white text-lg font-medium\">Establishing video...</p>\n                <p className=\"text-white text-opacity-70 text-sm\">Call is connected, setting up video feed</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* User video (local) */}\n      <div className=\"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\"\n           style={{ \n             boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n             zIndex: 40,  // Highest zIndex to always be on top\n             backgroundColor: 'black',\n             transform: showControls ? 'scale(1)' : 'scale(0.95)',\n             transition: 'all 0.3s ease'\n           }}>\n        {/* Local video element */}\n        <video\n          ref={localVideoRef}\n          autoPlay\n          playsInline\n          muted={true} // Always mute local video to prevent feedback\n          className=\"w-full h-full object-cover\"\n          style={{ display: isVideoOff ? 'none' : 'block' }}\n        />\n        \n        {/* Background when video is off */}\n        <div className={`absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`} \n             style={{ background: videoOffBg }}>\n        </div>\n        \n        {/* User placeholder when video is off */}\n        {isVideoOff && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\">\n              <Users size={18} className=\"text-white\" />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default VideoDisplay;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,YAAY,GAAGA,CAAC;EACpBC,cAAc;EACdC,aAAa;EACbC,YAAY;EACZC,UAAU;EACVC,MAAM;EACNC,iBAAiB;EACjBC,gBAAgB;EAChBC,YAAY;EACZC,UAAU;EACVC,MAAM;EACNC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACJ;EACA,MAAMC,UAAU,GAAGN,UAAU,GACzB,2BAA2BC,MAAM,CAACM,MAAM,YAAY,GACpD,2BAA2BN,MAAM,CAACO,WAAW,YAAY;;EAE7D;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMiC,eAAe,GAAGhC,MAAM,CAAC,CAAC,CAAC;EACjC,MAAMiC,cAAc,GAAGjC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMkC,iBAAiB,GAAGlC,MAAM,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMmC,GAAG,GAAIC,OAAO,IAAKC,OAAO,CAACF,GAAG,CAAC,kBAAkBC,OAAO,EAAE,CAAC;;EAEjE;EACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI/B,cAAc,CAACgC,OAAO,IAAIhC,cAAc,CAACgC,OAAO,CAACC,SAAS,EAAE;MAC9D,MAAMC,MAAM,GAAGlC,cAAc,CAACgC,OAAO,CAACC,SAAS,CAACE,SAAS,CAAC,CAAC;MAC3D,MAAMC,WAAW,GAAGF,MAAM,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,OAAO,CAAC;MAC1DX,GAAG,CAAC,oBAAoBQ,WAAW,CAACI,MAAM,eAAe,CAAC;MAC1DlB,iBAAiB,CAACc,WAAW,CAACI,MAAM,GAAG,CAAC,CAAC;MACzC,OAAOJ,WAAW,CAACI,MAAM,GAAG,CAAC;IAC/B;IACA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACzC,cAAc,CAACgC,OAAO,IAAI,CAAChC,cAAc,CAACgC,OAAO,CAACC,SAAS,EAAE;MAChEL,GAAG,CAAC,qDAAqD,CAAC;MAC1D,OAAO,KAAK;IACd;IAEA,IAAI;MACFA,GAAG,CAAC,iCAAiC,CAAC;MACtC,MAAM5B,cAAc,CAACgC,OAAO,CAACU,IAAI,CAAC,CAAC;MACnCd,GAAG,CAAC,mCAAmC,CAAC;MACxCR,gBAAgB,CAAC,IAAI,CAAC;MACtB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZf,GAAG,CAAC,8BAA8BH,eAAe,CAACO,OAAO,MAAMW,GAAG,CAACd,OAAO,EAAE,CAAC;;MAE7E;MACA,IAAI;QACF7B,cAAc,CAACgC,OAAO,CAACY,KAAK,GAAG,IAAI;QACnC,MAAM5C,cAAc,CAACgC,OAAO,CAACU,IAAI,CAAC,CAAC;QACnCd,GAAG,CAAC,oCAAoC,CAAC;;QAEzC;QACAiB,UAAU,CAAC,MAAM;UACf,IAAI7C,cAAc,CAACgC,OAAO,EAAE;YAC1BhC,cAAc,CAACgC,OAAO,CAACY,KAAK,GAAG1C,YAAY;UAC7C;QACF,CAAC,EAAE,IAAI,CAAC;QAERkB,gBAAgB,CAAC,IAAI,CAAC;QACtB,OAAO,IAAI;MACb,CAAC,CAAC,OAAO0B,CAAC,EAAE;QACVlB,GAAG,CAAC,iCAAiCkB,CAAC,CAACjB,OAAO,EAAE,CAAC;;QAEjD;QACAJ,eAAe,CAACO,OAAO,IAAI,CAAC;QAC5BR,eAAe,CAACC,eAAe,CAACO,OAAO,CAAC;QAExC,OAAO,KAAK;MACd;IACF;EACF,CAAC;;EAED;EACAzC,SAAS,CAAC,MAAM;IACd;IACA,IAAIoC,iBAAiB,CAACK,OAAO,EAAEe,aAAa,CAACpB,iBAAiB,CAACK,OAAO,CAAC;IACvE,IAAIN,cAAc,CAACM,OAAO,EAAEgB,YAAY,CAACtB,cAAc,CAACM,OAAO,CAAC;IAEhE,IAAIhC,cAAc,CAACgC,OAAO,EAAE;MAC1BJ,GAAG,CAAC,oCAAoC,CAAC;;MAEzC;MACAG,gBAAgB,CAAC,CAAC;;MAElB;MACA,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;QAC7BrB,GAAG,CAAC,qCAAqC,CAAC;QAC1CV,cAAc,CAAC,IAAI,CAAC;QACpBuB,gBAAgB,CAAC,CAAC;QAClBV,gBAAgB,CAAC,CAAC;MACpB,CAAC;MAED,MAAMmB,aAAa,GAAGA,CAAA,KAAM;QAC1BtB,GAAG,CAAC,kCAAkC,CAAC;QACvCV,cAAc,CAAC,IAAI,CAAC;QACpBuB,gBAAgB,CAAC,CAAC;QAClBV,gBAAgB,CAAC,CAAC;MACpB,CAAC;MAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;QAC1BvB,GAAG,CAAC,kCAAkC,CAAC;QACvCR,gBAAgB,CAAC,IAAI,CAAC;QACtBF,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MAED,MAAMkC,WAAW,GAAGA,CAAA,KAAM;QACxBxB,GAAG,CAAC,gCAAgC,CAAC;QACrC,IAAIjB,UAAU,KAAK,QAAQ,EAAE;UAC3BiB,GAAG,CAAC,qDAAqD,CAAC;UAC1Da,gBAAgB,CAAC,CAAC;QACpB;MACF,CAAC;;MAED;MACAzC,cAAc,CAACgC,OAAO,CAACqB,gBAAgB,CAAC,YAAY,EAAEJ,gBAAgB,CAAC;MACvEjD,cAAc,CAACgC,OAAO,CAACqB,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;MACjElD,cAAc,CAACgC,OAAO,CAACqB,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;MACjEnD,cAAc,CAACgC,OAAO,CAACqB,gBAAgB,CAAC,OAAO,EAAED,WAAW,CAAC;;MAE7D;MACAzB,iBAAiB,CAACK,OAAO,GAAGsB,WAAW,CAAC,MAAM;QAC5C,MAAMC,SAAS,GAAGxB,gBAAgB,CAAC,CAAC;;QAEpC;QACA,IAAIwB,SAAS,IAAI,CAACpC,aAAa,IAAInB,cAAc,CAACgC,OAAO,IACrD,CAAChC,cAAc,CAACgC,OAAO,CAACwB,MAAM,IAAI7C,UAAU,KAAK,QAAQ,EAAE;UAC7D8B,gBAAgB,CAAC,CAAC;QACpB;;QAEA;QACA,IAAI9B,UAAU,KAAK,QAAQ,IAAIX,cAAc,CAACgC,OAAO,IACjDhC,cAAc,CAACgC,OAAO,CAACwB,MAAM,IAAIxD,cAAc,CAACgC,OAAO,CAACC,SAAS,EAAE;UACrEL,GAAG,CAAC,oEAAoE,CAAC;UACzEa,gBAAgB,CAAC,CAAC;QACpB;MACF,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,MAAMgB,qBAAqB,GAAGA,CAAA,KAAM;QAClC,IAAI/B,cAAc,CAACM,OAAO,EAAEgB,YAAY,CAACtB,cAAc,CAACM,OAAO,CAAC;QAEhEN,cAAc,CAACM,OAAO,GAAGa,UAAU,CAAC,YAAY;UAC9C,IAAIlC,UAAU,KAAK,QAAQ,IAAIX,cAAc,CAACgC,OAAO,EAAE;YACrD,MAAM0B,SAAS,GAAG,CAAC1D,cAAc,CAACgC,OAAO,CAACwB,MAAM;YAEhD,IAAI,CAACE,SAAS,IAAI1D,cAAc,CAACgC,OAAO,CAACC,SAAS,EAAE;cAClDL,GAAG,CAAC,sBAAsBH,eAAe,CAACO,OAAO,GAAG,CAAC,qCAAqC,CAAC;cAC3F,MAAM2B,OAAO,GAAG,MAAMlB,gBAAgB,CAAC,CAAC;;cAExC;cACA,IAAI,CAACkB,OAAO,IAAIlC,eAAe,CAACO,OAAO,GAAG,CAAC,EAAE;gBAC3CyB,qBAAqB,CAAC,CAAC;cACzB;YACF;UACF;QACF,CAAC,EAAE,IAAI,CAAC;MACV,CAAC;;MAED;MACAA,qBAAqB,CAAC,CAAC;MAEvB,OAAO,MAAM;QACX;QACA,IAAIzD,cAAc,CAACgC,OAAO,EAAE;UAC1BhC,cAAc,CAACgC,OAAO,CAAC4B,mBAAmB,CAAC,YAAY,EAAEX,gBAAgB,CAAC;UAC1EjD,cAAc,CAACgC,OAAO,CAAC4B,mBAAmB,CAAC,SAAS,EAAEV,aAAa,CAAC;UACpElD,cAAc,CAACgC,OAAO,CAAC4B,mBAAmB,CAAC,SAAS,EAAET,aAAa,CAAC;UACpEnD,cAAc,CAACgC,OAAO,CAAC4B,mBAAmB,CAAC,OAAO,EAAER,WAAW,CAAC;QAClE;;QAEA;QACA,IAAIzB,iBAAiB,CAACK,OAAO,EAAEe,aAAa,CAACpB,iBAAiB,CAACK,OAAO,CAAC;QACvE,IAAIN,cAAc,CAACM,OAAO,EAAEgB,YAAY,CAACtB,cAAc,CAACM,OAAO,CAAC;MAClE,CAAC;IACH;EACF,CAAC,EAAE,CAAChC,cAAc,CAACgC,OAAO,EAAErB,UAAU,CAAC,CAAC;;EAExC;EACApB,SAAS,CAAC,MAAM;IACd,IAAIS,cAAc,CAACgC,OAAO,IAAIhC,cAAc,CAACgC,OAAO,CAACC,SAAS,EAAE;MAC9DL,GAAG,CAAC,gCAAgC,CAAC;MACrCG,gBAAgB,CAAC,CAAC;;MAElB;MACA,IAAIpB,UAAU,KAAK,QAAQ,EAAE;QAC3B8B,gBAAgB,CAAC,CAAC;MACpB;IACF;EACF,CAAC,EAAE,EAAA5B,qBAAA,GAACb,cAAc,CAACgC,OAAO,cAAAnB,qBAAA,uBAAtBA,qBAAA,CAAwBoB,SAAS,CAAC,CAAC;;EAEvC;EACA1C,SAAS,CAAC,MAAM;IACd,IAAIS,cAAc,CAACgC,OAAO,EAAE;MAC1BhC,cAAc,CAACgC,OAAO,CAACY,KAAK,GAAG1C,YAAY;MAC3C0B,GAAG,CAAC,qCAAqC1B,YAAY,EAAE,CAAC;IAC1D;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAM2D,eAAe,GAAGlD,UAAU,KAAK,QAAQ,IAAIU,cAAc,IAAIJ,WAAW;EAEhFW,GAAG,CAAC,8BAA8BjB,UAAU,qBAAqBU,cAAc,kBAAkBJ,WAAW,sBAAsB4C,eAAe,EAAE,CAAC;EAEpJ,oBACEjE,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBAEEd,OAAA;MAAKkE,SAAS,EAAC,gDAAgD;MAAApD,QAAA,eAC7Dd,OAAA;QAAKkE,SAAS,EAAC,iBAAiB;QAAApD,QAAA,gBAE9Bd,OAAA;UACEmE,GAAG,EAAE/D,cAAe;UACpBgE,QAAQ;UACRC,WAAW;UACXrB,KAAK,EAAE1C,YAAa;UACpB4D,SAAS,EAAC,4BAA4B;UACtCI,KAAK,EAAE;YACLC,UAAU,EAAEN,eAAe,GAAG,SAAS,GAAG,QAAQ;YAClDO,OAAO,EAAE,OAAO;YAChBC,MAAM,EAAE,EAAE,CAAE;UACd,CAAE;UACFC,OAAO,EAAGxB,CAAC,IAAKhB,OAAO,CAACyC,KAAK,CAAC,oCAAoC,EAAEzB,CAAC;QAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,EAGDjE,QAAQ,EAGRL,iBAAiB,KAAK,MAAM,IAAIC,gBAAgB,GAAG,CAAC,iBACnDV,OAAA;UACEkE,SAAS,EAAC,4FAA4F;UACtGI,KAAK,EAAE;YACLU,eAAe,EAAE,oBAAoB;YACrCC,cAAc,EAAE,WAAW;YAC3BR,MAAM,EAAE,EAAE,CAAE;UACd,CAAE;UAAA3D,QAAA,eAEFd,OAAA;YAAKkE,SAAS,EAAC,4BAA4B;YAAApD,QAAA,gBACzCd,OAAA;cAAKkE,SAAS,EAAC;YAA+F;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrH/E,OAAA;cAAMkE,SAAS,EAAC,gCAAgC;cAAApD,QAAA,GAAC,cAAY,EAACJ,gBAAgB,GAAG,CAAC,GAAG,KAAKA,gBAAgB,GAAG,GAAG,EAAE,EAAC,KAAG;YAAA;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1H;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGC,CAACxE,UAAU,IAAI,CAACkB,cAAc,IAAI,CAACwC,eAAe,KAAKlD,UAAU,KAAK,QAAQ,iBAC9Ef,OAAA;UAAKkE,SAAS,EAAC,wEAAwE;UAClFI,KAAK,EAAE;YACLY,UAAU,EAAEtE,UAAU,GAAGC,MAAM,CAACM,MAAM,GAAG,SAAS;YAClDsD,MAAM,EAAE,EAAE,CAAE;UACd,CAAE;UAAA3D,QAAA,eACLd,OAAA;YAAKkE,SAAS,EAAC,gFAAgF;YAAApD,QAAA,eAC7Fd,OAAA;cAAKmF,GAAG,EAAE,CAAA3E,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE4E,KAAK,KAAI,aAAc;cAACC,GAAG,EAAE,CAAA7E,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE8E,IAAI,KAAI,QAAS;cAACpB,SAAS,EAAC;YAA4B;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/G;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGChE,UAAU,KAAK,QAAQ,IAAI,CAACM,WAAW,IAAI,CAACI,cAAc,IAAIE,YAAY,GAAG,CAAC,iBAC9E3B,OAAA;UAAKkE,SAAS,EAAC,wEAAwE;UAClFI,KAAK,EAAE;YACLY,UAAU,EAAE,oBAAoB;YAChCT,MAAM,EAAE;UACV,CAAE;UAAA3D,QAAA,eACLd,OAAA;YAAKkE,SAAS,EAAC,aAAa;YAAApD,QAAA,gBAC1Bd,OAAA;cAAKkE,SAAS,EAAC;YAAyG;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC/H/E,OAAA;cAAGkE,SAAS,EAAC,gCAAgC;cAAApD,QAAA,EAAC;YAAqB;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvE/E,OAAA;cAAGkE,SAAS,EAAC,oCAAoC;cAAApD,QAAA,EAAC;YAAwC;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN/E,OAAA;MAAKkE,SAAS,EAAC,uFAAuF;MACjGI,KAAK,EAAE;QACLiB,SAAS,EAAE,+BAA+B;QAC1Cd,MAAM,EAAE,EAAE;QAAG;QACbO,eAAe,EAAE,OAAO;QACxBQ,SAAS,EAAE7E,YAAY,GAAG,UAAU,GAAG,aAAa;QACpD8E,UAAU,EAAE;MACd,CAAE;MAAA3E,QAAA,gBAELd,OAAA;QACEmE,GAAG,EAAE9D,aAAc;QACnB+D,QAAQ;QACRC,WAAW;QACXrB,KAAK,EAAE,IAAK,CAAC;QAAA;QACbkB,SAAS,EAAC,4BAA4B;QACtCI,KAAK,EAAE;UAAEE,OAAO,EAAEjE,UAAU,GAAG,MAAM,GAAG;QAAQ;MAAE;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAGF/E,OAAA;QAAKkE,SAAS,EAAE,yCAAyC3D,UAAU,GAAG,EAAE,GAAG,QAAQ,EAAG;QACjF+D,KAAK,EAAE;UAAEY,UAAU,EAAEhE;QAAW;MAAE;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EAGLxE,UAAU,iBACTP,OAAA;QAAKkE,SAAS,EAAC,mDAAmD;QAAApD,QAAA,eAChEd,OAAA;UAAKkE,SAAS,EAAC,gFAAgF;UAAApD,QAAA,eAC7Fd,OAAA,CAACF,KAAK;YAAC4F,IAAI,EAAE,EAAG;YAACxB,SAAS,EAAC;UAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC/D,EAAA,CApUIb,YAAY;AAAAwF,EAAA,GAAZxF,YAAY;AAsUlB,eAAeA,YAAY;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}