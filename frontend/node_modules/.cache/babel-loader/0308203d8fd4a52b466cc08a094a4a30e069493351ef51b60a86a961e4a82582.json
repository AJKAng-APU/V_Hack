{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack/src/components/HealthAssistantUI/screens/MedicationsScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlusCircle, Search, Filter, Calendar, Zap, CheckCircle, Clock, X, Pill, AlertTriangle } from \"lucide-react\";\nimport { useTheme } from '../ThemeContext'; // Import the useTheme hook\n\n// Import sub-components\nimport MedicationList from '../shared/MedicationList';\nimport MedicationDetail from '../shared/MedicationDetail';\nimport MedicationHistory from '../shared/MedicationHistory';\nimport MedicationSchedule from '../shared/MedicationSchedule';\nimport MedicationInteractions from '../shared/MedicationInteractions';\nimport AddMedicationForm from '../shared/AddMedicationForm';\n\n// Import biorhythm engine\nimport { biorhythmEngine, formatTimeWindows } from '../services/BiorhythmEngine';\n\n// Main component for medication management with biorhythm integration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MedicationsScreen = ({\n  colors,\n  setActiveScreen\n}) => {\n  _s();\n  // Get theme context for dark mode\n  const {\n    isDarkMode\n  } = useTheme();\n\n  // View state (main, detail, add, history, schedule, interactions)\n  const [view, setView] = useState('main');\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddOptions, setShowAddOptions] = useState(false);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [biorhythmOptimized, setBiorhythmOptimized] = useState(false);\n  const [biorhythmData, setBiorhythmData] = useState(null);\n  const [optimizedMeds, setOptimizedMeds] = useState([]);\n\n  // Mock medication data - in a real app, this would come from API/database\n  const [medications, setMedications] = useState([{\n    id: 1,\n    name: \"Metformin\",\n    dosage: \"500mg\",\n    schedule: [{\n      time: \"8:00 AM\",\n      status: \"taken\",\n      day: \"today\"\n    }, {\n      time: \"9:00 PM\",\n      status: \"upcoming\",\n      day: \"today\"\n    }],\n    instructions: \"Take with food to reduce stomach upset\",\n    purpose: \"Controls blood sugar levels\",\n    refillDate: \"April 15, 2025\",\n    refillRemaining: 8,\n    prescribedBy: \"Dr. Johnson\",\n    startDate: \"January 15, 2025\",\n    category: \"metabolic\",\n    interactions: [{\n      medication: \"Ibuprofen\",\n      severity: \"moderate\",\n      description: \"May reduce effectiveness and increase risk of low blood sugar\"\n    }, {\n      medication: \"Alcohol\",\n      severity: \"high\",\n      description: \"Can cause dangerously low blood sugar and lactic acidosis\"\n    }],\n    sideEffects: [\"Nausea\", \"Diarrhea\", \"Stomach upset\", \"Metallic taste\"],\n    adherenceRate: 92,\n    missedDoses: 2,\n    history: [{\n      date: \"Mar 22, 2025\",\n      time: \"8:05 AM\",\n      status: \"taken\",\n      delay: \"5 min late\"\n    }, {\n      date: \"Mar 21, 2025\",\n      time: \"8:12 AM\",\n      status: \"taken\",\n      delay: \"12 min late\"\n    }, {\n      date: \"Mar 21, 2025\",\n      time: \"9:00 PM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 20, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 20, 2025\",\n      time: \"9:00 PM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 19, 2025\",\n      time: \"8:00 AM\",\n      status: \"missed\",\n      delay: \"missed\"\n    }, {\n      date: \"Mar 19, 2025\",\n      time: \"9:00 PM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }]\n  }, {\n    id: 2,\n    name: \"Lisinopril\",\n    dosage: \"10mg\",\n    schedule: [{\n      time: \"8:00 AM\",\n      status: \"taken\",\n      day: \"today\"\n    }],\n    instructions: \"Take on an empty stomach\",\n    purpose: \"Controls blood pressure\",\n    refillDate: \"April 8, 2025\",\n    refillRemaining: 3,\n    prescribedBy: \"Dr. Smith\",\n    startDate: \"December 10, 2024\",\n    category: \"cardiovascular\",\n    interactions: [{\n      medication: \"Potassium supplements\",\n      severity: \"high\",\n      description: \"Can cause dangerously high potassium levels\"\n    }, {\n      medication: \"NSAIDs\",\n      severity: \"moderate\",\n      description: \"May reduce blood pressure lowering effects\"\n    }],\n    sideEffects: [\"Dry cough\", \"Dizziness\", \"Headache\"],\n    adherenceRate: 95,\n    missedDoses: 1,\n    history: [{\n      date: \"Mar 22, 2025\",\n      time: \"8:05 AM\",\n      status: \"taken\",\n      delay: \"5 min late\"\n    }, {\n      date: \"Mar 21, 2025\",\n      time: \"8:10 AM\",\n      status: \"taken\",\n      delay: \"10 min late\"\n    }, {\n      date: \"Mar 20, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 19, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 18, 2025\",\n      time: \"missed\",\n      status: \"missed\",\n      delay: \"missed\"\n    }]\n  }, {\n    id: 3,\n    name: \"Atorvastatin\",\n    dosage: \"20mg\",\n    schedule: [{\n      time: \"9:00 PM\",\n      status: \"upcoming\",\n      day: \"today\"\n    }],\n    instructions: \"Take in the evening\",\n    purpose: \"Lowers cholesterol\",\n    refillDate: \"May 2, 2025\",\n    refillRemaining: 15,\n    prescribedBy: \"Dr. Smith\",\n    startDate: \"November 5, 2024\",\n    category: \"cardiovascular\",\n    interactions: [{\n      medication: \"Grapefruit juice\",\n      severity: \"high\",\n      description: \"Can increase risk of muscle pain and damage\"\n    }, {\n      medication: \"Antifungals\",\n      severity: \"high\",\n      description: \"Can increase risk of side effects\"\n    }],\n    sideEffects: [\"Muscle pain\", \"Joint pain\", \"Digestive issues\"],\n    adherenceRate: 88,\n    missedDoses: 3,\n    history: [{\n      date: \"Mar 21, 2025\",\n      time: \"9:15 PM\",\n      status: \"taken\",\n      delay: \"15 min late\"\n    }, {\n      date: \"Mar 20, 2025\",\n      time: \"9:00 PM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 19, 2025\",\n      time: \"9:00 PM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 18, 2025\",\n      time: \"9:00 PM\",\n      status: \"missed\",\n      delay: \"missed\"\n    }, {\n      date: \"Mar 17, 2025\",\n      time: \"9:20 PM\",\n      status: \"taken\",\n      delay: \"20 min late\"\n    }]\n  }, {\n    id: 4,\n    name: \"Aspirin\",\n    dosage: \"81mg\",\n    schedule: [{\n      time: \"8:00 AM\",\n      status: \"taken\",\n      day: \"today\"\n    }],\n    instructions: \"Take with food to reduce stomach irritation\",\n    purpose: \"Blood thinner\",\n    refillDate: \"June 10, 2025\",\n    refillRemaining: 25,\n    prescribedBy: \"Dr. Johnson\",\n    startDate: \"January 5, 2025\",\n    category: \"cardiovascular\",\n    interactions: [{\n      medication: \"Ibuprofen\",\n      severity: \"moderate\",\n      description: \"May reduce heart benefits of aspirin\"\n    }, {\n      medication: \"Blood thinners\",\n      severity: \"high\",\n      description: \"Increased risk of bleeding\"\n    }],\n    sideEffects: [\"Upset stomach\", \"Heartburn\", \"Easy bruising\"],\n    adherenceRate: 98,\n    missedDoses: 0,\n    history: [{\n      date: \"Mar 22, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 21, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 20, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 19, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }, {\n      date: \"Mar 18, 2025\",\n      time: \"8:00 AM\",\n      status: \"taken\",\n      delay: \"on time\"\n    }]\n  }]);\n\n  // Load biorhythm data\n  useEffect(() => {\n    try {\n      const data = biorhythmEngine.getRecommendations();\n      setBiorhythmData(data);\n\n      // Create optimized medication schedule based on biorhythm\n      if (data) {\n        optimizeMedicationTiming(data);\n      }\n    } catch (error) {\n      console.error(\"Failed to load biorhythm data:\", error);\n    }\n  }, []);\n\n  // Optimize medication timing based on biorhythm data\n  const optimizeMedicationTiming = bioData => {\n    if (!bioData) return;\n\n    // Get optimal times for medication from biorhythm engine\n    const optimalMedicationTimes = bioData.recommendations.medicationTiming;\n\n    // Create new array of medications with optimized timing\n    const optimized = medications.map(med => {\n      // Deep clone the medication object\n      const optimizedMed = JSON.parse(JSON.stringify(med));\n\n      // Calculate biorhythm alignment score for each medication based on its category\n      let alignmentScore = 0;\n      let optimizedTimes = [];\n      let suggestedChanges = [];\n      optimizedMed.schedule.forEach(scheduleItem => {\n        // Convert time string to hour (24-hour format)\n        let hour = 0;\n        if (scheduleItem.time.includes('AM') || scheduleItem.time.includes('PM')) {\n          const timeParts = scheduleItem.time.split(':');\n          let timeHour = parseInt(timeParts[0]);\n          const isPM = scheduleItem.time.includes('PM');\n          hour = isPM && timeHour !== 12 ? timeHour + 12 : !isPM && timeHour === 12 ? 0 : timeHour;\n        }\n\n        // Check if current time is optimal according to biorhythm\n        const isOptimalTime = optimalMedicationTimes.includes(hour);\n\n        // If not optimal, find the nearest optimal time\n        if (!isOptimalTime && scheduleItem.status === 'upcoming') {\n          let nearestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n\n          // Format the optimal time in AM/PM format\n          const optimalTimeFormatted = `${nearestOptimalHour > 12 ? nearestOptimalHour - 12 : nearestOptimalHour === 0 ? 12 : nearestOptimalHour}:00 ${nearestOptimalHour >= 12 ? 'PM' : 'AM'}`;\n          optimizedTimes.push({\n            currentTime: scheduleItem.time,\n            optimalTime: optimalTimeFormatted\n          });\n          suggestedChanges.push({\n            from: scheduleItem.time,\n            to: optimalTimeFormatted,\n            difference: Math.abs(nearestOptimalHour - hour)\n          });\n        }\n\n        // Calculate alignment score\n        if (isOptimalTime) {\n          alignmentScore += 100;\n        } else {\n          // Find how far the current time is from optimal\n          const closestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n          const hourDifference = Math.abs(closestOptimalHour - hour);\n\n          // Calculate score based on proximity to optimal time (100 - distance * 10)\n          alignmentScore += Math.max(0, 100 - hourDifference * 10);\n        }\n      });\n\n      // Calculate average alignment score\n      alignmentScore = Math.round(alignmentScore / optimizedMed.schedule.length);\n\n      // Add biorhythm data to medication\n      return {\n        ...optimizedMed,\n        biorhythmData: {\n          alignmentScore,\n          optimizedTimes,\n          suggestedChanges\n        }\n      };\n    });\n    setOptimizedMeds(optimized);\n  };\n\n  // Filter medications based on search query\n  const filteredMedications = (biorhythmOptimized ? optimizedMeds : medications).filter(med => med.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Add a new medication\n  const addMedication = newMedication => {\n    const updatedMedications = [...medications, {\n      id: medications.length + 1,\n      ...newMedication\n    }];\n    setMedications(updatedMedications);\n\n    // Re-optimize if biorhythm is enabled\n    if (biorhythmData) {\n      const optimized = updatedMedications.map(med => {\n        // If this is not the new medication, use existing optimized data if available\n        const existingOptimized = optimizedMeds.find(m => m.id === med.id);\n        if (existingOptimized && med.id !== updatedMedications.length) {\n          return existingOptimized;\n        }\n\n        // Calculate new optimization data for new medication\n        // (simplified version - in a real app you'd use the full logic from optimizeMedicationTiming)\n        return {\n          ...med,\n          biorhythmData: {\n            alignmentScore: 70,\n            // Default score\n            optimizedTimes: [],\n            suggestedChanges: []\n          }\n        };\n      });\n      setOptimizedMeds(optimized);\n    }\n    setView('main');\n  };\n\n  // Toggle biorhythm optimization\n  const toggleBiorhythmOptimization = () => {\n    setBiorhythmOptimized(!biorhythmOptimized);\n  };\n\n  // Cleanup any popups when clicking outside\n  useEffect(() => {\n    const handleOutsideClick = () => {\n      setShowAddOptions(false);\n      setShowFilterOptions(false);\n    };\n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  }, []);\n\n  // Render the appropriate view based on state\n  const renderView = () => {\n    switch (view) {\n      case 'detail':\n        return /*#__PURE__*/_jsxDEV(MedicationDetail, {\n          medication: selectedMedication,\n          setView: setView,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this);\n      case 'history':\n        return /*#__PURE__*/_jsxDEV(MedicationHistory, {\n          medication: selectedMedication,\n          medications: biorhythmOptimized ? optimizedMeds : medications,\n          setView: setView,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this);\n      case 'schedule':\n        return /*#__PURE__*/_jsxDEV(MedicationSchedule, {\n          medication: selectedMedication,\n          medications: biorhythmOptimized ? optimizedMeds : medications,\n          setView: setView,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this);\n      case 'interactions':\n        return /*#__PURE__*/_jsxDEV(MedicationInteractions, {\n          medication: selectedMedication,\n          setView: setView,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this);\n      case 'add':\n        return /*#__PURE__*/_jsxDEV(AddMedicationForm, {\n          setView: setView,\n          addMedication: addMedication,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MedicationList, {\n            medications: filteredMedications,\n            setSelectedMedication: setSelectedMedication,\n            setView: setView,\n            searchQuery: searchQuery,\n            setSearchQuery: setSearchQuery,\n            showAddOptions: showAddOptions,\n            setShowAddOptions: setShowAddOptions,\n            showFilterOptions: showFilterOptions,\n            setShowFilterOptions: setShowFilterOptions,\n            colors: colors,\n            biorhythmOptimized: biorhythmOptimized\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 rounded-2xl shadow-lg border flex items-center justify-between dark-mode-transition\",\n            style: {\n              backgroundColor: cardBg,\n              borderColor: borderColor,\n              boxShadow: `0 10px 15px -3px ${colors.primary}20`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-12 h-12 rounded-full flex items-center justify-center mr-4 shimmer\",\n                style: {\n                  background: `linear-gradient(135deg, ${colors.accent}, ${colors.primary})`\n                },\n                children: /*#__PURE__*/_jsxDEV(Zap, {\n                  size: 24,\n                  color: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-bold text-lg dark-mode-transition\",\n                  style: {\n                    color: colors.textPrimary\n                  },\n                  children: \"Biorhythm Optimization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm dark-mode-transition\",\n                  style: {\n                    color: colors.textSecondary\n                  },\n                  children: biorhythmOptimized ? \"Your meds are now aligned with your body's rhythm. Science or magic? You decide.\" : \"Optimize your medication schedule based on your biorhythm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-14 h-7 rounded-full relative transition-all duration-300 focus:outline-none\",\n                style: {\n                  backgroundColor: biorhythmOptimized ? colors.primary : isDarkMode ? '#374151' : '#E5E7EB',\n                  boxShadow: biorhythmOptimized ? `0 0 10px ${colors.primary}40` : 'none'\n                },\n                onClick: toggleBiorhythmOptimization,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"absolute top-1 w-5 h-5 rounded-full bg-white transform transition-transform duration-300\",\n                  style: {\n                    left: biorhythmOptimized ? 'auto' : '0.25rem',\n                    right: biorhythmOptimized ? '0.25rem' : 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 pb-8 overflow-y-auto dark-mode-transition\",\n    style: {\n      backgroundColor: pageBgColor\n    },\n    children: [renderView(), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        @keyframes float {\n          0%, 100% { transform: translateY(0); }\n          50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.6; }\n        }\n        \n        @keyframes breathe {\n          0%, 100% { transform: scale(1); }\n          50% { transform: scale(1.05); }\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -100% 0; }\n          100% { background-position: 200% 0; }\n        }\n        \n        .animate-float {\n          animation: float 3s ease-in-out infinite;\n        }\n        \n        .animate-breathe {\n          animation: breathe 4s ease-in-out infinite;\n        }\n        \n        .shimmer {\n          background: linear-gradient(90deg, \n            rgba(255,255,255,0) 0%, \n            rgba(255,255,255,0.2) 50%, \n            rgba(255,255,255,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n        \n        .dark .shimmer {\n          background: linear-gradient(90deg, \n            rgba(30,41,59,0) 0%, \n            rgba(30,41,59,0.3) 50%, \n            rgba(30,41,59,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicationsScreen, \"rjbdWnqWHOWYH1s7/OFzFJBPTgg=\", false, function () {\n  return [useTheme];\n});\n_c = MedicationsScreen;\nexport default MedicationsScreen;\nvar _c;\n$RefreshReg$(_c, \"MedicationsScreen\");","map":{"version":3,"names":["React","useState","useEffect","PlusCircle","Search","Filter","Calendar","Zap","CheckCircle","Clock","X","Pill","AlertTriangle","useTheme","MedicationList","MedicationDetail","MedicationHistory","MedicationSchedule","MedicationInteractions","AddMedicationForm","biorhythmEngine","formatTimeWindows","jsxDEV","_jsxDEV","Fragment","_Fragment","MedicationsScreen","colors","setActiveScreen","_s","isDarkMode","view","setView","selectedMedication","setSelectedMedication","searchQuery","setSearchQuery","showAddOptions","setShowAddOptions","showFilterOptions","setShowFilterOptions","biorhythmOptimized","setBiorhythmOptimized","biorhythmData","setBiorhythmData","optimizedMeds","setOptimizedMeds","medications","setMedications","id","name","dosage","schedule","time","status","day","instructions","purpose","refillDate","refillRemaining","prescribedBy","startDate","category","interactions","medication","severity","description","sideEffects","adherenceRate","missedDoses","history","date","delay","data","getRecommendations","optimizeMedicationTiming","error","console","bioData","optimalMedicationTimes","recommendations","medicationTiming","optimized","map","med","optimizedMed","JSON","parse","stringify","alignmentScore","optimizedTimes","suggestedChanges","forEach","scheduleItem","hour","includes","timeParts","split","timeHour","parseInt","isPM","isOptimalTime","nearestOptimalHour","reduce","nearest","current","Math","abs","optimalTimeFormatted","push","currentTime","optimalTime","from","to","difference","closestOptimalHour","hourDifference","max","round","length","filteredMedications","filter","toLowerCase","addMedication","newMedication","updatedMedications","existingOptimized","find","m","toggleBiorhythmOptimization","handleOutsideClick","document","addEventListener","removeEventListener","renderView","fileName","_jsxFileName","lineNumber","columnNumber","children","className","style","backgroundColor","cardBg","borderColor","boxShadow","primary","background","accent","size","color","textPrimary","textSecondary","onClick","left","right","pageBgColor","jsx","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack/src/components/HealthAssistantUI/screens/MedicationsScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PlusCircle, Search, Filter, Calendar, Zap, CheckCircle, Clock, X, Pill, AlertTriangle } from \"lucide-react\";\nimport { useTheme } from '../ThemeContext'; // Import the useTheme hook\n\n// Import sub-components\nimport MedicationList from '../shared/MedicationList';\nimport MedicationDetail from '../shared/MedicationDetail';\nimport MedicationHistory from '../shared/MedicationHistory';\nimport MedicationSchedule from '../shared/MedicationSchedule';\nimport MedicationInteractions from '../shared/MedicationInteractions';\nimport AddMedicationForm from '../shared/AddMedicationForm';\n\n// Import biorhythm engine\nimport { biorhythmEngine, formatTimeWindows } from '../services/BiorhythmEngine';\n\n// Main component for medication management with biorhythm integration\nconst MedicationsScreen = ({ colors, setActiveScreen }) => {\n  // Get theme context for dark mode\n  const { isDarkMode } = useTheme();\n  \n  // View state (main, detail, add, history, schedule, interactions)\n  const [view, setView] = useState('main');\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddOptions, setShowAddOptions] = useState(false);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [biorhythmOptimized, setBiorhythmOptimized] = useState(false);\n  const [biorhythmData, setBiorhythmData] = useState(null);\n  const [optimizedMeds, setOptimizedMeds] = useState([]);\n  \n  // Mock medication data - in a real app, this would come from API/database\n  const [medications, setMedications] = useState([\n    {\n      id: 1,\n      name: \"Metformin\",\n      dosage: \"500mg\",\n      schedule: [\n        { time: \"8:00 AM\", status: \"taken\", day: \"today\" },\n        { time: \"9:00 PM\", status: \"upcoming\", day: \"today\" }\n      ],\n      instructions: \"Take with food to reduce stomach upset\",\n      purpose: \"Controls blood sugar levels\",\n      refillDate: \"April 15, 2025\",\n      refillRemaining: 8,\n      prescribedBy: \"Dr. Johnson\",\n      startDate: \"January 15, 2025\",\n      category: \"metabolic\",\n      interactions: [\n        { medication: \"Ibuprofen\", severity: \"moderate\", description: \"May reduce effectiveness and increase risk of low blood sugar\" },\n        { medication: \"Alcohol\", severity: \"high\", description: \"Can cause dangerously low blood sugar and lactic acidosis\" }\n      ],\n      sideEffects: [\"Nausea\", \"Diarrhea\", \"Stomach upset\", \"Metallic taste\"],\n      adherenceRate: 92,\n      missedDoses: 2,\n      history: [\n        { date: \"Mar 22, 2025\", time: \"8:05 AM\", status: \"taken\", delay: \"5 min late\" },\n        { date: \"Mar 21, 2025\", time: \"8:12 AM\", status: \"taken\", delay: \"12 min late\" },\n        { date: \"Mar 21, 2025\", time: \"9:00 PM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 20, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 20, 2025\", time: \"9:00 PM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 19, 2025\", time: \"8:00 AM\", status: \"missed\", delay: \"missed\" },\n        { date: \"Mar 19, 2025\", time: \"9:00 PM\", status: \"taken\", delay: \"on time\" }\n      ]\n    },\n    {\n      id: 2,\n      name: \"Lisinopril\",\n      dosage: \"10mg\",\n      schedule: [\n        { time: \"8:00 AM\", status: \"taken\", day: \"today\" }\n      ],\n      instructions: \"Take on an empty stomach\",\n      purpose: \"Controls blood pressure\",\n      refillDate: \"April 8, 2025\",\n      refillRemaining: 3,\n      prescribedBy: \"Dr. Smith\",\n      startDate: \"December 10, 2024\",\n      category: \"cardiovascular\",\n      interactions: [\n        { medication: \"Potassium supplements\", severity: \"high\", description: \"Can cause dangerously high potassium levels\" },\n        { medication: \"NSAIDs\", severity: \"moderate\", description: \"May reduce blood pressure lowering effects\" }\n      ],\n      sideEffects: [\"Dry cough\", \"Dizziness\", \"Headache\"],\n      adherenceRate: 95,\n      missedDoses: 1,\n      history: [\n        { date: \"Mar 22, 2025\", time: \"8:05 AM\", status: \"taken\", delay: \"5 min late\" },\n        { date: \"Mar 21, 2025\", time: \"8:10 AM\", status: \"taken\", delay: \"10 min late\" },\n        { date: \"Mar 20, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 19, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 18, 2025\", time: \"missed\", status: \"missed\", delay: \"missed\" }\n      ]\n    },\n    {\n      id: 3,\n      name: \"Atorvastatin\",\n      dosage: \"20mg\",\n      schedule: [\n        { time: \"9:00 PM\", status: \"upcoming\", day: \"today\" }\n      ],\n      instructions: \"Take in the evening\",\n      purpose: \"Lowers cholesterol\",\n      refillDate: \"May 2, 2025\",\n      refillRemaining: 15,\n      prescribedBy: \"Dr. Smith\",\n      startDate: \"November 5, 2024\",\n      category: \"cardiovascular\",\n      interactions: [\n        { medication: \"Grapefruit juice\", severity: \"high\", description: \"Can increase risk of muscle pain and damage\" },\n        { medication: \"Antifungals\", severity: \"high\", description: \"Can increase risk of side effects\" }\n      ],\n      sideEffects: [\"Muscle pain\", \"Joint pain\", \"Digestive issues\"],\n      adherenceRate: 88,\n      missedDoses: 3,\n      history: [\n        { date: \"Mar 21, 2025\", time: \"9:15 PM\", status: \"taken\", delay: \"15 min late\" },\n        { date: \"Mar 20, 2025\", time: \"9:00 PM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 19, 2025\", time: \"9:00 PM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 18, 2025\", time: \"9:00 PM\", status: \"missed\", delay: \"missed\" },\n        { date: \"Mar 17, 2025\", time: \"9:20 PM\", status: \"taken\", delay: \"20 min late\" }\n      ]\n    },\n    {\n      id: 4,\n      name: \"Aspirin\",\n      dosage: \"81mg\",\n      schedule: [\n        { time: \"8:00 AM\", status: \"taken\", day: \"today\" }\n      ],\n      instructions: \"Take with food to reduce stomach irritation\",\n      purpose: \"Blood thinner\",\n      refillDate: \"June 10, 2025\",\n      refillRemaining: 25,\n      prescribedBy: \"Dr. Johnson\",\n      startDate: \"January 5, 2025\",\n      category: \"cardiovascular\",\n      interactions: [\n        { medication: \"Ibuprofen\", severity: \"moderate\", description: \"May reduce heart benefits of aspirin\" },\n        { medication: \"Blood thinners\", severity: \"high\", description: \"Increased risk of bleeding\" }\n      ],\n      sideEffects: [\"Upset stomach\", \"Heartburn\", \"Easy bruising\"],\n      adherenceRate: 98,\n      missedDoses: 0,\n      history: [\n        { date: \"Mar 22, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 21, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 20, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 19, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" },\n        { date: \"Mar 18, 2025\", time: \"8:00 AM\", status: \"taken\", delay: \"on time\" }\n      ]\n    }\n  ]);\n\n  // Load biorhythm data\n  useEffect(() => {\n    try {\n      const data = biorhythmEngine.getRecommendations();\n      setBiorhythmData(data);\n      \n      // Create optimized medication schedule based on biorhythm\n      if (data) {\n        optimizeMedicationTiming(data);\n      }\n    } catch (error) {\n      console.error(\"Failed to load biorhythm data:\", error);\n    }\n  }, []);\n  \n  // Optimize medication timing based on biorhythm data\n  const optimizeMedicationTiming = (bioData) => {\n    if (!bioData) return;\n    \n    // Get optimal times for medication from biorhythm engine\n    const optimalMedicationTimes = bioData.recommendations.medicationTiming;\n    \n    // Create new array of medications with optimized timing\n    const optimized = medications.map(med => {\n      // Deep clone the medication object\n      const optimizedMed = JSON.parse(JSON.stringify(med));\n      \n      // Calculate biorhythm alignment score for each medication based on its category\n      let alignmentScore = 0;\n      let optimizedTimes = [];\n      let suggestedChanges = [];\n      \n      optimizedMed.schedule.forEach(scheduleItem => {\n        // Convert time string to hour (24-hour format)\n        let hour = 0;\n        if (scheduleItem.time.includes('AM') || scheduleItem.time.includes('PM')) {\n          const timeParts = scheduleItem.time.split(':');\n          let timeHour = parseInt(timeParts[0]);\n          const isPM = scheduleItem.time.includes('PM');\n          \n          hour = isPM && timeHour !== 12 ? timeHour + 12 : \n                !isPM && timeHour === 12 ? 0 : timeHour;\n        }\n        \n        // Check if current time is optimal according to biorhythm\n        const isOptimalTime = optimalMedicationTimes.includes(hour);\n        \n        // If not optimal, find the nearest optimal time\n        if (!isOptimalTime && scheduleItem.status === 'upcoming') {\n          let nearestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n          \n          // Format the optimal time in AM/PM format\n          const optimalTimeFormatted = `${nearestOptimalHour > 12 ? nearestOptimalHour - 12 : nearestOptimalHour === 0 ? 12 : nearestOptimalHour}:00 ${nearestOptimalHour >= 12 ? 'PM' : 'AM'}`;\n          \n          optimizedTimes.push({\n            currentTime: scheduleItem.time,\n            optimalTime: optimalTimeFormatted\n          });\n          \n          suggestedChanges.push({\n            from: scheduleItem.time,\n            to: optimalTimeFormatted,\n            difference: Math.abs(nearestOptimalHour - hour)\n          });\n        }\n        \n        // Calculate alignment score\n        if (isOptimalTime) {\n          alignmentScore += 100;\n        } else {\n          // Find how far the current time is from optimal\n          const closestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n          \n          const hourDifference = Math.abs(closestOptimalHour - hour);\n          \n          // Calculate score based on proximity to optimal time (100 - distance * 10)\n          alignmentScore += Math.max(0, 100 - (hourDifference * 10));\n        }\n      });\n      \n      // Calculate average alignment score\n      alignmentScore = Math.round(alignmentScore / optimizedMed.schedule.length);\n      \n      // Add biorhythm data to medication\n      return {\n        ...optimizedMed,\n        biorhythmData: {\n          alignmentScore,\n          optimizedTimes,\n          suggestedChanges\n        }\n      };\n    });\n    \n    setOptimizedMeds(optimized);\n  };\n\n  // Filter medications based on search query\n  const filteredMedications = (biorhythmOptimized ? optimizedMeds : medications).filter(med => \n    med.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Add a new medication\n  const addMedication = (newMedication) => {\n    const updatedMedications = [...medications, {\n      id: medications.length + 1,\n      ...newMedication\n    }];\n    \n    setMedications(updatedMedications);\n    \n    // Re-optimize if biorhythm is enabled\n    if (biorhythmData) {\n      const optimized = updatedMedications.map(med => {\n        // If this is not the new medication, use existing optimized data if available\n        const existingOptimized = optimizedMeds.find(m => m.id === med.id);\n        if (existingOptimized && med.id !== updatedMedications.length) {\n          return existingOptimized;\n        }\n        \n        // Calculate new optimization data for new medication\n        // (simplified version - in a real app you'd use the full logic from optimizeMedicationTiming)\n        return {\n          ...med,\n          biorhythmData: {\n            alignmentScore: 70, // Default score\n            optimizedTimes: [],\n            suggestedChanges: []\n          }\n        };\n      });\n      \n      setOptimizedMeds(optimized);\n    }\n    \n    setView('main');\n  };\n\n  // Toggle biorhythm optimization\n  const toggleBiorhythmOptimization = () => {\n    setBiorhythmOptimized(!biorhythmOptimized);\n  };\n\n  // Cleanup any popups when clicking outside\n  useEffect(() => {\n    const handleOutsideClick = () => {\n      setShowAddOptions(false);\n      setShowFilterOptions(false);\n    };\n    \n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  }, []);\n\n  // Render the appropriate view based on state\n  const renderView = () => {\n    switch(view) {\n      case 'detail':\n        return (\n          <MedicationDetail \n            medication={selectedMedication} \n            setView={setView} \n            colors={colors} \n          />\n        );\n      case 'history':\n        return (\n          <MedicationHistory \n            medication={selectedMedication} \n            medications={biorhythmOptimized ? optimizedMeds : medications} \n            setView={setView} \n            colors={colors} \n          />\n        );\n      case 'schedule':\n        return (\n          <MedicationSchedule \n            medication={selectedMedication} \n            medications={biorhythmOptimized ? optimizedMeds : medications} \n            setView={setView} \n            colors={colors} \n          />\n        );\n      case 'interactions':\n        return (\n          <MedicationInteractions \n            medication={selectedMedication} \n            setView={setView} \n            colors={colors} \n          />\n        );\n      case 'add':\n        return (\n          <AddMedicationForm \n            setView={setView} \n            addMedication={addMedication}\n            colors={colors} \n          />\n        );\n      default:\n        return (\n          <>\n            <MedicationList \n              medications={filteredMedications} \n              setSelectedMedication={setSelectedMedication} \n              setView={setView} \n              searchQuery={searchQuery} \n              setSearchQuery={setSearchQuery} \n              showAddOptions={showAddOptions} \n              setShowAddOptions={setShowAddOptions} \n              showFilterOptions={showFilterOptions} \n              setShowFilterOptions={setShowFilterOptions} \n              colors={colors}\n              biorhythmOptimized={biorhythmOptimized}\n            />\n            <br></br>\n            <div className=\"mb-6 p-4 rounded-2xl shadow-lg border flex items-center justify-between dark-mode-transition\"\n                 style={{ \n                   backgroundColor: cardBg,\n                   borderColor: borderColor,\n                   boxShadow: `0 10px 15px -3px ${colors.primary}20` \n                 }}>\n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full flex items-center justify-center mr-4 shimmer\" \n                     style={{ \n                       background: `linear-gradient(135deg, ${colors.accent}, ${colors.primary})`,\n                     }}>\n                  <Zap size={24} color=\"white\" />\n                </div>\n                <div>\n                  <h3 className=\"font-bold text-lg dark-mode-transition\" style={{ color: colors.textPrimary }}>Biorhythm Optimization</h3>\n                  <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                    {biorhythmOptimized \n                      ? \"Your meds are now aligned with your body's rhythm. Science or magic? You decide.\" \n                      : \"Optimize your medication schedule based on your biorhythm\"}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <button \n                  className=\"w-14 h-7 rounded-full relative transition-all duration-300 focus:outline-none\"\n                  style={{ \n                    backgroundColor: biorhythmOptimized ? colors.primary : isDarkMode ? '#374151' : '#E5E7EB',\n                    boxShadow: biorhythmOptimized ? `0 0 10px ${colors.primary}40` : 'none'\n                  }}\n                  onClick={toggleBiorhythmOptimization}\n                >\n                  <span \n                    className=\"absolute top-1 w-5 h-5 rounded-full bg-white transform transition-transform duration-300\"\n                    style={{ \n                      left: biorhythmOptimized ? 'auto' : '0.25rem',\n                      right: biorhythmOptimized ? '0.25rem' : 'auto'\n                    }}\n                  ></span>\n                </button>\n              </div>\n            </div>\n          </>\n        );\n    }\n  };\n\n  return (\n    <div className=\"p-6 pb-8 overflow-y-auto dark-mode-transition\" style={{ backgroundColor: pageBgColor }}>\n      {renderView()}\n      \n      {/* Custom CSS for animations */}\n      <style jsx>{`\n        @keyframes float {\n          0%, 100% { transform: translateY(0); }\n          50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.6; }\n        }\n        \n        @keyframes breathe {\n          0%, 100% { transform: scale(1); }\n          50% { transform: scale(1.05); }\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -100% 0; }\n          100% { background-position: 200% 0; }\n        }\n        \n        .animate-float {\n          animation: float 3s ease-in-out infinite;\n        }\n        \n        .animate-breathe {\n          animation: breathe 4s ease-in-out infinite;\n        }\n        \n        .shimmer {\n          background: linear-gradient(90deg, \n            rgba(255,255,255,0) 0%, \n            rgba(255,255,255,0.2) 50%, \n            rgba(255,255,255,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n        \n        .dark .shimmer {\n          background: linear-gradient(90deg, \n            rgba(30,41,59,0) 0%, \n            rgba(30,41,59,0.3) 50%, \n            rgba(30,41,59,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default MedicationsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}