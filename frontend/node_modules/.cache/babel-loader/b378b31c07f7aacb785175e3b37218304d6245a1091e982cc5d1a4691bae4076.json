{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver3/frontend2/src/components/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, useTheme } from './ThemeContext';\nimport { useAuth } from './AuthProvider';\nimport SplashScreen from './SplashScreen';\nimport NavButton from './NavButton';\n\n// Import screens\nimport DashboardScreen from './screens/DashboardScreen';\nimport DoctorDashboardScreen from './screens/DoctorDashboardScreen'; // New doctor dashboard\nimport MedicationsScreen from './screens/MedicationsScreen';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport ConnectScreen from './screens/Connect/ConnectScreen';\nimport EducationScreen from './screens/EducationScreen';\nimport EmergencyScreen from './screens/EmergencyScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport SignInScreen from './screens/SignInScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport BiorhythmScreen from './screens/BiorhythmScreen';\n\n// Wrap the main component with ThemeProvider\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HealthAssistantApp = () => {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(HealthAssistantUI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Main component to display the UI design\n_c = HealthAssistantApp;\nconst HealthAssistantUI = () => {\n  _s();\n  // Get theme from context\n  const {\n    colors,\n    isDarkMode,\n    toggleDarkMode\n  } = useTheme();\n\n  // Get auth context\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n\n  // Add state to manage authentication in UI\n  const [isAppAuthenticated, setIsAuthenticated] = useState(isAuthenticated);\n\n  // Update local state when auth context changes\n  useEffect(() => {\n    setIsAuthenticated(isAuthenticated);\n  }, [isAuthenticated]);\n  const [activeScreen, setActiveScreen] = useState('dashboard');\n  const [showSplash, setShowSplash] = useState(true);\n  const [activeTab, setActiveTab] = useState(null);\n\n  // Check if the user is a doctor\n  const isDoctor = (user === null || user === void 0 ? void 0 : user.isDoctor) || false;\n\n  // Create a preferences state to share across components\n  const [preferences, setPreferences] = useState({\n    notifications: true,\n    reminders: true,\n    dataSharing: false,\n    darkMode: isDarkMode,\n    // Connect to the theme context\n    biometrics: true\n  });\n\n  // Handle toggle of preferences\n  const handleToggle = key => {\n    if (key === 'darkMode') {\n      // Toggle the theme context when dark mode is toggled\n      toggleDarkMode();\n    }\n    setPreferences({\n      ...preferences,\n      [key]: !preferences[key]\n    });\n  };\n\n  // Update preferences when theme changes from outside\n  useEffect(() => {\n    setPreferences(prev => ({\n      ...prev,\n      darkMode: isDarkMode\n    }));\n  }, [isDarkMode]);\n\n  // Splash screen effect\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowSplash(false);\n\n      // If not authenticated, set active screen to signin\n      if (!isAppAuthenticated) {\n        setActiveScreen('signin');\n      }\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [isAppAuthenticated]);\n\n  // Add tab switching animation\n  useEffect(() => {\n    if (activeTab !== null) {\n      const timeout = setTimeout(() => {\n        setActiveScreen(activeTab);\n        setActiveTab(null);\n      }, 300);\n      return () => clearTimeout(timeout);\n    }\n  }, [activeTab]);\n\n  // Renders different screens based on selection\n  const renderScreen = () => {\n    // If not authenticated, show login or register screens\n    if (!isAppAuthenticated) {\n      if (activeScreen === 'register') {\n        return /*#__PURE__*/_jsxDEV(RegisterScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen,\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(SignInScreen, {\n        colors: colors,\n        setActiveScreen: setActiveScreen,\n        setIsAuthenticated: setIsAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If authenticated, show the selected screen\n    switch (activeScreen) {\n      case 'dashboard':\n        // Use different dashboard based on user type\n        return isDoctor ? /*#__PURE__*/_jsxDEV(DoctorDashboardScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(DashboardScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      case 'medications':\n        return /*#__PURE__*/_jsxDEV(MedicationsScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      case 'symptoms':\n        return /*#__PURE__*/_jsxDEV(SymptomsScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n      case 'connect':\n        return /*#__PURE__*/_jsxDEV(ConnectScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this);\n      case 'education':\n        return /*#__PURE__*/_jsxDEV(EducationScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 16\n        }, this);\n      case 'emergency':\n        return /*#__PURE__*/_jsxDEV(EmergencyScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }, this);\n      case 'profile':\n        return /*#__PURE__*/_jsxDEV(ProfileScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen,\n          setIsAuthenticated: setIsAuthenticated,\n          preferences: preferences,\n          handleToggle: handleToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 16\n        }, this);\n      case 'biorhythm':\n        return /*#__PURE__*/_jsxDEV(BiorhythmScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(DashboardScreen, {\n          colors: colors,\n          setActiveScreen: setActiveScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `font-sans antialiased transition-colors duration-300 ${isDarkMode ? 'dark' : ''}`,\n    style: {\n      backgroundColor: colors.background\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto my-8 rounded-3xl overflow-hidden shadow-2xl relative transition-all duration-500\",\n      style: {\n        width: '375px',\n        height: '812px',\n        boxShadow: `0 25px 50px -12px ${colors.primary}40`,\n        backgroundColor: isDarkMode ? colors.darkBg : 'black' // Frame color changes with theme\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-6 flex items-center justify-between px-6 transition-colors duration-300\",\n        style: {\n          backgroundColor: isDarkMode ? colors.darkBg : 'black',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs\",\n          children: \"9:41\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"22 12 18 12 15 21 9 3 6 12 2 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M13 2L3 14h9l-1 8 10-12h-9l1-8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full relative overflow-hidden transition-colors duration-500\",\n        style: {\n          backgroundColor: isDarkMode ? colors.background : 'white'\n        },\n        children: showSplash ? /*#__PURE__*/_jsxDEV(SplashScreen, {\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-20 overflow-y-auto h-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `transition-all duration-300 ${activeTab ? 'opacity-0 transform translate-x-8' : 'opacity-100'}`,\n              children: renderScreen()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), isAppAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed bottom-0 w-full backdrop-blur-xl border-t flex justify-around items-center h-20 px-2 shadow-lg transition-all duration-500\",\n            style: {\n              maxWidth: '375px',\n              backgroundColor: isDarkMode ? `${colors.darkBg}90` : 'rgba(255, 255, 255, 0.7)',\n              borderColor: isDarkMode ? `${colors.primary}30` : 'rgba(219, 234, 254, 1)',\n              boxShadow: `0 -10px 30px -5px ${colors.primary}20`\n            },\n            children: [/*#__PURE__*/_jsxDEV(NavButton, {\n              icon: \"activity\",\n              label: \"Dashboard\",\n              active: activeScreen === 'dashboard',\n              onClick: () => activeScreen !== 'dashboard' && setActiveTab('dashboard'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), isDoctor ?\n            /*#__PURE__*/\n            // Doctor-specific nav button\n            _jsxDEV(NavButton, {\n              icon: \"calendar\",\n              label: \"Schedule\",\n              active: activeScreen === 'schedule',\n              onClick: () => activeScreen !== 'schedule' && setActiveTab('schedule'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this) :\n            /*#__PURE__*/\n            // Patient-specific nav button\n            _jsxDEV(NavButton, {\n              icon: \"calendar\",\n              label: \"Meds\",\n              active: activeScreen === 'medications',\n              onClick: () => activeScreen !== 'medications' && setActiveTab('medications'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this), isDoctor ?\n            /*#__PURE__*/\n            // Doctor-specific nav button\n            _jsxDEV(NavButton, {\n              icon: \"users\",\n              label: \"Patients\",\n              active: activeScreen === 'patients',\n              onClick: () => activeScreen !== 'patients' && setActiveTab('patients'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this) :\n            /*#__PURE__*/\n            // Patient-specific nav button\n            _jsxDEV(NavButton, {\n              icon: \"heart\",\n              label: \"Symptoms\",\n              active: activeScreen === 'symptoms',\n              onClick: () => activeScreen !== 'symptoms' && setActiveTab('symptoms'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              icon: \"message-circle\",\n              label: \"Connect\",\n              active: activeScreen === 'connect',\n              onClick: () => activeScreen !== 'connect' && setActiveTab('connect'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              icon: \"user\",\n              label: \"Profile\",\n              active: activeScreen === 'profile',\n              onClick: () => activeScreen !== 'profile' && setActiveTab('profile'),\n              colors: colors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n      @keyframes float {\n        0%, 100% { transform: translateY(0); }\n        50% { transform: translateY(-10px); }\n      }\n      @keyframes pulse {\n        0%, 100% { opacity: 1; }\n        50% { opacity: 0.6; }\n      }\n      @keyframes breathe {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n      }\n      @keyframes shimmer {\n        0% { background-position: -100% 0; }\n        100% { background-position: 200% 0; }\n      }\n      .animate-float {\n        animation: float 3s ease-in-out infinite;\n      }\n      .animate-breathe {\n        animation: breathe 4s ease-in-out infinite;\n      }\n      .shimmer {\n        background: linear-gradient(90deg, \n          rgba(255,255,255,0) 0%, \n          rgba(255,255,255,0.2) 50%, \n          rgba(255,255,255,0) 100%);\n        background-size: 200% 100%;\n        animation: shimmer 2s infinite;\n      }\n      \n      /* Dark mode specific animations */\n      .dark .shimmer {\n        background: linear-gradient(90deg, \n          rgba(30,41,59,0) 0%, \n          rgba(30,41,59,0.3) 50%, \n          rgba(30,41,59,0) 100%);\n        background-size: 200% 100%;\n        animation: shimmer 2s infinite;\n      }\n      \n      /* Global transitions for dark mode */\n      .dark-mode-transition,\n      .dark-mode-transition * {\n        transition: background-color 0.5s ease, \n                    color 0.5s ease, \n                    border-color 0.5s ease,\n                    box-shadow 0.5s ease,\n                    transform 0.3s ease;\n      }\n    `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthAssistantUI, \"xxLapfTNzXs44TUiu85na+IQGt0=\", false, function () {\n  return [useTheme, useAuth];\n});\n_c2 = HealthAssistantUI;\nexport default HealthAssistantApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"HealthAssistantApp\");\n$RefreshReg$(_c2, \"HealthAssistantUI\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","useTheme","useAuth","SplashScreen","NavButton","DashboardScreen","DoctorDashboardScreen","MedicationsScreen","SymptomsScreen","ConnectScreen","EducationScreen","EmergencyScreen","ProfileScreen","SignInScreen","RegisterScreen","BiorhythmScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","HealthAssistantApp","children","HealthAssistantUI","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","colors","isDarkMode","toggleDarkMode","user","isAuthenticated","isAppAuthenticated","setIsAuthenticated","activeScreen","setActiveScreen","showSplash","setShowSplash","activeTab","setActiveTab","isDoctor","preferences","setPreferences","notifications","reminders","dataSharing","darkMode","biometrics","handleToggle","key","prev","timer","setTimeout","clearTimeout","timeout","renderScreen","className","style","backgroundColor","background","width","height","boxShadow","primary","darkBg","color","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","maxWidth","borderColor","icon","label","active","onClick","jsx","_c2","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver3/frontend2/src/components/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeProvider, useTheme } from './ThemeContext';\nimport { useAuth } from './AuthProvider';\nimport SplashScreen from './SplashScreen';\nimport NavButton from './NavButton';\n\n// Import screens\nimport DashboardScreen from './screens/DashboardScreen';\nimport DoctorDashboardScreen from './screens/DoctorDashboardScreen'; // New doctor dashboard\nimport MedicationsScreen from './screens/MedicationsScreen';\nimport SymptomsScreen from './screens/SymptomsScreen';\nimport ConnectScreen from './screens/Connect/ConnectScreen';\nimport EducationScreen from './screens/EducationScreen';\nimport EmergencyScreen from './screens/EmergencyScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport SignInScreen from './screens/SignInScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport BiorhythmScreen from './screens/BiorhythmScreen';\n\n// Wrap the main component with ThemeProvider\nconst HealthAssistantApp = () => {\n  return (\n    <ThemeProvider>\n      <HealthAssistantUI />\n    </ThemeProvider>\n  );\n};\n\n// Main component to display the UI design\nconst HealthAssistantUI = () => {\n  // Get theme from context\n  const { colors, isDarkMode, toggleDarkMode } = useTheme();\n  \n  // Get auth context\n  const { user, isAuthenticated } = useAuth();\n  \n  // Add state to manage authentication in UI\n  const [isAppAuthenticated, setIsAuthenticated] = useState(isAuthenticated);\n  \n  // Update local state when auth context changes\n  useEffect(() => {\n    setIsAuthenticated(isAuthenticated);\n  }, [isAuthenticated]);\n  \n  const [activeScreen, setActiveScreen] = useState('dashboard');\n  const [showSplash, setShowSplash] = useState(true);\n  const [activeTab, setActiveTab] = useState(null);\n\n  // Check if the user is a doctor\n  const isDoctor = user?.isDoctor || false;\n  \n  // Create a preferences state to share across components\n  const [preferences, setPreferences] = useState({\n    notifications: true,\n    reminders: true,\n    dataSharing: false,\n    darkMode: isDarkMode, // Connect to the theme context\n    biometrics: true\n  });\n  \n  // Handle toggle of preferences\n  const handleToggle = (key) => {\n    if (key === 'darkMode') {\n      // Toggle the theme context when dark mode is toggled\n      toggleDarkMode();\n    }\n    \n    setPreferences({ ...preferences, [key]: !preferences[key] });\n  };\n\n  // Update preferences when theme changes from outside\n  useEffect(() => {\n    setPreferences(prev => ({\n      ...prev,\n      darkMode: isDarkMode\n    }));\n  }, [isDarkMode]);\n\n  // Splash screen effect\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowSplash(false);\n      \n      // If not authenticated, set active screen to signin\n      if (!isAppAuthenticated) {\n        setActiveScreen('signin');\n      }\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [isAppAuthenticated]);\n\n  // Add tab switching animation\n  useEffect(() => {\n    if (activeTab !== null) {\n      const timeout = setTimeout(() => {\n        setActiveScreen(activeTab);\n        setActiveTab(null);\n      }, 300);\n      return () => clearTimeout(timeout);\n    }\n  }, [activeTab]);\n\n  // Renders different screens based on selection\n  const renderScreen = () => {\n    // If not authenticated, show login or register screens\n    if (!isAppAuthenticated) {\n      if (activeScreen === 'register') {\n        return <RegisterScreen \n                 colors={colors} \n                 setActiveScreen={setActiveScreen} \n                 setIsAuthenticated={setIsAuthenticated}\n               />;\n      }\n      \n      return <SignInScreen \n               colors={colors} \n               setActiveScreen={setActiveScreen} \n               setIsAuthenticated={setIsAuthenticated}\n             />;\n    }\n    \n    // If authenticated, show the selected screen\n    switch(activeScreen) {\n      case 'dashboard':\n        // Use different dashboard based on user type\n        return isDoctor ? \n          <DoctorDashboardScreen colors={colors} setActiveScreen={setActiveScreen} /> :\n          <DashboardScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      case 'medications':\n        return <MedicationsScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      case 'symptoms':\n        return <SymptomsScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      case 'connect':\n        return <ConnectScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      case 'education':\n        return <EducationScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      case 'emergency':\n        return <EmergencyScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      case 'profile':\n        return <ProfileScreen \n                 colors={colors} \n                 setActiveScreen={setActiveScreen} \n                 setIsAuthenticated={setIsAuthenticated}\n                 preferences={preferences}\n                 handleToggle={handleToggle} \n               />;\n      case 'biorhythm':\n        return <BiorhythmScreen colors={colors} setActiveScreen={setActiveScreen} />;\n      default:\n        return <DashboardScreen colors={colors} setActiveScreen={setActiveScreen} />;\n    }\n  };\n\n  return (\n    <div className={`font-sans antialiased transition-colors duration-300 ${isDarkMode ? 'dark' : ''}`} \n         style={{ backgroundColor: colors.background }}>\n      {/* Mobile frame - enhanced with dark mode colors */}\n      <div className=\"mx-auto my-8 rounded-3xl overflow-hidden shadow-2xl relative transition-all duration-500\"\n           style={{ \n             width: '375px', \n             height: '812px', \n             boxShadow: `0 25px 50px -12px ${colors.primary}40`,\n             backgroundColor: isDarkMode ? colors.darkBg : 'black' // Frame color changes with theme\n           }}>\n        {/* Status bar */}\n        <div className=\"h-6 flex items-center justify-between px-6 transition-colors duration-300\"\n             style={{ \n               backgroundColor: isDarkMode ? colors.darkBg : 'black',\n               color: 'white'\n             }}>\n          <span className=\"text-xs\">9:41</span>\n          <div className=\"flex items-center space-x-1\">\n            <div className=\"w-4 h-4\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <polyline points=\"22 12 18 12 15 21 9 3 6 12 2 12\"></polyline>\n              </svg>\n            </div>\n            <div className=\"w-4 h-4\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M13 2L3 14h9l-1 8 10-12h-9l1-8z\"></path>\n              </svg>\n            </div>\n          </div>\n        </div>\n        \n        {/* App content with enhanced transitions for dark mode */}\n        <div className=\"h-full relative overflow-hidden transition-colors duration-500\" \n             style={{ backgroundColor: isDarkMode ? colors.background : 'white' }}>\n          {showSplash ? <SplashScreen colors={colors} /> : (\n            <>\n              <div className=\"pb-20 overflow-y-auto h-full\">\n                <div className={`transition-all duration-300 ${activeTab ? 'opacity-0 transform translate-x-8' : 'opacity-100'}`}>\n                  {renderScreen()}\n                </div>\n              </div>\n              \n              {/* Only show navigation when authenticated */}\n              {isAppAuthenticated && (\n                <div className=\"fixed bottom-0 w-full backdrop-blur-xl border-t flex justify-around items-center h-20 px-2 shadow-lg transition-all duration-500\" \n                     style={{ \n                       maxWidth: '375px',\n                       backgroundColor: isDarkMode ? `${colors.darkBg}90` : 'rgba(255, 255, 255, 0.7)',\n                       borderColor: isDarkMode ? `${colors.primary}30` : 'rgba(219, 234, 254, 1)',\n                       boxShadow: `0 -10px 30px -5px ${colors.primary}20`\n                     }}>\n                  <NavButton \n                    icon=\"activity\" \n                    label=\"Dashboard\" \n                    active={activeScreen === 'dashboard'} \n                    onClick={() => activeScreen !== 'dashboard' && setActiveTab('dashboard')}\n                    colors={colors}\n                  />\n                  \n                  {isDoctor ? (\n                    // Doctor-specific nav button\n                    <NavButton \n                      icon=\"calendar\" \n                      label=\"Schedule\" \n                      active={activeScreen === 'schedule'} \n                      onClick={() => activeScreen !== 'schedule' && setActiveTab('schedule')}\n                      colors={colors}\n                    />\n                  ) : (\n                    // Patient-specific nav button\n                    <NavButton \n                      icon=\"calendar\" \n                      label=\"Meds\" \n                      active={activeScreen === 'medications'} \n                      onClick={() => activeScreen !== 'medications' && setActiveTab('medications')}\n                      colors={colors}\n                    />\n                  )}\n                  \n                  {isDoctor ? (\n                    // Doctor-specific nav button\n                    <NavButton \n                      icon=\"users\" \n                      label=\"Patients\" \n                      active={activeScreen === 'patients'} \n                      onClick={() => activeScreen !== 'patients' && setActiveTab('patients')}\n                      colors={colors}\n                    />\n                  ) : (\n                    // Patient-specific nav button\n                    <NavButton \n                      icon=\"heart\" \n                      label=\"Symptoms\" \n                      active={activeScreen === 'symptoms'} \n                      onClick={() => activeScreen !== 'symptoms' && setActiveTab('symptoms')}\n                      colors={colors}\n                    />\n                  )}\n                  \n                  <NavButton \n                    icon=\"message-circle\" \n                    label=\"Connect\" \n                    active={activeScreen === 'connect'} \n                    onClick={() => activeScreen !== 'connect' && setActiveTab('connect')}\n                    colors={colors}\n                  />\n                  \n                  <NavButton \n                    icon=\"user\" \n                    label=\"Profile\" \n                    active={activeScreen === 'profile'} \n                    onClick={() => activeScreen !== 'profile' && setActiveTab('profile')}\n                    colors={colors}\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n      \n      {/* Custom CSS for animations */}\n      <style jsx>{`\n      @keyframes float {\n        0%, 100% { transform: translateY(0); }\n        50% { transform: translateY(-10px); }\n      }\n      @keyframes pulse {\n        0%, 100% { opacity: 1; }\n        50% { opacity: 0.6; }\n      }\n      @keyframes breathe {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n      }\n      @keyframes shimmer {\n        0% { background-position: -100% 0; }\n        100% { background-position: 200% 0; }\n      }\n      .animate-float {\n        animation: float 3s ease-in-out infinite;\n      }\n      .animate-breathe {\n        animation: breathe 4s ease-in-out infinite;\n      }\n      .shimmer {\n        background: linear-gradient(90deg, \n          rgba(255,255,255,0) 0%, \n          rgba(255,255,255,0.2) 50%, \n          rgba(255,255,255,0) 100%);\n        background-size: 200% 100%;\n        animation: shimmer 2s infinite;\n      }\n      \n      /* Dark mode specific animations */\n      .dark .shimmer {\n        background: linear-gradient(90deg, \n          rgba(30,41,59,0) 0%, \n          rgba(30,41,59,0.3) 50%, \n          rgba(30,41,59,0) 100%);\n        background-size: 200% 100%;\n        animation: shimmer 2s infinite;\n      }\n      \n      /* Global transitions for dark mode */\n      .dark-mode-transition,\n      .dark-mode-transition * {\n        transition: background-color 0.5s ease, \n                    color 0.5s ease, \n                    border-color 0.5s ease,\n                    box-shadow 0.5s ease,\n                    transform 0.3s ease;\n      }\n    `}</style>\n    </div>\n  );\n};\n\nexport default HealthAssistantApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}