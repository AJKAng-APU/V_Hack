{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx\",\n  _s = $RefreshSig$();\n// Replace the VideoDisplay component with this enhanced version\n// This will ensure the video is properly displayed regardless of UI state\n\nimport React, { useEffect, useState } from 'react';\nimport { Users } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children\n}) => {\n  _s();\n  var _remoteVideoRef$curre3, _remoteVideoRef$curre4, _remoteVideoRef$curre5, _remoteVideoRef$curre6, _localVideoRef$curren, _localVideoRef$curren2;\n  // Dark mode specific colors\n  const videoOffBg = isDarkMode ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n  const videoOnBg = isDarkMode ? `linear-gradient(45deg, #0a0a0a, #1e1e1e)` : `linear-gradient(45deg, #1e1e1e, #0a0a0a)`;\n\n  // NEW: Add local state to track stream readiness\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n\n  // NEW: Force display of remote stream\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      var _remoteVideoRef$curre, _remoteVideoRef$curre2;\n      // Log initial state of video element\n      console.log('Remote video ref initial state:', {\n        hasSource: !!remoteVideoRef.current.srcObject,\n        trackCount: ((_remoteVideoRef$curre = remoteVideoRef.current.srcObject) === null || _remoteVideoRef$curre === void 0 ? void 0 : _remoteVideoRef$curre.getTracks().length) || 0,\n        readyState: remoteVideoRef.current.readyState,\n        paused: remoteVideoRef.current.paused\n      });\n\n      // Force play if possible\n      const attemptAutoplay = () => {\n        if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n          remoteVideoRef.current.play().then(() => {\n            console.log('⭐ Remote video playing successfully');\n            setRemotePlaying(true);\n          }).catch(err => {\n            console.error('Remote video autoplay failed:', err);\n\n            // Try again with muted first, then unmute\n            remoteVideoRef.current.muted = true;\n            remoteVideoRef.current.play().then(() => {\n              console.log('Remote video playing (muted first)');\n              remoteVideoRef.current.muted = isSpeakerOff;\n              setRemotePlaying(true);\n            }).catch(e => console.error('Remote video autoplay failed even muted:', e));\n          });\n        }\n      };\n\n      // Attempt immediately if we have tracks\n      if (((_remoteVideoRef$curre2 = remoteVideoRef.current.srcObject) === null || _remoteVideoRef$curre2 === void 0 ? void 0 : _remoteVideoRef$curre2.getTracks().length) > 0) {\n        attemptAutoplay();\n      }\n\n      // Set up event listeners to detect when video becomes ready\n      const handleLoadedData = () => {\n        console.log('Remote video loadeddata event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      const handleCanPlay = () => {\n        console.log('Remote video canplay event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      remoteVideoRef.current.addEventListener('loadeddata', handleLoadedData);\n      remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n      return () => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.removeEventListener('loadeddata', handleLoadedData);\n          remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n        }\n      };\n    }\n  }, [remoteVideoRef.current, (_remoteVideoRef$curre3 = remoteVideoRef.current) === null || _remoteVideoRef$curre3 === void 0 ? void 0 : _remoteVideoRef$curre3.srcObject]);\n\n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      console.log('Remote video srcObject changed, tracks:', remoteVideoRef.current.srcObject.getTracks().map(t => `${t.kind}:${t.readyState}`).join(', '));\n\n      // Set a backup timeout to ensure video plays\n      setTimeout(() => {\n        if (remoteVideoRef.current && !remotePlaying) {\n          console.log('Backup timeout: forcing play attempt');\n          remoteVideoRef.current.play().catch(e => console.error('Play attempt failed:', e));\n        }\n      }, 1000);\n    }\n  }, [(_remoteVideoRef$curre4 = remoteVideoRef.current) === null || _remoteVideoRef$curre4 === void 0 ? void 0 : _remoteVideoRef$curre4.srcObject, remotePlaying]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black dark-mode-transition\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: isSpeakerOff,\n          className: \"w-full h-full object-cover\",\n          style: {\n            border: '2px solid rgba(0, 255, 0, 0.2)',\n            // Subtle border to see rendering\n            visibility: 'visible',\n            // Force visibility\n            display: 'block' // Force display\n          },\n          onError: e => console.error(\"Remote video error:\", e),\n          onLoadedData: () => console.log(\"Remote video loaded data\"),\n          onCanPlay: () => console.log(\"Remote video can play\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-2 left-2 text-xs bg-black bg-opacity-50 p-1 rounded text-white\",\n          style: {\n            zIndex: 1000\n          },\n          children: [\"Remote: \", ((_remoteVideoRef$curre5 = remoteVideoRef.current) === null || _remoteVideoRef$curre5 === void 0 ? void 0 : (_remoteVideoRef$curre6 = _remoteVideoRef$curre5.srcObject) === null || _remoteVideoRef$curre6 === void 0 ? void 0 : _remoteVideoRef$curre6.getTracks().length) || 0, \" tracks\", remoteReady ? ' (ready)' : ' (waiting)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), children, connectionQuality !== 'good' && reconnectAttempt > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\",\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            backdropFilter: 'blur(4px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-white font-medium\",\n              children: [\"Reconnecting\", reconnectAttempt > 1 ? ` (${reconnectAttempt})` : '', \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), (isVideoOff || !remoteReady) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center dark-mode-transition\",\n          style: {\n            background: isDarkMode ? colors.darkBg : '#000811'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (doctor === null || doctor === void 0 ? void 0 : doctor.image) || '/User_1.png',\n              alt: (doctor === null || doctor === void 0 ? void 0 : doctor.name) || 'Doctor',\n              className: \"w-full h-full object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\",\n      style: {\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n        zIndex: 999,\n        // Ensure it's above everything\n        backgroundColor: 'black',\n        // Add background for visibility\n        transform: showControls ? 'scale(1)' : 'scale(0.95)',\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true // Always mute local video to prevent feedback\n        ,\n        className: \"w-full h-full object-cover\",\n        style: {\n          display: 'block'\n        } // Force display\n        ,\n        onError: e => console.error(\"Local video error:\", e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-2 left-2 text-xs bg-black bg-opacity-50 p-1 rounded text-white\",\n        style: {\n          zIndex: 1000\n        },\n        children: [\"Local: \", ((_localVideoRef$curren = localVideoRef.current) === null || _localVideoRef$curren === void 0 ? void 0 : (_localVideoRef$curren2 = _localVideoRef$curren.srcObject) === null || _localVideoRef$curren2 === void 0 ? void 0 : _localVideoRef$curren2.getTracks().length) || 0, \" tracks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`,\n        style: {\n          background: videoOffBg\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), isVideoOff && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            size: 18,\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoDisplay, \"evP+n3NIfKtN+uBUH+jqEVBVLrY=\");\n_c = VideoDisplay;\nexport default VideoDisplay;\nvar _c;\n$RefreshReg$(_c, \"VideoDisplay\");","map":{"version":3,"names":["React","useEffect","useState","Users","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoDisplay","remoteVideoRef","localVideoRef","isSpeakerOff","isVideoOff","doctor","connectionQuality","reconnectAttempt","showControls","isDarkMode","colors","children","_s","_remoteVideoRef$curre3","_remoteVideoRef$curre4","_remoteVideoRef$curre5","_remoteVideoRef$curre6","_localVideoRef$curren","_localVideoRef$curren2","videoOffBg","darkBg","primaryDark","videoOnBg","remoteReady","setRemoteReady","remotePlaying","setRemotePlaying","current","_remoteVideoRef$curre","_remoteVideoRef$curre2","console","log","hasSource","srcObject","trackCount","getTracks","length","readyState","paused","attemptAutoplay","play","then","catch","err","error","muted","e","handleLoadedData","handleCanPlay","addEventListener","removeEventListener","map","t","kind","join","setTimeout","className","ref","autoPlay","playsInline","style","border","visibility","display","onError","onLoadedData","onCanPlay","fileName","_jsxFileName","lineNumber","columnNumber","zIndex","backgroundColor","backdropFilter","background","src","image","alt","name","boxShadow","transform","transition","size","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx"],"sourcesContent":["// Replace the VideoDisplay component with this enhanced version\n// This will ensure the video is properly displayed regardless of UI state\n\nimport React, { useEffect, useState } from 'react';\nimport { Users } from 'lucide-react';\n\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children\n}) => {\n  // Dark mode specific colors\n  const videoOffBg = isDarkMode \n    ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` \n    : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n  \n  const videoOnBg = isDarkMode\n    ? `linear-gradient(45deg, #0a0a0a, #1e1e1e)`\n    : `linear-gradient(45deg, #1e1e1e, #0a0a0a)`;\n    \n  // NEW: Add local state to track stream readiness\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n\n  // NEW: Force display of remote stream\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      // Log initial state of video element\n      console.log('Remote video ref initial state:', {\n        hasSource: !!remoteVideoRef.current.srcObject,\n        trackCount: remoteVideoRef.current.srcObject?.getTracks().length || 0,\n        readyState: remoteVideoRef.current.readyState,\n        paused: remoteVideoRef.current.paused\n      });\n      \n      // Force play if possible\n      const attemptAutoplay = () => {\n        if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n          remoteVideoRef.current.play()\n            .then(() => {\n              console.log('⭐ Remote video playing successfully');\n              setRemotePlaying(true);\n            })\n            .catch(err => {\n              console.error('Remote video autoplay failed:', err);\n              \n              // Try again with muted first, then unmute\n              remoteVideoRef.current.muted = true;\n              remoteVideoRef.current.play()\n                .then(() => {\n                  console.log('Remote video playing (muted first)');\n                  remoteVideoRef.current.muted = isSpeakerOff;\n                  setRemotePlaying(true);\n                })\n                .catch(e => console.error('Remote video autoplay failed even muted:', e));\n            });\n        }\n      };\n      \n      // Attempt immediately if we have tracks\n      if (remoteVideoRef.current.srcObject?.getTracks().length > 0) {\n        attemptAutoplay();\n      }\n      \n      // Set up event listeners to detect when video becomes ready\n      const handleLoadedData = () => {\n        console.log('Remote video loadeddata event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      \n      const handleCanPlay = () => {\n        console.log('Remote video canplay event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      \n      remoteVideoRef.current.addEventListener('loadeddata', handleLoadedData);\n      remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n      \n      return () => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.removeEventListener('loadeddata', handleLoadedData);\n          remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n        }\n      };\n    }\n  }, [remoteVideoRef.current, remoteVideoRef.current?.srcObject]);\n  \n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      console.log('Remote video srcObject changed, tracks:', \n        remoteVideoRef.current.srcObject.getTracks().map(t => `${t.kind}:${t.readyState}`).join(', '));\n        \n      // Set a backup timeout to ensure video plays\n      setTimeout(() => {\n        if (remoteVideoRef.current && !remotePlaying) {\n          console.log('Backup timeout: forcing play attempt');\n          remoteVideoRef.current.play().catch(e => console.error('Play attempt failed:', e));\n        }\n      }, 1000);\n    }\n  }, [remoteVideoRef.current?.srcObject, remotePlaying]);\n\n  return (\n    <>\n      {/* Doctor video (remote) */}\n      <div className=\"absolute inset-0 bg-black dark-mode-transition\">\n        <div className=\"h-full relative\">\n          {/* Remote video element */}\n          <video\n            ref={remoteVideoRef}\n            autoPlay\n            playsInline\n            muted={isSpeakerOff}\n            className=\"w-full h-full object-cover\"\n            style={{\n              border: '2px solid rgba(0, 255, 0, 0.2)', // Subtle border to see rendering\n              visibility: 'visible', // Force visibility\n              display: 'block' // Force display\n            }}\n            onError={(e) => console.error(\"Remote video error:\", e)}\n            onLoadedData={() => console.log(\"Remote video loaded data\")}\n            onCanPlay={() => console.log(\"Remote video can play\")}\n          />\n          \n          {/* Debug overlay */}\n          <div \n            className=\"absolute top-2 left-2 text-xs bg-black bg-opacity-50 p-1 rounded text-white\"\n            style={{ zIndex: 1000 }}\n          >\n            Remote: {remoteVideoRef.current?.srcObject?.getTracks().length || 0} tracks\n            {remoteReady ? ' (ready)' : ' (waiting)'}\n          </div>\n          \n          {/* Pass children (call header & connection status) */}\n          {children}\n          \n          {/* Reconnecting indicator */}\n          {connectionQuality !== 'good' && reconnectAttempt > 0 && (\n            <div \n              className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\"\n              style={{ \n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                backdropFilter: 'blur(4px)'\n              }}\n            >\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"></div>\n                <span className=\"text-sm text-white font-medium\">Reconnecting{reconnectAttempt > 1 ? ` (${reconnectAttempt})` : ''}...</span>\n              </div>\n            </div>\n          )}\n          \n          {/* Fallback when remote video is off or not available yet */}\n          {(isVideoOff || !remoteReady) && (\n            <div className=\"absolute inset-0 flex items-center justify-center dark-mode-transition\"\n                 style={{ background: isDarkMode ? colors.darkBg : '#000811' }}>\n              <div className=\"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\">\n                <img src={doctor?.image || '/User_1.png'} alt={doctor?.name || 'Doctor'} className=\"w-full h-full object-cover\" />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* User video (local) - MODIFIED FOR VISIBILITY */}\n      <div className=\"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\"\n           style={{ \n             boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n             zIndex: 999, // Ensure it's above everything\n             backgroundColor: 'black', // Add background for visibility\n             transform: showControls ? 'scale(1)' : 'scale(0.95)',\n             transition: 'all 0.3s ease'\n           }}>\n        {/* Local video element */}\n        <video\n          ref={localVideoRef}\n          autoPlay\n          playsInline\n          muted={true} // Always mute local video to prevent feedback\n          className=\"w-full h-full object-cover\"\n          style={{ display: 'block' }} // Force display\n          onError={(e) => console.error(\"Local video error:\", e)}\n        />\n        \n        {/* Debug overlay */}\n        <div \n          className=\"absolute top-2 left-2 text-xs bg-black bg-opacity-50 p-1 rounded text-white\"\n          style={{ zIndex: 1000 }}\n        >\n          Local: {localVideoRef.current?.srcObject?.getTracks().length || 0} tracks\n        </div>\n        \n        {/* Background when video is off */}\n        <div className={`absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`} \n             style={{ background: videoOffBg }}>\n        </div>\n        \n        {/* User placeholder when video is off */}\n        {isVideoOff && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\">\n              <Users size={18} className=\"text-white\" />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default VideoDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}