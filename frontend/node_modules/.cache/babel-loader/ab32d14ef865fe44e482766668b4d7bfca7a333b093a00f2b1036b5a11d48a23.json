{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver3/frontend2/src/components/screens/MedicationsScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlusCircle, Search, Filter, Calendar, Zap, CheckCircle, Clock, X, AlertTriangle } from \"lucide-react\";\nimport { useTheme } from '../ThemeContext';\n\n// Import sub-components\nimport MedicationList from '../shared/MedicationList';\nimport MedicationDetail from '../shared/MedicationDetail';\nimport MedicationHistory from '../shared/MedicationHistory';\nimport MedicationSchedule from '../shared/MedicationSchedule';\nimport MedicationInteractions from '../shared/MedicationInteractions';\nimport AddMedicationForm from '../shared/AddMedicationForm';\n\n// Import biorhythm engine\nimport { biorhythmEngine, formatTimeWindows } from '../services/BiorhythmEngine';\n\n// Import our custom hook for medication data\nimport useMedications from '../useMedications';\n\n// Main component for medication management with biorhythm integration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MedicationsScreen = ({\n  colors,\n  setActiveScreen\n}) => {\n  _s();\n  // Get theme context for dark mode\n  const {\n    isDarkMode\n  } = useTheme();\n\n  // Use our custom hook to fetch and manage medications\n  const {\n    medications,\n    loading,\n    error,\n    addMedication: addMedicationToSupabase,\n    updateMedication: updateMedicationInSupabase,\n    deleteMedication: deleteMedicationFromSupabase,\n    logMedicationStatus,\n    updateMedicationWithBiorhythm\n  } = useMedications();\n\n  // Dark mode specific styles\n  const cardBg = isDarkMode ? colors.cardBg : 'white';\n  const borderColor = isDarkMode ? `${colors.primary}30` : 'rgba(219, 234, 254, 1)';\n  const hoverBgColor = isDarkMode ? colors.primary + '20' : 'rgba(239, 246, 255, 1)';\n  const inputBg = isDarkMode ? colors.darkBg : 'white';\n  const emptyStateBg = isDarkMode ? colors.primary + '15' : 'rgba(239, 246, 255, 1)';\n  const calendarBgActive = isDarkMode ? colors.primary : 'white';\n  const calendarTextActive = isDarkMode ? 'white' : colors.primary;\n  const timelineBgColor = isDarkMode ? colors.primary + '30' : '#E5E7EB';\n  const pageBgColor = isDarkMode ? colors.darkBg : 'transparent';\n\n  // View state (main, detail, add, history, schedule, interactions)\n  const [view, setView] = useState('main');\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddOptions, setShowAddOptions] = useState(false);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [biorhythmOptimized, setBiorhythmOptimized] = useState(false);\n  const [biorhythmData, setBiorhythmData] = useState(null);\n  const [optimizedMeds, setOptimizedMeds] = useState([]);\n\n  // Loading state for UI\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Load biorhythm data\n  useEffect(() => {\n    try {\n      const data = biorhythmEngine.getRecommendations();\n      setBiorhythmData(data);\n\n      // Create optimized medication schedule based on biorhythm\n      if (data && medications.length > 0) {\n        optimizeMedicationTiming(data);\n      }\n    } catch (error) {\n      console.error(\"Failed to load biorhythm data:\", error);\n    }\n  }, [medications]);\n\n  // Optimize medication timing based on biorhythm data\n  const optimizeMedicationTiming = bioData => {\n    if (!bioData) return;\n\n    // Get optimal times for medication from biorhythm engine\n    const optimalMedicationTimes = bioData.recommendations.medicationTiming;\n\n    // Create new array of medications with optimized timing\n    const optimized = medications.map(med => {\n      // Deep clone the medication object\n      const optimizedMed = JSON.parse(JSON.stringify(med));\n\n      // Calculate biorhythm alignment score for each medication based on its category\n      let alignmentScore = 0;\n      let optimizedTimes = [];\n      let suggestedChanges = [];\n      optimizedMed.schedule.forEach(scheduleItem => {\n        // Convert time string to hour (24-hour format)\n        let hour = 0;\n        if (scheduleItem.time.includes('AM') || scheduleItem.time.includes('PM')) {\n          const timeParts = scheduleItem.time.split(':');\n          let timeHour = parseInt(timeParts[0]);\n          const isPM = scheduleItem.time.includes('PM');\n          hour = isPM && timeHour !== 12 ? timeHour + 12 : !isPM && timeHour === 12 ? 0 : timeHour;\n        }\n\n        // Check if current time is optimal according to biorhythm\n        const isOptimalTime = optimalMedicationTimes.includes(hour);\n\n        // If not optimal, find the nearest optimal time\n        if (!isOptimalTime && scheduleItem.status === 'upcoming') {\n          let nearestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n\n          // Format the optimal time in AM/PM format\n          const optimalTimeFormatted = `${nearestOptimalHour > 12 ? nearestOptimalHour - 12 : nearestOptimalHour === 0 ? 12 : nearestOptimalHour}:00 ${nearestOptimalHour >= 12 ? 'PM' : 'AM'}`;\n          optimizedTimes.push({\n            currentTime: scheduleItem.time,\n            optimalTime: optimalTimeFormatted\n          });\n          suggestedChanges.push({\n            from: scheduleItem.time,\n            to: optimalTimeFormatted,\n            difference: Math.abs(nearestOptimalHour - hour)\n          });\n        }\n\n        // Calculate alignment score\n        if (isOptimalTime) {\n          alignmentScore += 100;\n        } else {\n          // Find how far the current time is from optimal\n          const closestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n          const hourDifference = Math.abs(closestOptimalHour - hour);\n\n          // Calculate score based on proximity to optimal time (100 - distance * 10)\n          alignmentScore += Math.max(0, 100 - hourDifference * 10);\n        }\n      });\n\n      // Calculate average alignment score\n      alignmentScore = Math.round(alignmentScore / optimizedMed.schedule.length);\n\n      // Add biorhythm data to medication\n      return {\n        ...optimizedMed,\n        biorhythmData: {\n          alignmentScore,\n          optimizedTimes,\n          suggestedChanges\n        }\n      };\n    });\n    setOptimizedMeds(optimized);\n  };\n\n  // Filter medications based on search query\n  const filteredMedications = (biorhythmOptimized ? optimizedMeds : medications).filter(med => med.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Add a new medication\n  const addMedication = async newMedication => {\n    setIsProcessing(true);\n\n    // Format schedule times to match database format\n    const formattedSchedule = newMedication.schedule.map(item => {\n      // Extract just the time part and standardize format\n      let timeStr = item.time;\n      return {\n        ...item,\n        time: timeStr\n      };\n    });\n\n    // Prepare the medication data\n    const medicationData = {\n      ...newMedication,\n      schedule: formattedSchedule\n    };\n\n    // Send to Supabase\n    const result = await addMedicationToSupabase(medicationData);\n    setIsProcessing(false);\n    if (result.success) {\n      // If biorhythm optimization is enabled, update the new medication with biorhythm data\n      if (biorhythmData && biorhythmOptimized) {\n        // Wait for the next render cycle to ensure the medication is in the list\n        setTimeout(() => {\n          optimizeMedicationTiming(biorhythmData);\n        }, 0);\n      }\n      setView('main');\n      return true;\n    } else {\n      // Show error to user\n      alert(`Failed to add medication: ${result.error}`);\n      return false;\n    }\n  };\n\n  // Delete a medication\n  const deleteMedication = async medicationId => {\n    if (window.confirm('Are you sure you want to delete this medication?')) {\n      setIsProcessing(true);\n      const result = await deleteMedicationFromSupabase(medicationId);\n      setIsProcessing(false);\n      if (result.success) {\n        setView('main');\n        return true;\n      } else {\n        alert(`Failed to delete medication: ${result.error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n\n  // Update a medication\n  const updateMedication = async (medicationId, updatedData) => {\n    setIsProcessing(true);\n    const result = await updateMedicationInSupabase(medicationId, updatedData);\n    setIsProcessing(false);\n    if (result.success) {\n      // If biorhythm optimization is enabled, update the medication with biorhythm data\n      if (biorhythmData && biorhythmOptimized) {\n        setTimeout(() => {\n          optimizeMedicationTiming(biorhythmData);\n        }, 0);\n      }\n      return true;\n    } else {\n      alert(`Failed to update medication: ${result.error}`);\n      return false;\n    }\n  };\n\n  // Take, skip, or miss a medication\n  const handleMedicationAction = async (medicationId, scheduleTime, status) => {\n    setIsProcessing(true);\n    const result = await logMedicationStatus(medicationId, scheduleTime, status);\n    setIsProcessing(false);\n    if (result.success) {\n      return true;\n    } else {\n      alert(`Failed to update medication status: ${result.error}`);\n      return false;\n    }\n  };\n\n  // Toggle biorhythm optimization\n  const toggleBiorhythmOptimization = () => {\n    setBiorhythmOptimized(!biorhythmOptimized);\n\n    // If enabling optimization and we have biorhythm data but no optimized meds yet\n    if (!biorhythmOptimized && biorhythmData && (!optimizedMeds.length || optimizedMeds.length !== medications.length)) {\n      optimizeMedicationTiming(biorhythmData);\n    }\n  };\n\n  // Cleanup any popups when clicking outside\n  useEffect(() => {\n    const handleOutsideClick = () => {\n      setShowAddOptions(false);\n      setShowFilterOptions(false);\n    };\n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  }, []);\n\n  // Show loading state while fetching data\n  if (loading && view === 'main') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 pb-8 h-full flex flex-col items-center justify-center dark-mode-transition\",\n      style: {\n        backgroundColor: pageBgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 rounded-full animate-spin mb-6\",\n        style: {\n          borderWidth: '4px',\n          borderStyle: 'solid',\n          borderColor: `${colors.primary}20`,\n          borderTopColor: colors.primary\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2 dark-mode-transition\",\n        style: {\n          color: colors.textPrimary\n        },\n        children: \"Loading Medications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-sm max-w-xs dark-mode-transition\",\n        style: {\n          color: colors.textSecondary\n        },\n        children: \"Fetching your medication information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show error state if there's an issue\n  if (error && view === 'main') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 pb-8 h-full flex flex-col items-center justify-center dark-mode-transition\",\n      style: {\n        backgroundColor: pageBgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 rounded-full flex items-center justify-center mb-6 text-white\",\n        style: {\n          backgroundColor: colors.danger\n        },\n        children: /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2 dark-mode-transition\",\n        style: {\n          color: colors.textPrimary\n        },\n        children: \"Something Went Wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-sm max-w-xs mb-6 dark-mode-transition\",\n        style: {\n          color: colors.textSecondary\n        },\n        children: [\"We couldn't load your medications: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-6 py-2 rounded-xl text-white font-medium transition-all duration-300 hover:shadow-lg\",\n        style: {\n          background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n          boxShadow: `0 4px 6px -1px ${colors.primary}30`\n        },\n        onClick: () => window.location.reload(),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the appropriate view based on state\n  const renderView = () => {\n    switch (view) {\n      case 'detail':\n        return /*#__PURE__*/_jsxDEV(MedicationDetail, {\n          medication: selectedMedication,\n          setView: setView,\n          onDelete: deleteMedication,\n          onUpdate: updateMedication,\n          onTakeMedication: handleMedicationAction,\n          colors: colors,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this);\n      case 'history':\n        return /*#__PURE__*/_jsxDEV(MedicationHistory, {\n          medication: selectedMedication,\n          medications: biorhythmOptimized ? optimizedMeds : medications,\n          setView: setView,\n          colors: colors,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this);\n      case 'schedule':\n        return /*#__PURE__*/_jsxDEV(MedicationSchedule, {\n          medication: selectedMedication,\n          medications: biorhythmOptimized ? optimizedMeds : medications,\n          onTakeMedication: handleMedicationAction,\n          setView: setView,\n          colors: colors,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this);\n      case 'interactions':\n        return /*#__PURE__*/_jsxDEV(MedicationInteractions, {\n          medication: selectedMedication,\n          setView: setView,\n          colors: colors,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this);\n      case 'add':\n        return /*#__PURE__*/_jsxDEV(AddMedicationForm, {\n          setView: setView,\n          addMedication: addMedication,\n          isProcessing: isProcessing,\n          colors: colors,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MedicationList, {\n            medications: filteredMedications,\n            setSelectedMedication: setSelectedMedication,\n            setView: setView,\n            searchQuery: searchQuery,\n            setSearchQuery: setSearchQuery,\n            showAddOptions: showAddOptions,\n            setShowAddOptions: setShowAddOptions,\n            showFilterOptions: showFilterOptions,\n            setShowFilterOptions: setShowFilterOptions,\n            onTakeMedication: handleMedicationAction,\n            colors: colors,\n            biorhythmOptimized: biorhythmOptimized\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 rounded-2xl shadow-lg border flex items-center justify-between dark-mode-transition\",\n            style: {\n              backgroundColor: cardBg,\n              borderColor: borderColor,\n              boxShadow: `0 10px 15px -3px ${colors.primary}20`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-12 h-12 rounded-full flex items-center justify-center mr-4 shimmer\",\n                style: {\n                  background: `linear-gradient(135deg, ${colors.accent}, ${colors.primary})`\n                },\n                children: /*#__PURE__*/_jsxDEV(Zap, {\n                  size: 24,\n                  color: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-bold text-lg dark-mode-transition\",\n                  style: {\n                    color: colors.textPrimary\n                  },\n                  children: \"Biorhythm Optimization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm dark-mode-transition\",\n                  style: {\n                    color: colors.textSecondary\n                  },\n                  children: biorhythmOptimized ? \"Your meds are now aligned with your body's rhythm. Science or magic? You decide.\" : \"Optimize your medication schedule based on your biorhythm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-14 h-7 rounded-full relative transition-all duration-300 focus:outline-none\",\n                style: {\n                  backgroundColor: biorhythmOptimized ? colors.primary : isDarkMode ? '#374151' : '#E5E7EB',\n                  boxShadow: biorhythmOptimized ? `0 0 10px ${colors.primary}40` : 'none'\n                },\n                onClick: toggleBiorhythmOptimization,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"absolute top-1 w-5 h-5 rounded-full bg-white transform transition-transform duration-300\",\n                  style: {\n                    left: biorhythmOptimized ? 'auto' : '0.25rem',\n                    right: biorhythmOptimized ? '0.25rem' : 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), medications.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 rounded-2xl border flex flex-col items-center justify-center dark-mode-transition\",\n            style: {\n              backgroundColor: emptyStateBg,\n              borderColor: borderColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-16 h-16 rounded-full flex items-center justify-center mb-4 dark-mode-transition\",\n              style: {\n                background: `${colors.primary}20`,\n                color: colors.primary\n              },\n              children: /*#__PURE__*/_jsxDEV(Pill, {\n                size: 32\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold mb-2 dark-mode-transition\",\n              style: {\n                color: colors.textPrimary\n              },\n              children: \"No Medications Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-sm max-w-xs mb-6 dark-mode-transition\",\n              style: {\n                color: colors.textSecondary\n              },\n              children: \"You haven't added any medications yet. Start by adding your first medication.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-6 py-2 rounded-xl text-white font-medium transition-all duration-300 hover:shadow-lg\",\n              style: {\n                background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n                boxShadow: `0 4px 6px -1px ${colors.primary}30`\n              },\n              onClick: () => setView('add'),\n              children: \"Add Medication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 pb-8 overflow-y-auto dark-mode-transition\",\n    style: {\n      backgroundColor: pageBgColor\n    },\n    children: [renderView(), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-xl flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 rounded-full animate-spin mb-4\",\n          style: {\n            borderWidth: '4px',\n            borderStyle: 'solid',\n            borderColor: `${colors.primary}20`,\n            borderTopColor: colors.primary\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center font-medium\",\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        @keyframes float {\n          0%, 100% { transform: translateY(0); }\n          50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.6; }\n        }\n        \n        @keyframes breathe {\n          0%, 100% { transform: scale(1); }\n          50% { transform: scale(1.05); }\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -100% 0; }\n          100% { background-position: 200% 0; }\n        }\n        \n        .animate-float {\n          animation: float 3s ease-in-out infinite;\n        }\n        \n        .animate-breathe {\n          animation: breathe 4s ease-in-out infinite;\n        }\n        \n        .shimmer {\n          background: linear-gradient(90deg, \n            rgba(255,255,255,0) 0%, \n            rgba(255,255,255,0.2) 50%, \n            rgba(255,255,255,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n        \n        .dark .shimmer {\n          background: linear-gradient(90deg, \n            rgba(30,41,59,0) 0%, \n            rgba(30,41,59,0.3) 50%, \n            rgba(30,41,59,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicationsScreen, \"nf78nt2tpu/Rv3/ZEPGig2YQpwI=\", false, function () {\n  return [useTheme, useMedications];\n});\n_c = MedicationsScreen;\nexport default MedicationsScreen;\nvar _c;\n$RefreshReg$(_c, \"MedicationsScreen\");","map":{"version":3,"names":["React","useState","useEffect","PlusCircle","Search","Filter","Calendar","Zap","CheckCircle","Clock","X","AlertTriangle","useTheme","MedicationList","MedicationDetail","MedicationHistory","MedicationSchedule","MedicationInteractions","AddMedicationForm","biorhythmEngine","formatTimeWindows","useMedications","jsxDEV","_jsxDEV","Fragment","_Fragment","MedicationsScreen","colors","setActiveScreen","_s","isDarkMode","medications","loading","error","addMedication","addMedicationToSupabase","updateMedication","updateMedicationInSupabase","deleteMedication","deleteMedicationFromSupabase","logMedicationStatus","updateMedicationWithBiorhythm","cardBg","borderColor","primary","hoverBgColor","inputBg","darkBg","emptyStateBg","calendarBgActive","calendarTextActive","timelineBgColor","pageBgColor","view","setView","selectedMedication","setSelectedMedication","searchQuery","setSearchQuery","showAddOptions","setShowAddOptions","showFilterOptions","setShowFilterOptions","biorhythmOptimized","setBiorhythmOptimized","biorhythmData","setBiorhythmData","optimizedMeds","setOptimizedMeds","isProcessing","setIsProcessing","data","getRecommendations","length","optimizeMedicationTiming","console","bioData","optimalMedicationTimes","recommendations","medicationTiming","optimized","map","med","optimizedMed","JSON","parse","stringify","alignmentScore","optimizedTimes","suggestedChanges","schedule","forEach","scheduleItem","hour","time","includes","timeParts","split","timeHour","parseInt","isPM","isOptimalTime","status","nearestOptimalHour","reduce","nearest","current","Math","abs","optimalTimeFormatted","push","currentTime","optimalTime","from","to","difference","closestOptimalHour","hourDifference","max","round","filteredMedications","filter","name","toLowerCase","newMedication","formattedSchedule","item","timeStr","medicationData","result","success","setTimeout","alert","medicationId","window","confirm","updatedData","handleMedicationAction","scheduleTime","toggleBiorhythmOptimization","handleOutsideClick","document","addEventListener","removeEventListener","className","style","backgroundColor","children","borderWidth","borderStyle","borderTopColor","fileName","_jsxFileName","lineNumber","columnNumber","color","textPrimary","textSecondary","danger","size","background","accent","boxShadow","onClick","location","reload","renderView","medication","onDelete","onUpdate","onTakeMedication","left","right","Pill","jsx","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver3/frontend2/src/components/screens/MedicationsScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PlusCircle, Search, Filter, Calendar, Zap, CheckCircle, Clock, X, AlertTriangle } from \"lucide-react\";\nimport { useTheme } from '../ThemeContext';\n\n// Import sub-components\nimport MedicationList from '../shared/MedicationList';\nimport MedicationDetail from '../shared/MedicationDetail';\nimport MedicationHistory from '../shared/MedicationHistory';\nimport MedicationSchedule from '../shared/MedicationSchedule';\nimport MedicationInteractions from '../shared/MedicationInteractions';\nimport AddMedicationForm from '../shared/AddMedicationForm';\n\n// Import biorhythm engine\nimport { biorhythmEngine, formatTimeWindows } from '../services/BiorhythmEngine';\n\n// Import our custom hook for medication data\nimport useMedications from '../useMedications';\n\n// Main component for medication management with biorhythm integration\nconst MedicationsScreen = ({ colors, setActiveScreen }) => {\n  // Get theme context for dark mode\n  const { isDarkMode } = useTheme();\n  \n  // Use our custom hook to fetch and manage medications\n  const { \n    medications, \n    loading, \n    error, \n    addMedication: addMedicationToSupabase, \n    updateMedication: updateMedicationInSupabase,\n    deleteMedication: deleteMedicationFromSupabase,\n    logMedicationStatus,\n    updateMedicationWithBiorhythm\n  } = useMedications();\n  \n  // Dark mode specific styles\n  const cardBg = isDarkMode ? colors.cardBg : 'white';\n  const borderColor = isDarkMode ? `${colors.primary}30` : 'rgba(219, 234, 254, 1)';\n  const hoverBgColor = isDarkMode ? colors.primary + '20' : 'rgba(239, 246, 255, 1)';\n  const inputBg = isDarkMode ? colors.darkBg : 'white';\n  const emptyStateBg = isDarkMode ? colors.primary + '15' : 'rgba(239, 246, 255, 1)';\n  const calendarBgActive = isDarkMode ? colors.primary : 'white';\n  const calendarTextActive = isDarkMode ? 'white' : colors.primary;\n  const timelineBgColor = isDarkMode ? colors.primary + '30' : '#E5E7EB';\n  const pageBgColor = isDarkMode ? colors.darkBg : 'transparent';\n  \n  // View state (main, detail, add, history, schedule, interactions)\n  const [view, setView] = useState('main');\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddOptions, setShowAddOptions] = useState(false);\n  const [showFilterOptions, setShowFilterOptions] = useState(false);\n  const [biorhythmOptimized, setBiorhythmOptimized] = useState(false);\n  const [biorhythmData, setBiorhythmData] = useState(null);\n  const [optimizedMeds, setOptimizedMeds] = useState([]);\n  \n  // Loading state for UI\n  const [isProcessing, setIsProcessing] = useState(false);\n  \n  // Load biorhythm data\n  useEffect(() => {\n    try {\n      const data = biorhythmEngine.getRecommendations();\n      setBiorhythmData(data);\n      \n      // Create optimized medication schedule based on biorhythm\n      if (data && medications.length > 0) {\n        optimizeMedicationTiming(data);\n      }\n    } catch (error) {\n      console.error(\"Failed to load biorhythm data:\", error);\n    }\n  }, [medications]);\n  \n  // Optimize medication timing based on biorhythm data\n  const optimizeMedicationTiming = (bioData) => {\n    if (!bioData) return;\n    \n    // Get optimal times for medication from biorhythm engine\n    const optimalMedicationTimes = bioData.recommendations.medicationTiming;\n    \n    // Create new array of medications with optimized timing\n    const optimized = medications.map(med => {\n      // Deep clone the medication object\n      const optimizedMed = JSON.parse(JSON.stringify(med));\n      \n      // Calculate biorhythm alignment score for each medication based on its category\n      let alignmentScore = 0;\n      let optimizedTimes = [];\n      let suggestedChanges = [];\n      \n      optimizedMed.schedule.forEach(scheduleItem => {\n        // Convert time string to hour (24-hour format)\n        let hour = 0;\n        if (scheduleItem.time.includes('AM') || scheduleItem.time.includes('PM')) {\n          const timeParts = scheduleItem.time.split(':');\n          let timeHour = parseInt(timeParts[0]);\n          const isPM = scheduleItem.time.includes('PM');\n          \n          hour = isPM && timeHour !== 12 ? timeHour + 12 : \n                !isPM && timeHour === 12 ? 0 : timeHour;\n        }\n        \n        // Check if current time is optimal according to biorhythm\n        const isOptimalTime = optimalMedicationTimes.includes(hour);\n        \n        // If not optimal, find the nearest optimal time\n        if (!isOptimalTime && scheduleItem.status === 'upcoming') {\n          let nearestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n          \n          // Format the optimal time in AM/PM format\n          const optimalTimeFormatted = `${nearestOptimalHour > 12 ? nearestOptimalHour - 12 : nearestOptimalHour === 0 ? 12 : nearestOptimalHour}:00 ${nearestOptimalHour >= 12 ? 'PM' : 'AM'}`;\n          \n          optimizedTimes.push({\n            currentTime: scheduleItem.time,\n            optimalTime: optimalTimeFormatted\n          });\n          \n          suggestedChanges.push({\n            from: scheduleItem.time,\n            to: optimalTimeFormatted,\n            difference: Math.abs(nearestOptimalHour - hour)\n          });\n        }\n        \n        // Calculate alignment score\n        if (isOptimalTime) {\n          alignmentScore += 100;\n        } else {\n          // Find how far the current time is from optimal\n          const closestOptimalHour = optimalMedicationTimes.reduce((nearest, current) => {\n            return Math.abs(current - hour) < Math.abs(nearest - hour) ? current : nearest;\n          }, optimalMedicationTimes[0]);\n          \n          const hourDifference = Math.abs(closestOptimalHour - hour);\n          \n          // Calculate score based on proximity to optimal time (100 - distance * 10)\n          alignmentScore += Math.max(0, 100 - (hourDifference * 10));\n        }\n      });\n      \n      // Calculate average alignment score\n      alignmentScore = Math.round(alignmentScore / optimizedMed.schedule.length);\n      \n      // Add biorhythm data to medication\n      return {\n        ...optimizedMed,\n        biorhythmData: {\n          alignmentScore,\n          optimizedTimes,\n          suggestedChanges\n        }\n      };\n    });\n    \n    setOptimizedMeds(optimized);\n  };\n\n  // Filter medications based on search query\n  const filteredMedications = (biorhythmOptimized ? optimizedMeds : medications).filter(med => \n    med.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Add a new medication\n  const addMedication = async (newMedication) => {\n    setIsProcessing(true);\n    \n    // Format schedule times to match database format\n    const formattedSchedule = newMedication.schedule.map(item => {\n      // Extract just the time part and standardize format\n      let timeStr = item.time;\n      return {\n        ...item,\n        time: timeStr\n      };\n    });\n    \n    // Prepare the medication data\n    const medicationData = {\n      ...newMedication,\n      schedule: formattedSchedule\n    };\n    \n    // Send to Supabase\n    const result = await addMedicationToSupabase(medicationData);\n    \n    setIsProcessing(false);\n    \n    if (result.success) {\n      // If biorhythm optimization is enabled, update the new medication with biorhythm data\n      if (biorhythmData && biorhythmOptimized) {\n        // Wait for the next render cycle to ensure the medication is in the list\n        setTimeout(() => {\n          optimizeMedicationTiming(biorhythmData);\n        }, 0);\n      }\n      \n      setView('main');\n      return true;\n    } else {\n      // Show error to user\n      alert(`Failed to add medication: ${result.error}`);\n      return false;\n    }\n  };\n\n  // Delete a medication\n  const deleteMedication = async (medicationId) => {\n    if (window.confirm('Are you sure you want to delete this medication?')) {\n      setIsProcessing(true);\n      const result = await deleteMedicationFromSupabase(medicationId);\n      setIsProcessing(false);\n      \n      if (result.success) {\n        setView('main');\n        return true;\n      } else {\n        alert(`Failed to delete medication: ${result.error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n\n  // Update a medication\n  const updateMedication = async (medicationId, updatedData) => {\n    setIsProcessing(true);\n    const result = await updateMedicationInSupabase(medicationId, updatedData);\n    setIsProcessing(false);\n    \n    if (result.success) {\n      // If biorhythm optimization is enabled, update the medication with biorhythm data\n      if (biorhythmData && biorhythmOptimized) {\n        setTimeout(() => {\n          optimizeMedicationTiming(biorhythmData);\n        }, 0);\n      }\n      \n      return true;\n    } else {\n      alert(`Failed to update medication: ${result.error}`);\n      return false;\n    }\n  };\n\n  // Take, skip, or miss a medication\n  const handleMedicationAction = async (medicationId, scheduleTime, status) => {\n    setIsProcessing(true);\n    const result = await logMedicationStatus(medicationId, scheduleTime, status);\n    setIsProcessing(false);\n    \n    if (result.success) {\n      return true;\n    } else {\n      alert(`Failed to update medication status: ${result.error}`);\n      return false;\n    }\n  };\n\n  // Toggle biorhythm optimization\n  const toggleBiorhythmOptimization = () => {\n    setBiorhythmOptimized(!biorhythmOptimized);\n    \n    // If enabling optimization and we have biorhythm data but no optimized meds yet\n    if (!biorhythmOptimized && biorhythmData && (!optimizedMeds.length || optimizedMeds.length !== medications.length)) {\n      optimizeMedicationTiming(biorhythmData);\n    }\n  };\n\n  // Cleanup any popups when clicking outside\n  useEffect(() => {\n    const handleOutsideClick = () => {\n      setShowAddOptions(false);\n      setShowFilterOptions(false);\n    };\n    \n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  }, []);\n\n  // Show loading state while fetching data\n  if (loading && view === 'main') {\n    return (\n      <div className=\"p-6 pb-8 h-full flex flex-col items-center justify-center dark-mode-transition\" style={{ backgroundColor: pageBgColor }}>\n        <div className=\"w-16 h-16 rounded-full animate-spin mb-6\" \n             style={{ \n               borderWidth: '4px',\n               borderStyle: 'solid',\n               borderColor: `${colors.primary}20`,\n               borderTopColor: colors.primary\n             }}></div>\n        <h3 className=\"text-xl font-bold mb-2 dark-mode-transition\" style={{ color: colors.textPrimary }}>Loading Medications</h3>\n        <p className=\"text-center text-sm max-w-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n          Fetching your medication information...\n        </p>\n      </div>\n    );\n  }\n\n  // Show error state if there's an issue\n  if (error && view === 'main') {\n    return (\n      <div className=\"p-6 pb-8 h-full flex flex-col items-center justify-center dark-mode-transition\" style={{ backgroundColor: pageBgColor }}>\n        <div className=\"w-16 h-16 rounded-full flex items-center justify-center mb-6 text-white\"\n             style={{ backgroundColor: colors.danger }}>\n          <AlertTriangle size={32} />\n        </div>\n        <h3 className=\"text-xl font-bold mb-2 dark-mode-transition\" style={{ color: colors.textPrimary }}>Something Went Wrong</h3>\n        <p className=\"text-center text-sm max-w-xs mb-6 dark-mode-transition\" style={{ color: colors.textSecondary }}>\n          We couldn't load your medications: {error}\n        </p>\n        <button \n          className=\"px-6 py-2 rounded-xl text-white font-medium transition-all duration-300 hover:shadow-lg\"\n          style={{ \n            background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n            boxShadow: `0 4px 6px -1px ${colors.primary}30`\n          }}\n          onClick={() => window.location.reload()}\n        >\n          Try Again\n        </button>\n      </div>\n    );\n  }\n\n  // Render the appropriate view based on state\n  const renderView = () => {\n    switch(view) {\n      case 'detail':\n        return (\n          <MedicationDetail \n            medication={selectedMedication} \n            setView={setView}\n            onDelete={deleteMedication}\n            onUpdate={updateMedication}\n            onTakeMedication={handleMedicationAction}\n            colors={colors} \n            isDarkMode={isDarkMode}\n          />\n        );\n      case 'history':\n        return (\n          <MedicationHistory \n            medication={selectedMedication} \n            medications={biorhythmOptimized ? optimizedMeds : medications} \n            setView={setView} \n            colors={colors} \n            isDarkMode={isDarkMode}\n          />\n        );\n      case 'schedule':\n        return (\n          <MedicationSchedule \n            medication={selectedMedication} \n            medications={biorhythmOptimized ? optimizedMeds : medications} \n            onTakeMedication={handleMedicationAction}\n            setView={setView} \n            colors={colors} \n            isDarkMode={isDarkMode}\n          />\n        );\n      case 'interactions':\n        return (\n          <MedicationInteractions \n            medication={selectedMedication} \n            setView={setView} \n            colors={colors} \n            isDarkMode={isDarkMode}\n          />\n        );\n      case 'add':\n        return (\n          <AddMedicationForm \n            setView={setView} \n            addMedication={addMedication}\n            isProcessing={isProcessing}\n            colors={colors} \n            isDarkMode={isDarkMode}\n          />\n        );\n      default:\n        return (\n          <>\n            <MedicationList \n              medications={filteredMedications} \n              setSelectedMedication={setSelectedMedication} \n              setView={setView} \n              searchQuery={searchQuery} \n              setSearchQuery={setSearchQuery} \n              showAddOptions={showAddOptions} \n              setShowAddOptions={setShowAddOptions} \n              showFilterOptions={showFilterOptions} \n              setShowFilterOptions={setShowFilterOptions} \n              onTakeMedication={handleMedicationAction}\n              colors={colors}\n              biorhythmOptimized={biorhythmOptimized}\n            />\n            <br></br>\n            <div className=\"mb-6 p-4 rounded-2xl shadow-lg border flex items-center justify-between dark-mode-transition\"\n                 style={{ \n                   backgroundColor: cardBg,\n                   borderColor: borderColor,\n                   boxShadow: `0 10px 15px -3px ${colors.primary}20` \n                 }}>\n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full flex items-center justify-center mr-4 shimmer\" \n                     style={{ \n                       background: `linear-gradient(135deg, ${colors.accent}, ${colors.primary})`,\n                     }}>\n                  <Zap size={24} color=\"white\" />\n                </div>\n                <div>\n                  <h3 className=\"font-bold text-lg dark-mode-transition\" style={{ color: colors.textPrimary }}>Biorhythm Optimization</h3>\n                  <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                    {biorhythmOptimized \n                      ? \"Your meds are now aligned with your body's rhythm. Science or magic? You decide.\" \n                      : \"Optimize your medication schedule based on your biorhythm\"}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <button \n                  className=\"w-14 h-7 rounded-full relative transition-all duration-300 focus:outline-none\"\n                  style={{ \n                    backgroundColor: biorhythmOptimized ? colors.primary : isDarkMode ? '#374151' : '#E5E7EB',\n                    boxShadow: biorhythmOptimized ? `0 0 10px ${colors.primary}40` : 'none'\n                  }}\n                  onClick={toggleBiorhythmOptimization}\n                >\n                  <span \n                    className=\"absolute top-1 w-5 h-5 rounded-full bg-white transform transition-transform duration-300\"\n                    style={{ \n                      left: biorhythmOptimized ? 'auto' : '0.25rem',\n                      right: biorhythmOptimized ? '0.25rem' : 'auto'\n                    }}\n                  ></span>\n                </button>\n              </div>\n            </div>\n            \n            {/* Show empty state if no medications */}\n            {medications.length === 0 && (\n              <div className=\"p-6 rounded-2xl border flex flex-col items-center justify-center dark-mode-transition\"\n                   style={{ \n                     backgroundColor: emptyStateBg,\n                     borderColor: borderColor\n                   }}>\n                <div className=\"w-16 h-16 rounded-full flex items-center justify-center mb-4 dark-mode-transition\" \n                     style={{ \n                       background: `${colors.primary}20`,\n                       color: colors.primary\n                     }}>\n                  <Pill size={32} />\n                </div>\n                <h3 className=\"text-xl font-bold mb-2 dark-mode-transition\" style={{ color: colors.textPrimary }}>No Medications Yet</h3>\n                <p className=\"text-center text-sm max-w-xs mb-6 dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                  You haven't added any medications yet. Start by adding your first medication.\n                </p>\n                <button \n                  className=\"px-6 py-2 rounded-xl text-white font-medium transition-all duration-300 hover:shadow-lg\"\n                  style={{ \n                    background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n                    boxShadow: `0 4px 6px -1px ${colors.primary}30`\n                  }}\n                  onClick={() => setView('add')}\n                >\n                  Add Medication\n                </button>\n              </div>\n            )}\n          </>\n        );\n    }\n  };\n\n  return (\n    <div className=\"p-6 pb-8 overflow-y-auto dark-mode-transition\" style={{ backgroundColor: pageBgColor }}>\n      {renderView()}\n      \n      {/* Processing overlay */}\n      {isProcessing && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n          <div className=\"bg-white p-6 rounded-xl shadow-xl flex flex-col items-center\">\n            <div className=\"w-12 h-12 rounded-full animate-spin mb-4\" \n                 style={{ \n                   borderWidth: '4px',\n                   borderStyle: 'solid',\n                   borderColor: `${colors.primary}20`,\n                   borderTopColor: colors.primary\n                 }}></div>\n            <p className=\"text-center font-medium\">Processing...</p>\n          </div>\n        </div>\n      )}\n      \n      {/* Custom CSS for animations */}\n      <style jsx>{`\n        @keyframes float {\n          0%, 100% { transform: translateY(0); }\n          50% { transform: translateY(-10px); }\n        }\n        \n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.6; }\n        }\n        \n        @keyframes breathe {\n          0%, 100% { transform: scale(1); }\n          50% { transform: scale(1.05); }\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -100% 0; }\n          100% { background-position: 200% 0; }\n        }\n        \n        .animate-float {\n          animation: float 3s ease-in-out infinite;\n        }\n        \n        .animate-breathe {\n          animation: breathe 4s ease-in-out infinite;\n        }\n        \n        .shimmer {\n          background: linear-gradient(90deg, \n            rgba(255,255,255,0) 0%, \n            rgba(255,255,255,0.2) 50%, \n            rgba(255,255,255,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n        \n        .dark .shimmer {\n          background: linear-gradient(90deg, \n            rgba(30,41,59,0) 0%, \n            rgba(30,41,59,0.3) 50%, \n            rgba(30,41,59,0) 100%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default MedicationsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}