{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver4_2/frontend2/src/components/ApiMiddleware.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useRef, useCallback } from 'react';\nimport { AlertTriangle, Loader, WifiOff, Server, RefreshCw, CheckCircle, Clock, AlertOctagon } from 'lucide-react';\nimport { useTheme } from './ThemeContext';\n\n// Create API middleware context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiMiddlewareContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the API middleware context\nexport const useApiMiddleware = () => {\n  _s();\n  return useContext(ApiMiddlewareContext);\n};\n\n// Constants for configuration\n_s(useApiMiddleware, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst CONFIG = {\n  RETRY_DELAYS: [2000, 5000, 10000, 30000],\n  // Exponential backoff delays in ms\n  CACHE_EXPIRY: 24 * 60 * 60 * 1000,\n  // 24 hours in ms\n  ERROR_DISPLAY_DURATION: 5000,\n  // 5 seconds\n  SUCCESS_DISPLAY_DURATION: 3000,\n  // 3 seconds\n  QUEUE_PROCESS_INTERVAL: 15000,\n  // Check queued requests every 15 seconds\n  MAX_RETRIES: 3 // Maximum number of retries for failed requests\n};\n\n// Define the provider component\nconst ApiMiddlewareProvider = ({\n  children,\n  colors\n}) => {\n  _s2();\n  const {\n    isDarkMode\n  } = useTheme();\n\n  // State for tracking API request status\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('Processing...');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [apiRetries, setApiRetries] = useState(0);\n  const [offline, setOffline] = useState(false);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [requestStats, setRequestStats] = useState({\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    cachedResponses: 0\n  });\n\n  // Refs for internal tracking\n  const activeRequests = useRef(new Map());\n  const requestCache = useRef(new Map());\n  const queueTimeoutRef = useRef(null);\n  const networkStatus = useRef({\n    lastOnline: Date.now(),\n    lastOffline: null,\n    reconnectAttempts: 0\n  });\n\n  // Monitor network status\n  useEffect(() => {\n    const handleOnline = () => {\n      setOffline(false);\n      networkStatus.current.lastOnline = Date.now();\n      networkStatus.current.reconnectAttempts = 0;\n\n      // Process any queued requests when we're back online\n      processQueuedRequests();\n\n      // Show success message\n      setSuccess({\n        message: 'You are back online',\n        timestamp: Date.now()\n      });\n      setTimeout(() => setSuccess(null), CONFIG.SUCCESS_DISPLAY_DURATION);\n    };\n    const handleOffline = () => {\n      setOffline(true);\n      networkStatus.current.lastOffline = Date.now();\n    };\n\n    // On mount, check if we're offline\n    setOffline(!navigator.onLine);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Setup interval for checking network status and retrying queued requests\n  useEffect(() => {\n    const checkNetworkAndQueue = () => {\n      // If we have queued requests and we're online, try to process them\n      if (pendingRequests.length > 0 && !offline) {\n        processQueuedRequests();\n      }\n\n      // Check if we need to ping the server to verify connection\n      if (offline && networkStatus.current.reconnectAttempts < 5) {\n        performConnectivityCheck();\n      }\n    };\n    const intervalId = setInterval(checkNetworkAndQueue, CONFIG.QUEUE_PROCESS_INTERVAL);\n    return () => clearInterval(intervalId);\n  }, [offline, pendingRequests]);\n\n  // Reset error after configured time\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => {\n        clearError();\n      }, CONFIG.ERROR_DISPLAY_DURATION);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n\n  // Reset success message after configured time\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(null);\n      }, CONFIG.SUCCESS_DISPLAY_DURATION);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Function to check connectivity by pinging a small endpoint\n  const performConnectivityCheck = async () => {\n    try {\n      // Use a lightweight endpoint for checking connectivity\n      // This could be a dedicated health check endpoint in your API\n      const response = await fetch('/api/health', {\n        method: 'GET',\n        headers: {\n          'Cache-Control': 'no-cache'\n        },\n        // Set a short timeout for the connectivity check\n        signal: AbortSignal.timeout(5000)\n      });\n      if (response.ok) {\n        setOffline(false);\n        networkStatus.current.lastOnline = Date.now();\n        networkStatus.current.reconnectAttempts = 0;\n        return true;\n      }\n      return false;\n    } catch (error) {\n      // Increment reconnect attempts for exponential backoff\n      networkStatus.current.reconnectAttempts++;\n      return false;\n    }\n  };\n\n  // Process any queued requests when connectivity is restored\n  const processQueuedRequests = useCallback(() => {\n    if (pendingRequests.length === 0 || offline) return;\n\n    // Clone the queue so we can process it without race conditions\n    const requestsToProcess = [...pendingRequests];\n    setPendingRequests([]); // Clear the queue\n\n    // Process each request in order\n    requestsToProcess.forEach(async request => {\n      try {\n        // Use callApi without queueing (to avoid infinite loops)\n        const result = await executeApiCall(request.apiFunction, request.args, {\n          skipQueue: true,\n          customErrorMsg: `Failed to process queued request: ${request.description || ''}`\n        });\n\n        // If the request has a callback, execute it with the result\n        if (request.onComplete) {\n          request.onComplete(result);\n        }\n\n        // Update stats\n        setRequestStats(prev => ({\n          ...prev,\n          successfulRequests: prev.successfulRequests + 1\n        }));\n      } catch (error) {\n        // If the request fails, add it back to the queue if it hasn't exceeded retries\n        if (request.retries < CONFIG.MAX_RETRIES) {\n          setPendingRequests(prev => [...prev, {\n            ...request,\n            retries: request.retries + 1,\n            lastAttempt: Date.now()\n          }]);\n        } else {\n          // If we've exceeded retries, log it and update stats\n          console.error('Request exceeded max retries and was dropped:', request);\n          setRequestStats(prev => ({\n            ...prev,\n            failedRequests: prev.failedRequests + 1\n          }));\n\n          // If the request has an onError callback, execute it\n          if (request.onError) {\n            request.onError(error);\n          }\n        }\n      }\n    });\n  }, [pendingRequests, offline]);\n\n  // Clear expired items from the cache\n  const cleanupCache = useCallback(() => {\n    const now = Date.now();\n    for (const [key, value] of requestCache.current.entries()) {\n      if (now - value.timestamp > CONFIG.CACHE_EXPIRY) {\n        requestCache.current.delete(key);\n      }\n    }\n  }, []);\n\n  // Generate a cache key from function and args\n  const generateCacheKey = (apiFunction, args) => {\n    // Use the function name and stringified args as cache key\n    const funcName = apiFunction.name || 'anonymousFunction';\n    return `${funcName}-${JSON.stringify(args)}`;\n  };\n\n  // Core function to execute an API call with all middleware features\n  const executeApiCall = async (apiFunction, args = [], options = {}) => {\n    const {\n      skipCache = false,\n      skipQueue = false,\n      skipRetry = false,\n      skipLoading = false,\n      customErrorMsg = null,\n      cacheKey = null,\n      showSuccessMessage = false,\n      successMessage = 'Operation completed successfully'\n    } = options;\n\n    // Update the request statistics\n    setRequestStats(prev => ({\n      ...prev,\n      totalRequests: prev.totalRequests + 1\n    }));\n    try {\n      // If not specifically skipped, set loading state\n      if (!skipLoading) {\n        setIsLoading(true);\n      }\n\n      // Generate a unique ID for this request to track it\n      const requestId = Math.random().toString(36).substring(2, 9);\n\n      // Check if we're offline and should queue this request\n      if (offline && !skipQueue) {\n        setPendingRequests(prev => [...prev, {\n          id: requestId,\n          apiFunction,\n          args,\n          retries: 0,\n          createdAt: Date.now(),\n          lastAttempt: null,\n          description: typeof args[0] === 'string' ? args[0] : 'API request',\n          options\n        }]);\n        throw new Error(\"You're currently offline. Request has been queued for when you're back online.\");\n      }\n\n      // If caching is not skipped, check the cache first\n      const actualCacheKey = cacheKey || generateCacheKey(apiFunction, args);\n      if (!skipCache) {\n        const cachedResponse = requestCache.current.get(actualCacheKey);\n\n        // If found in cache and not expired\n        if (cachedResponse && Date.now() - cachedResponse.timestamp < CONFIG.CACHE_EXPIRY) {\n          // Update stats for cached responses\n          setRequestStats(prev => ({\n            ...prev,\n            cachedResponses: prev.cachedResponses + 1\n          }));\n          return cachedResponse.data;\n        }\n\n        // Clean up expired cache items periodically\n        cleanupCache();\n      }\n\n      // Track the request in our active requests map\n      activeRequests.current.set(requestId, {\n        startTime: Date.now(),\n        function: apiFunction.name || 'anonymous',\n        args\n      });\n\n      // Execute the API call\n      const result = await apiFunction(...args);\n\n      // Remove from active requests\n      activeRequests.current.delete(requestId);\n\n      // Cache the successful result\n      if (!skipCache) {\n        requestCache.current.set(actualCacheKey, {\n          data: result,\n          timestamp: Date.now()\n        });\n      }\n\n      // Update successful request count\n      setRequestStats(prev => ({\n        ...prev,\n        successfulRequests: prev.successfulRequests + 1\n      }));\n\n      // Show success message if configured\n      if (showSuccessMessage) {\n        setSuccess({\n          message: successMessage,\n          timestamp: Date.now()\n        });\n        setTimeout(() => setSuccess(null), CONFIG.SUCCESS_DISPLAY_DURATION);\n      }\n      return result;\n    } catch (err) {\n      // Format the error message to be more user-friendly\n      let errorMessage = err.message || 'An unknown error occurred';\n\n      // Use custom error message if provided\n      if (customErrorMsg) {\n        errorMessage = customErrorMsg;\n      }\n      // Add more context to common errors\n      else if (errorMessage.includes('Failed to fetch') || errorMessage.includes('NetworkError')) {\n        errorMessage = 'Network error: Please check your connection and try again.';\n        setOffline(true);\n\n        // Increment retry counter\n        setApiRetries(prev => prev + 1);\n      } else if (errorMessage.includes('Timeout')) {\n        errorMessage = 'Request timed out: The server took too long to respond.';\n      } else if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Authentication error: Please log in again.';\n      } else if (errorMessage.includes('403') || errorMessage.includes('Forbidden')) {\n        errorMessage = 'Access denied: You don\\'t have permission to access this resource.';\n      } else if (errorMessage.includes('500')) {\n        errorMessage = 'Server error: Our system is experiencing issues. Please try again later.';\n      } else if (errorMessage.includes('offline') || errorMessage.includes('queued')) {\n        // Don't show error message for queued requests\n        setError(null);\n        throw err;\n      }\n      setError({\n        message: errorMessage,\n        timestamp: Date.now(),\n        code: err.code || 'UNKNOWN',\n        retryable: !skipRetry\n      });\n\n      // Update failed request count\n      setRequestStats(prev => ({\n        ...prev,\n        failedRequests: prev.failedRequests + 1\n      }));\n      throw err;\n    } finally {\n      if (!skipLoading) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Wrapper for API calls to handle loading and errors with appropriate options\n  const callApi = async (apiFunction, ...args) => {\n    return executeApiCall(apiFunction, args);\n  };\n\n  // Enhanced callApi with additional options\n  const callApiWithOptions = async (apiFunction, args = [], options = {}) => {\n    return executeApiCall(apiFunction, args, options);\n  };\n\n  // Clear error state\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Retry the last failed request (placeholder for future enhancement)\n  const retryLastRequest = () => {\n    setError(null);\n\n    // If we have pending requests and we're back online, try processing them\n    if (pendingRequests.length > 0 && !offline) {\n      processQueuedRequests();\n    }\n  };\n\n  // Force an immediate network connectivity check\n  const checkConnection = async () => {\n    const isConnected = await performConnectivityCheck();\n    if (isConnected && pendingRequests.length > 0) {\n      processQueuedRequests();\n    }\n    return isConnected;\n  };\n\n  // Get API performance metrics\n  const getMetrics = () => {\n    const activeRequestCount = activeRequests.current.size;\n    const activeRequestsArray = Array.from(activeRequests.current.values());\n    return {\n      ...requestStats,\n      activeRequests: activeRequestCount,\n      queuedRequests: pendingRequests.length,\n      cacheSize: requestCache.current.size,\n      averageResponseTime: calculateAverageResponseTime(),\n      longestRunningRequest: activeRequestCount > 0 ? activeRequestsArray.reduce((prev, current) => current.startTime < prev.startTime ? current : prev) : null\n    };\n  };\n\n  // Calculate average response time (placeholder implementation)\n  const calculateAverageResponseTime = () => {\n    // In a real implementation, you would track response times for completed requests\n    // and calculate an average. This is a placeholder.\n    return 200; // ms\n  };\n\n  // Reset connection state and retry counters\n  const resetConnectionState = () => {\n    setOffline(false);\n    setApiRetries(0);\n    networkStatus.current.reconnectAttempts = 0;\n    checkConnection();\n  };\n\n  // Clear the request cache\n  const clearCache = () => {\n    requestCache.current.clear();\n    setRequestStats(prev => ({\n      ...prev,\n      cachedResponses: 0\n    }));\n  };\n\n  // Value to be provided to consuming components\n  const value = {\n    isLoading,\n    loadingMessage,\n    setLoadingMessage,\n    error,\n    offline,\n    apiRetries,\n    pendingRequests,\n    clearError,\n    callApi,\n    callApiWithOptions,\n    retryLastRequest,\n    checkConnection,\n    getMetrics,\n    resetConnectionState,\n    clearCache,\n    requestStats\n  };\n  return /*#__PURE__*/_jsxDEV(ApiMiddlewareContext.Provider, {\n    value: value,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 rounded-2xl shadow-lg animate-pulse dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          boxShadow: `0 20px 25px -5px ${colors.primary}30`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            size: 24,\n            className: \"animate-spin mr-3\",\n            style: {\n              color: colors.primary\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-medium dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: loadingMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this), offline && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-5 right-0 left-0 mx-auto w-max z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          borderLeft: `4px solid ${colors.warning}`,\n          boxShadow: `0 10px 15px -3px ${colors.warning}30`\n        },\n        children: [/*#__PURE__*/_jsxDEV(WifiOff, {\n          size: 20,\n          className: \"mr-3\",\n          style: {\n            color: colors.warning\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm mb-1 dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: \"You're Offline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: [\"Using cached data. \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-xs\",\n              children: pendingRequests.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 36\n            }, this), \" requests queued for when you're back online.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\",\n          style: {\n            backgroundColor: isDarkMode ? `${colors.warning}20` : `${colors.warning}10`,\n            color: colors.warning\n          },\n          onClick: checkConnection,\n          children: /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-5 left-0 right-0 mx-auto w-max z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          borderLeft: `4px solid ${colors.danger}`,\n          boxShadow: `0 10px 15px -3px ${colors.danger}30`\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 20,\n          className: \"mr-3\",\n          style: {\n            color: colors.danger\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm mb-1 dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), error.retryable && !offline && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mt-2 text-xs py-1 px-2 rounded transition-colors duration-300\",\n            style: {\n              backgroundColor: isDarkMode ? `${colors.primary}20` : `${colors.primary}10`,\n              color: colors.primary\n            },\n            onClick: retryLastRequest,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\",\n          style: {\n            backgroundColor: isDarkMode ? `${colors.danger}20` : `${colors.danger}10`,\n            color: colors.danger\n          },\n          onClick: clearError,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-20 left-0 right-0 mx-auto w-max z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          borderLeft: `4px solid ${colors.success}`,\n          boxShadow: `0 10px 15px -3px ${colors.success}30`\n        },\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 20,\n          className: \"mr-3\",\n          style: {\n            color: colors.success\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm mb-1 dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: success.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\",\n          style: {\n            backgroundColor: isDarkMode ? `${colors.success}20` : `${colors.success}10`,\n            color: colors.success\n          },\n          onClick: () => setSuccess(null),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 9\n    }, this), apiRetries > 2 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-5 left-0 right-0 mx-auto w-max z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg flex items-start max-w-md animate-bounce-in dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          borderLeft: `4px solid ${colors.info}`,\n          boxShadow: `0 10px 15px -3px ${colors.info}30`\n        },\n        children: [/*#__PURE__*/_jsxDEV(Server, {\n          size: 20,\n          className: \"mr-3 mt-1\",\n          style: {\n            color: colors.info\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm mb-1 dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: \"Server Connection Issues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs mb-2 dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: \"Using local data mode: Some features may be limited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-xs py-1 px-2 rounded transition-colors duration-300\",\n              style: {\n                backgroundColor: isDarkMode ? `${colors.primary}20` : `${colors.primary}10`,\n                color: colors.primary\n              },\n              onClick: checkConnection,\n              children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n                size: 12,\n                className: \"inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this), \"Check Connection\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-xs py-1 px-2 rounded transition-colors duration-300\",\n              style: {\n                backgroundColor: isDarkMode ? `${colors.warning}20` : `${colors.warning}10`,\n                color: colors.warning\n              },\n              onClick: () => {\n                setApiRetries(0);\n                clearCache();\n              },\n              children: \"Reset & Clear Cache\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-2 p-2 rounded-full transition-colors duration-300 dark-mode-transition\",\n          style: {\n            backgroundColor: isDarkMode ? `${colors.info}20` : `${colors.info}10`,\n            color: colors.info\n          },\n          onClick: () => setApiRetries(0),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 9\n    }, this), apiRetries > 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-20 left-0 right-0 mx-auto w-max z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          borderLeft: `4px solid ${colors.danger}`,\n          boxShadow: `0 10px 15px -3px ${colors.danger}30`\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertOctagon, {\n          size: 20,\n          className: \"mr-3\",\n          style: {\n            color: colors.danger\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm mb-1 dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: \"Connection Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: \"Cannot connect to the server. Some features may not work correctly.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\",\n          style: {\n            backgroundColor: isDarkMode ? `${colors.danger}20` : `${colors.danger}10`,\n            color: colors.danger\n          },\n          onClick: () => resetConnectionState(),\n          children: /*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 9\n    }, this), offline && pendingRequests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-20 right-5 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-full shadow-lg flex items-center animate-pulse dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          boxShadow: `0 10px 15px -3px ${colors.warning}30`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(WifiOff, {\n            size: 20,\n            style: {\n              color: colors.warning\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute -top-2 -right-2 w-5 h-5 rounded-full flex items-center justify-center text-xs font-bold text-white\",\n            style: {\n              backgroundColor: colors.warning\n            },\n            children: pendingRequests.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 9\n    }, this), Array.from(activeRequests.current.values()).some(req => Date.now() - req.startTime > 8000) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-20 left-5 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-full shadow-lg flex items-center animate-pulse dark-mode-transition\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          boxShadow: `0 10px 15px -3px ${colors.info}30`\n        },\n        children: /*#__PURE__*/_jsxDEV(Clock, {\n          size: 20,\n          style: {\n            color: colors.info\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 9\n    }, this), children, /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        @keyframes bounce-in {\n          0% { transform: translateY(20px); opacity: 0; }\n          100% { transform: translateY(0); opacity: 1; }\n        }\n        .animate-bounce-in {\n          animation: bounce-in 0.3s ease-out forwards;\n        }\n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.6; }\n        }\n        .animate-pulse {\n          animation: pulse 2s infinite;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n};\n\n// Export as a named export\n_s2(ApiMiddlewareProvider, \"TnagOpucipuA2+7utQpc//30CYI=\", false, function () {\n  return [useTheme];\n});\n_c = ApiMiddlewareProvider;\nexport { ApiMiddlewareProvider };\n\n// Export as default\nexport default ApiMiddlewareProvider;\nvar _c;\n$RefreshReg$(_c, \"ApiMiddlewareProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","useCallback","AlertTriangle","Loader","WifiOff","Server","RefreshCw","CheckCircle","Clock","AlertOctagon","useTheme","jsxDEV","_jsxDEV","ApiMiddlewareContext","useApiMiddleware","_s","CONFIG","RETRY_DELAYS","CACHE_EXPIRY","ERROR_DISPLAY_DURATION","SUCCESS_DISPLAY_DURATION","QUEUE_PROCESS_INTERVAL","MAX_RETRIES","ApiMiddlewareProvider","children","colors","_s2","isDarkMode","isLoading","setIsLoading","loadingMessage","setLoadingMessage","error","setError","success","setSuccess","apiRetries","setApiRetries","offline","setOffline","pendingRequests","setPendingRequests","requestStats","setRequestStats","totalRequests","successfulRequests","failedRequests","cachedResponses","activeRequests","Map","requestCache","queueTimeoutRef","networkStatus","lastOnline","Date","now","lastOffline","reconnectAttempts","handleOnline","current","processQueuedRequests","message","timestamp","setTimeout","handleOffline","navigator","onLine","window","addEventListener","removeEventListener","checkNetworkAndQueue","length","performConnectivityCheck","intervalId","setInterval","clearInterval","timer","clearError","clearTimeout","response","fetch","method","headers","signal","AbortSignal","timeout","ok","requestsToProcess","forEach","request","result","executeApiCall","apiFunction","args","skipQueue","customErrorMsg","description","onComplete","prev","retries","lastAttempt","console","onError","cleanupCache","key","value","entries","delete","generateCacheKey","funcName","name","JSON","stringify","options","skipCache","skipRetry","skipLoading","cacheKey","showSuccessMessage","successMessage","requestId","Math","random","toString","substring","id","createdAt","Error","actualCacheKey","cachedResponse","get","data","set","startTime","function","err","errorMessage","includes","code","retryable","callApi","callApiWithOptions","retryLastRequest","checkConnection","isConnected","getMetrics","activeRequestCount","size","activeRequestsArray","Array","from","values","queuedRequests","cacheSize","averageResponseTime","calculateAverageResponseTime","longestRunningRequest","reduce","resetConnectionState","clearCache","clear","Provider","className","style","backgroundColor","cardBg","boxShadow","primary","color","fileName","_jsxFileName","lineNumber","columnNumber","textPrimary","borderLeft","warning","textSecondary","onClick","danger","info","some","req","jsx","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver4_2/frontend2/src/components/ApiMiddleware.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef, useCallback } from 'react';\nimport { \n  AlertTriangle, \n  Loader, \n  WifiOff, \n  Server, \n  RefreshCw, \n  CheckCircle,\n  Clock,\n  AlertOctagon\n} from 'lucide-react';\nimport { useTheme } from './ThemeContext';\n\n// Create API middleware context\nconst ApiMiddlewareContext = createContext();\n\n// Custom hook to use the API middleware context\nexport const useApiMiddleware = () => {\n  return useContext(ApiMiddlewareContext);\n};\n\n// Constants for configuration\nconst CONFIG = {\n  RETRY_DELAYS: [2000, 5000, 10000, 30000], // Exponential backoff delays in ms\n  CACHE_EXPIRY: 24 * 60 * 60 * 1000, // 24 hours in ms\n  ERROR_DISPLAY_DURATION: 5000, // 5 seconds\n  SUCCESS_DISPLAY_DURATION: 3000, // 3 seconds\n  QUEUE_PROCESS_INTERVAL: 15000, // Check queued requests every 15 seconds\n  MAX_RETRIES: 3, // Maximum number of retries for failed requests\n};\n\n// Define the provider component\nconst ApiMiddlewareProvider = ({ children, colors }) => {\n  const { isDarkMode } = useTheme();\n  \n  // State for tracking API request status\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('Processing...');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [apiRetries, setApiRetries] = useState(0);\n  const [offline, setOffline] = useState(false);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [requestStats, setRequestStats] = useState({\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    cachedResponses: 0,\n  });\n  \n  // Refs for internal tracking\n  const activeRequests = useRef(new Map());\n  const requestCache = useRef(new Map());\n  const queueTimeoutRef = useRef(null);\n  const networkStatus = useRef({\n    lastOnline: Date.now(),\n    lastOffline: null,\n    reconnectAttempts: 0,\n  });\n  \n  // Monitor network status\n  useEffect(() => {\n    const handleOnline = () => {\n      setOffline(false);\n      networkStatus.current.lastOnline = Date.now();\n      networkStatus.current.reconnectAttempts = 0;\n      \n      // Process any queued requests when we're back online\n      processQueuedRequests();\n      \n      // Show success message\n      setSuccess({\n        message: 'You are back online',\n        timestamp: Date.now()\n      });\n      setTimeout(() => setSuccess(null), CONFIG.SUCCESS_DISPLAY_DURATION);\n    };\n    \n    const handleOffline = () => {\n      setOffline(true);\n      networkStatus.current.lastOffline = Date.now();\n    };\n    \n    // On mount, check if we're offline\n    setOffline(!navigator.onLine);\n    \n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    \n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n  \n  // Setup interval for checking network status and retrying queued requests\n  useEffect(() => {\n    const checkNetworkAndQueue = () => {\n      // If we have queued requests and we're online, try to process them\n      if (pendingRequests.length > 0 && !offline) {\n        processQueuedRequests();\n      }\n      \n      // Check if we need to ping the server to verify connection\n      if (offline && networkStatus.current.reconnectAttempts < 5) {\n        performConnectivityCheck();\n      }\n    };\n    \n    const intervalId = setInterval(checkNetworkAndQueue, CONFIG.QUEUE_PROCESS_INTERVAL);\n    \n    return () => clearInterval(intervalId);\n  }, [offline, pendingRequests]);\n  \n  // Reset error after configured time\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => {\n        clearError();\n      }, CONFIG.ERROR_DISPLAY_DURATION);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n  \n  // Reset success message after configured time\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(null);\n      }, CONFIG.SUCCESS_DISPLAY_DURATION);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n  \n  // Function to check connectivity by pinging a small endpoint\n  const performConnectivityCheck = async () => {\n    try {\n      // Use a lightweight endpoint for checking connectivity\n      // This could be a dedicated health check endpoint in your API\n      const response = await fetch('/api/health', { \n        method: 'GET',\n        headers: { 'Cache-Control': 'no-cache' },\n        // Set a short timeout for the connectivity check\n        signal: AbortSignal.timeout(5000) \n      });\n      \n      if (response.ok) {\n        setOffline(false);\n        networkStatus.current.lastOnline = Date.now();\n        networkStatus.current.reconnectAttempts = 0;\n        return true;\n      }\n      return false;\n    } catch (error) {\n      // Increment reconnect attempts for exponential backoff\n      networkStatus.current.reconnectAttempts++;\n      return false;\n    }\n  };\n  \n  // Process any queued requests when connectivity is restored\n  const processQueuedRequests = useCallback(() => {\n    if (pendingRequests.length === 0 || offline) return;\n    \n    // Clone the queue so we can process it without race conditions\n    const requestsToProcess = [...pendingRequests];\n    setPendingRequests([]); // Clear the queue\n    \n    // Process each request in order\n    requestsToProcess.forEach(async (request) => {\n      try {\n        // Use callApi without queueing (to avoid infinite loops)\n        const result = await executeApiCall(\n          request.apiFunction, \n          request.args, \n          { \n            skipQueue: true, \n            customErrorMsg: `Failed to process queued request: ${request.description || ''}` \n          }\n        );\n        \n        // If the request has a callback, execute it with the result\n        if (request.onComplete) {\n          request.onComplete(result);\n        }\n        \n        // Update stats\n        setRequestStats(prev => ({\n          ...prev,\n          successfulRequests: prev.successfulRequests + 1\n        }));\n        \n      } catch (error) {\n        // If the request fails, add it back to the queue if it hasn't exceeded retries\n        if (request.retries < CONFIG.MAX_RETRIES) {\n          setPendingRequests(prev => [...prev, {\n            ...request,\n            retries: request.retries + 1,\n            lastAttempt: Date.now()\n          }]);\n        } else {\n          // If we've exceeded retries, log it and update stats\n          console.error('Request exceeded max retries and was dropped:', request);\n          setRequestStats(prev => ({\n            ...prev,\n            failedRequests: prev.failedRequests + 1\n          }));\n          \n          // If the request has an onError callback, execute it\n          if (request.onError) {\n            request.onError(error);\n          }\n        }\n      }\n    });\n  }, [pendingRequests, offline]);\n  \n  // Clear expired items from the cache\n  const cleanupCache = useCallback(() => {\n    const now = Date.now();\n    for (const [key, value] of requestCache.current.entries()) {\n      if (now - value.timestamp > CONFIG.CACHE_EXPIRY) {\n        requestCache.current.delete(key);\n      }\n    }\n  }, []);\n  \n  // Generate a cache key from function and args\n  const generateCacheKey = (apiFunction, args) => {\n    // Use the function name and stringified args as cache key\n    const funcName = apiFunction.name || 'anonymousFunction';\n    return `${funcName}-${JSON.stringify(args)}`;\n  };\n  \n  // Core function to execute an API call with all middleware features\n  const executeApiCall = async (apiFunction, args = [], options = {}) => {\n    const {\n      skipCache = false,\n      skipQueue = false,\n      skipRetry = false,\n      skipLoading = false,\n      customErrorMsg = null,\n      cacheKey = null,\n      showSuccessMessage = false,\n      successMessage = 'Operation completed successfully'\n    } = options;\n    \n    // Update the request statistics\n    setRequestStats(prev => ({\n      ...prev,\n      totalRequests: prev.totalRequests + 1\n    }));\n    \n    try {\n      // If not specifically skipped, set loading state\n      if (!skipLoading) {\n        setIsLoading(true);\n      }\n      \n      // Generate a unique ID for this request to track it\n      const requestId = Math.random().toString(36).substring(2, 9);\n      \n      // Check if we're offline and should queue this request\n      if (offline && !skipQueue) {\n        setPendingRequests(prev => [...prev, {\n          id: requestId,\n          apiFunction,\n          args,\n          retries: 0,\n          createdAt: Date.now(),\n          lastAttempt: null,\n          description: typeof args[0] === 'string' ? args[0] : 'API request',\n          options\n        }]);\n        \n        throw new Error(\"You're currently offline. Request has been queued for when you're back online.\");\n      }\n      \n      // If caching is not skipped, check the cache first\n      const actualCacheKey = cacheKey || generateCacheKey(apiFunction, args);\n      if (!skipCache) {\n        const cachedResponse = requestCache.current.get(actualCacheKey);\n        \n        // If found in cache and not expired\n        if (cachedResponse && (Date.now() - cachedResponse.timestamp < CONFIG.CACHE_EXPIRY)) {\n          // Update stats for cached responses\n          setRequestStats(prev => ({\n            ...prev,\n            cachedResponses: prev.cachedResponses + 1\n          }));\n          \n          return cachedResponse.data;\n        }\n        \n        // Clean up expired cache items periodically\n        cleanupCache();\n      }\n      \n      // Track the request in our active requests map\n      activeRequests.current.set(requestId, {\n        startTime: Date.now(),\n        function: apiFunction.name || 'anonymous',\n        args\n      });\n      \n      // Execute the API call\n      const result = await apiFunction(...args);\n      \n      // Remove from active requests\n      activeRequests.current.delete(requestId);\n      \n      // Cache the successful result\n      if (!skipCache) {\n        requestCache.current.set(actualCacheKey, {\n          data: result,\n          timestamp: Date.now()\n        });\n      }\n      \n      // Update successful request count\n      setRequestStats(prev => ({\n        ...prev,\n        successfulRequests: prev.successfulRequests + 1\n      }));\n      \n      // Show success message if configured\n      if (showSuccessMessage) {\n        setSuccess({\n          message: successMessage,\n          timestamp: Date.now()\n        });\n        setTimeout(() => setSuccess(null), CONFIG.SUCCESS_DISPLAY_DURATION);\n      }\n      \n      return result;\n    } catch (err) {\n      // Format the error message to be more user-friendly\n      let errorMessage = err.message || 'An unknown error occurred';\n      \n      // Use custom error message if provided\n      if (customErrorMsg) {\n        errorMessage = customErrorMsg;\n      }\n      // Add more context to common errors\n      else if (errorMessage.includes('Failed to fetch') || errorMessage.includes('NetworkError')) {\n        errorMessage = 'Network error: Please check your connection and try again.';\n        setOffline(true);\n        \n        // Increment retry counter\n        setApiRetries(prev => prev + 1);\n      } else if (errorMessage.includes('Timeout')) {\n        errorMessage = 'Request timed out: The server took too long to respond.';\n      } else if (errorMessage.includes('401') || errorMessage.includes('Unauthorized')) {\n        errorMessage = 'Authentication error: Please log in again.';\n      } else if (errorMessage.includes('403') || errorMessage.includes('Forbidden')) {\n        errorMessage = 'Access denied: You don\\'t have permission to access this resource.';\n      } else if (errorMessage.includes('500')) {\n        errorMessage = 'Server error: Our system is experiencing issues. Please try again later.';\n      } else if (errorMessage.includes('offline') || errorMessage.includes('queued')) {\n        // Don't show error message for queued requests\n        setError(null);\n        throw err;\n      }\n      \n      setError({\n        message: errorMessage,\n        timestamp: Date.now(),\n        code: err.code || 'UNKNOWN',\n        retryable: !skipRetry\n      });\n      \n      // Update failed request count\n      setRequestStats(prev => ({\n        ...prev,\n        failedRequests: prev.failedRequests + 1\n      }));\n      \n      throw err;\n    } finally {\n      if (!skipLoading) {\n        setIsLoading(false);\n      }\n    }\n  };\n  \n  // Wrapper for API calls to handle loading and errors with appropriate options\n  const callApi = async (apiFunction, ...args) => {\n    return executeApiCall(apiFunction, args);\n  };\n  \n  // Enhanced callApi with additional options\n  const callApiWithOptions = async (apiFunction, args = [], options = {}) => {\n    return executeApiCall(apiFunction, args, options);\n  };\n  \n  // Clear error state\n  const clearError = () => {\n    setError(null);\n  };\n  \n  // Retry the last failed request (placeholder for future enhancement)\n  const retryLastRequest = () => {\n    setError(null);\n    \n    // If we have pending requests and we're back online, try processing them\n    if (pendingRequests.length > 0 && !offline) {\n      processQueuedRequests();\n    }\n  };\n  \n  // Force an immediate network connectivity check\n  const checkConnection = async () => {\n    const isConnected = await performConnectivityCheck();\n    if (isConnected && pendingRequests.length > 0) {\n      processQueuedRequests();\n    }\n    return isConnected;\n  };\n  \n  // Get API performance metrics\n  const getMetrics = () => {\n    const activeRequestCount = activeRequests.current.size;\n    const activeRequestsArray = Array.from(activeRequests.current.values());\n    \n    return {\n      ...requestStats,\n      activeRequests: activeRequestCount,\n      queuedRequests: pendingRequests.length,\n      cacheSize: requestCache.current.size,\n      averageResponseTime: calculateAverageResponseTime(),\n      longestRunningRequest: activeRequestCount > 0 \n        ? activeRequestsArray.reduce((prev, current) => \n            current.startTime < prev.startTime ? current : prev\n          )\n        : null\n    };\n  };\n  \n  // Calculate average response time (placeholder implementation)\n  const calculateAverageResponseTime = () => {\n    // In a real implementation, you would track response times for completed requests\n    // and calculate an average. This is a placeholder.\n    return 200; // ms\n  };\n  \n  // Reset connection state and retry counters\n  const resetConnectionState = () => {\n    setOffline(false);\n    setApiRetries(0);\n    networkStatus.current.reconnectAttempts = 0;\n    checkConnection();\n  };\n  \n  // Clear the request cache\n  const clearCache = () => {\n    requestCache.current.clear();\n    setRequestStats(prev => ({\n      ...prev,\n      cachedResponses: 0\n    }));\n  };\n  \n  // Value to be provided to consuming components\n  const value = {\n    isLoading,\n    loadingMessage,\n    setLoadingMessage,\n    error,\n    offline,\n    apiRetries,\n    pendingRequests,\n    clearError,\n    callApi,\n    callApiWithOptions,\n    retryLastRequest,\n    checkConnection,\n    getMetrics,\n    resetConnectionState,\n    clearCache,\n    requestStats\n  };\n  \n  return (\n    <ApiMiddlewareContext.Provider value={value}>\n      {/* Loading overlay with customizable message */}\n      {isLoading && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\">\n          <div className=\"p-6 rounded-2xl shadow-lg animate-pulse dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 boxShadow: `0 20px 25px -5px ${colors.primary}30`\n               }}>\n            <div className=\"flex items-center\">\n              <Loader size={24} className=\"animate-spin mr-3\" style={{ color: colors.primary }} />\n              <span className=\"text-lg font-medium dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                {loadingMessage}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Offline indicator with enhanced UI */}\n      {offline && !error && (\n        <div className=\"fixed top-5 right-0 left-0 mx-auto w-max z-50\">\n          <div className=\"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 borderLeft: `4px solid ${colors.warning}`,\n                 boxShadow: `0 10px 15px -3px ${colors.warning}30`\n               }}>\n            <WifiOff size={20} className=\"mr-3\" style={{ color: colors.warning }} />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-sm mb-1 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                You're Offline\n              </h4>\n              <p className=\"text-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                Using cached data. <span className=\"font-medium text-xs\">{pendingRequests.length}</span> requests queued for when you're back online.\n              </p>\n            </div>\n            <button \n              className=\"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\"\n              style={{ \n                backgroundColor: isDarkMode ? `${colors.warning}20` : `${colors.warning}10`,\n                color: colors.warning\n              }}\n              onClick={checkConnection}\n            >\n              <RefreshCw size={16} />\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Error toast with more detailed information */}\n      {error && (\n        <div className=\"fixed bottom-5 left-0 right-0 mx-auto w-max z-50\">\n          <div className=\"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 borderLeft: `4px solid ${colors.danger}`,\n                 boxShadow: `0 10px 15px -3px ${colors.danger}30`\n               }}>\n            <AlertTriangle size={20} className=\"mr-3\" style={{ color: colors.danger }} />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-sm mb-1 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                Error\n              </h4>\n              <p className=\"text-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                {error.message}\n              </p>\n              {error.retryable && !offline && (\n                <button \n                  className=\"mt-2 text-xs py-1 px-2 rounded transition-colors duration-300\"\n                  style={{ \n                    backgroundColor: isDarkMode ? `${colors.primary}20` : `${colors.primary}10`,\n                    color: colors.primary\n                  }}\n                  onClick={retryLastRequest}\n                >\n                  Retry\n                </button>\n              )}\n            </div>\n            <button \n              className=\"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\"\n              style={{ \n                backgroundColor: isDarkMode ? `${colors.danger}20` : `${colors.danger}10`,\n                color: colors.danger\n              }}\n              onClick={clearError}\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Success toast notification */}\n      {success && (\n        <div className=\"fixed top-20 left-0 right-0 mx-auto w-max z-50\">\n          <div className=\"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 borderLeft: `4px solid ${colors.success}`,\n                 boxShadow: `0 10px 15px -3px ${colors.success}30`\n               }}>\n            <CheckCircle size={20} className=\"mr-3\" style={{ color: colors.success }} />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-sm mb-1 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                Success\n              </h4>\n              <p className=\"text-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                {success.message}\n              </p>\n            </div>\n            <button \n              className=\"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\"\n              style={{ \n                backgroundColor: isDarkMode ? `${colors.success}20` : `${colors.success}10`,\n                color: colors.success\n              }}\n              onClick={() => setSuccess(null)}\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Server error (after multiple retries) with more detailed info */}\n      {apiRetries > 2 && !error && (\n        <div className=\"fixed bottom-5 left-0 right-0 mx-auto w-max z-50\">\n          <div className=\"p-4 rounded-xl shadow-lg flex items-start max-w-md animate-bounce-in dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 borderLeft: `4px solid ${colors.info}`,\n                 boxShadow: `0 10px 15px -3px ${colors.info}30`\n               }}>\n            <Server size={20} className=\"mr-3 mt-1\" style={{ color: colors.info }} />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-sm mb-1 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                Server Connection Issues\n              </h4>\n              <p className=\"text-xs mb-2 dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                Using local data mode: Some features may be limited\n              </p>\n              <div className=\"flex space-x-2\">\n                <button \n                  className=\"text-xs py-1 px-2 rounded transition-colors duration-300\"\n                  style={{ \n                    backgroundColor: isDarkMode ? `${colors.primary}20` : `${colors.primary}10`,\n                    color: colors.primary\n                  }}\n                  onClick={checkConnection}\n                >\n                  <RefreshCw size={12} className=\"inline mr-1\" />\n                  Check Connection\n                </button>\n                \n                <button \n                  className=\"text-xs py-1 px-2 rounded transition-colors duration-300\"\n                  style={{ \n                    backgroundColor: isDarkMode ? `${colors.warning}20` : `${colors.warning}10`,\n                    color: colors.warning\n                  }}\n                  onClick={() => {\n                    setApiRetries(0);\n                    clearCache();\n                  }}\n                >\n                  Reset & Clear Cache\n                </button>\n              </div>\n            </div>\n            <button \n              className=\"ml-2 p-2 rounded-full transition-colors duration-300 dark-mode-transition\"\n              style={{ \n                backgroundColor: isDarkMode ? `${colors.info}20` : `${colors.info}10`,\n                color: colors.info\n              }}\n              onClick={() => setApiRetries(0)}\n            >\n              ✕\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Critical error warning for important failures */}\n      {apiRetries > 4 && (\n        <div className=\"fixed top-20 left-0 right-0 mx-auto w-max z-50\">\n          <div className=\"p-4 rounded-xl shadow-lg flex items-center max-w-md animate-bounce-in dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 borderLeft: `4px solid ${colors.danger}`,\n                 boxShadow: `0 10px 15px -3px ${colors.danger}30`\n               }}>\n            <AlertOctagon size={20} className=\"mr-3\" style={{ color: colors.danger }} />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-sm mb-1 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                Connection Problem\n              </h4>\n              <p className=\"text-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                Cannot connect to the server. Some features may not work correctly.\n              </p>\n            </div>\n            <button \n              className=\"ml-4 p-2 rounded-full transition-colors duration-300 dark-mode-transition\"\n              style={{ \n                backgroundColor: isDarkMode ? `${colors.danger}20` : `${colors.danger}10`,\n                color: colors.danger\n              }}\n              onClick={() => resetConnectionState()}\n            >\n              <RefreshCw size={16} />\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection status indicator when offline with pending requests */}\n      {offline && pendingRequests.length > 0 && (\n        <div className=\"fixed bottom-20 right-5 z-50\">\n          <div className=\"p-3 rounded-full shadow-lg flex items-center animate-pulse dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 boxShadow: `0 10px 15px -3px ${colors.warning}30`\n               }}>\n            <div className=\"relative\">\n              <WifiOff size={20} style={{ color: colors.warning }} />\n              <div className=\"absolute -top-2 -right-2 w-5 h-5 rounded-full flex items-center justify-center text-xs font-bold text-white\"\n                   style={{ backgroundColor: colors.warning }}>\n                {pendingRequests.length}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Slow request indicator for long-running requests */}\n      {Array.from(activeRequests.current.values()).some(req => Date.now() - req.startTime > 8000) && (\n        <div className=\"fixed bottom-20 left-5 z-50\">\n          <div className=\"p-3 rounded-full shadow-lg flex items-center animate-pulse dark-mode-transition\"\n               style={{ \n                 backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                 boxShadow: `0 10px 15px -3px ${colors.info}30`\n               }}>\n            <Clock size={20} style={{ color: colors.info }} />\n          </div>\n        </div>\n      )}\n      \n      {children}\n      \n      <style jsx>{`\n        @keyframes bounce-in {\n          0% { transform: translateY(20px); opacity: 0; }\n          100% { transform: translateY(0); opacity: 1; }\n        }\n        .animate-bounce-in {\n          animation: bounce-in 0.3s ease-out forwards;\n        }\n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.6; }\n        }\n        .animate-pulse {\n          animation: pulse 2s infinite;\n        }\n      `}</style>\n    </ApiMiddlewareContext.Provider>\n  );\n};\n\n// Export as a named export\nexport { ApiMiddlewareProvider };\n\n// Export as default\nexport default ApiMiddlewareProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}