{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver4/frontend2/src/components/screens/SymptomsScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlusCircle, Lightbulb, ChevronRight, Activity, Brain, TrendingUp, BarChart2, Clock, Calendar, Heart, RefreshCw, Loader, Link, AlertCircle, WifiOff, CheckCircle, User, LifeBuoy, Database, Dumbbell, Apple, Moon, Settings } from \"lucide-react\";\nimport { useTheme } from '../ThemeContext';\nimport { useHealthData } from '../HealthDataContext';\nimport { useApiMiddleware } from '../ApiMiddleware';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SymptomsScreen = ({\n  colors\n}) => {\n  _s();\n  const {\n    isDarkMode\n  } = useTheme();\n  const {\n    isLoading,\n    callApi\n  } = useApiMiddleware();\n  const {\n    isGoogleFitConnected,\n    connectGoogleFit,\n    symptoms,\n    addSymptom,\n    healthMetrics,\n    aiInsights,\n    loading: healthDataLoading,\n    fetchHealthData,\n    prediction\n  } = useHealthData();\n\n  // Local state\n  const [view, setView] = useState('main');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [googleFitStatus, setGoogleFitStatus] = useState({\n    isConnecting: false,\n    connectionError: null,\n    dataFreshness: 'unknown'\n  });\n  const [googleFitData, setGoogleFitData] = useState(null);\n\n  // Fetch health data on component mount\n  useEffect(() => {\n    if (isGoogleFitConnected) {\n      refreshGoogleFitData();\n    }\n  }, [isGoogleFitConnected]);\n\n  // Refresh Google Fit data\n  const refreshGoogleFitData = async () => {\n    if (!isGoogleFitConnected) {\n      setGoogleFitData(null);\n      return;\n    }\n    try {\n      setIsRefreshing(true);\n      setGoogleFitStatus(prev => ({\n        ...prev,\n        dataFreshness: 'refreshing'\n      }));\n\n      // Call the API directly to ensure we're not using mock data\n      const freshData = await callApi(api.fetchHealthData, {\n        days: 7\n      });\n\n      // Only update if we got actual data back\n      if (freshData && Object.keys(freshData).length > 0) {\n        setGoogleFitData(freshData);\n        setLastUpdated(new Date());\n        setGoogleFitStatus(prev => ({\n          ...prev,\n          dataFreshness: 'fresh'\n        }));\n      } else {\n        setGoogleFitStatus(prev => ({\n          ...prev,\n          dataFreshness: 'unavailable',\n          connectionError: 'No data returned from Google Fit'\n        }));\n      }\n    } catch (error) {\n      console.error(\"Failed to refresh Google Fit data:\", error);\n      setGoogleFitStatus(prev => ({\n        ...prev,\n        dataFreshness: 'error',\n        connectionError: error.message || 'Failed to fetch Google Fit data'\n      }));\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Connect to Google Fit\n  const handleConnectGoogleFit = async () => {\n    try {\n      setGoogleFitStatus(prev => ({\n        ...prev,\n        isConnecting: true,\n        connectionError: null\n      }));\n\n      // Make the actual connection to Google Fit\n      await connectGoogleFit();\n\n      // Fetch data immediately after connection\n      await refreshGoogleFitData();\n      setGoogleFitStatus(prev => ({\n        ...prev,\n        isConnecting: false\n      }));\n    } catch (error) {\n      console.error(\"Failed to connect to Google Fit:\", error);\n      setGoogleFitStatus(prev => ({\n        ...prev,\n        isConnecting: false,\n        connectionError: error.message || 'Failed to connect to Google Fit'\n      }));\n    }\n  };\n\n  // Format the display text for symptom date and time\n  const formatTimeDisplay = symptom => {\n    return `${symptom.date}, ${symptom.time}`;\n  };\n\n  // Format last updated time\n  const formatLastUpdated = () => {\n    if (!lastUpdated) return \"Never\";\n    const now = new Date();\n    const diff = Math.floor((now - lastUpdated) / 1000); // seconds\n\n    if (diff < 60) return \"Just now\";\n    if (diff < 3600) return `${Math.floor(diff / 60)} minutes ago`;\n    if (diff < 86400) return `${Math.floor(diff / 3600)} hours ago`;\n    return lastUpdated.toLocaleDateString();\n  };\n\n  // Style variables\n  const cardBg = isDarkMode ? colors.cardBg : 'white';\n  const borderColor = isDarkMode ? `${colors.primary}30` : 'rgba(219, 234, 254, 1)';\n  const sectionHeadingClass = \"font-bold text-lg dark-mode-transition mb-4\";\n  const sectionHeadingStyle = {\n    color: colors.textPrimary\n  };\n  const cardClass = \"p-5 rounded-2xl shadow-lg border overflow-hidden dark-mode-transition transform transition-all hover:shadow-xl\";\n  const cardStyle = {\n    backgroundColor: cardBg,\n    borderColor: borderColor,\n    boxShadow: `0 10px 15px -3px ${colors.primary}20`\n  };\n\n  // Check if we have real data from Google Fit\n  const hasGoogleFitData = googleFitData && Object.keys(googleFitData).length > 0;\n\n  // Handle adding a new symptom\n  const handleAddSymptom = async symptomData => {\n    if (!isGoogleFitConnected || !hasGoogleFitData) {\n      // If no Google Fit data, don't attach health context\n      await addSymptom(symptomData);\n    } else {\n      // Add health metrics from Google Fit\n      const enhancedSymptomData = {\n        ...symptomData,\n        healthContext: {\n          bmi: googleFitData.BMI,\n          bloodPressure: {\n            systolic: googleFitData.systolic,\n            diastolic: googleFitData.diastolic\n          },\n          glucose: googleFitData.glucose,\n          sleep: {\n            sleep_time: googleFitData.sleep_time,\n            wake_time: googleFitData.wake_time\n          }\n        }\n      };\n      await addSymptom(enhancedSymptomData);\n    }\n\n    // Show success message and return to main view\n    setShowSuccessMessage(true);\n    setTimeout(() => setShowSuccessMessage(false), 3000);\n    setView('main');\n  };\n\n  // Render Google Fit connection component\n  const renderGoogleFitConnection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cardClass + \" mb-8\",\n    style: cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-12 h-12 rounded-xl mr-4 flex items-center justify-center\",\n        style: {\n          background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`\n        },\n        children: /*#__PURE__*/_jsxDEV(Activity, {\n          size: 24,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold text-lg dark-mode-transition\",\n          style: {\n            color: colors.textPrimary\n          },\n          children: \"Google Fit Integration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm dark-mode-transition\",\n          style: {\n            color: colors.textSecondary\n          },\n          children: \"Connect to import your health metrics in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), isGoogleFitConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-lg flex items-center mb-4\",\n        style: {\n          backgroundColor: `${colors.success}15`,\n          color: colors.success\n        },\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 18,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: \"Connected to Google Fit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshGoogleFitData,\n          disabled: isRefreshing,\n          className: \"flex-1 py-3 px-4 rounded-lg font-medium transition-all flex items-center justify-center\",\n          style: {\n            backgroundColor: `${colors.primary}15`,\n            color: colors.primary,\n            opacity: isRefreshing ? 0.7 : 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 18,\n            className: `mr-2 ${isRefreshing ? 'animate-spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), isRefreshing ? 'Refreshing...' : 'Refresh Data']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-3 px-4 rounded-lg font-medium transition-all flex items-center justify-center\",\n          style: {\n            backgroundColor: `${colors.accent}15`,\n            color: colors.accent\n          },\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            size: 18,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), \"Manage\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), googleFitStatus.connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-lg flex items-center mt-4\",\n        style: {\n          backgroundColor: `${colors.warning}15`,\n          color: colors.warning\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 18,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: googleFitStatus.connectionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [googleFitStatus.connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-lg flex items-center mb-4\",\n        style: {\n          backgroundColor: `${colors.danger}15`,\n          color: colors.danger\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 18,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: googleFitStatus.connectionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 rounded-lg flex items-start mb-4\",\n        style: {\n          backgroundColor: `${colors.primary}15`,\n          color: colors.primary\n        },\n        children: [/*#__PURE__*/_jsxDEV(Lightbulb, {\n          size: 18,\n          className: \"mr-2 mt-0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Connect for better insights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs mt-1\",\n            children: \"Google Fit provides real-time health metrics that improve AI analysis of your symptoms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnectGoogleFit,\n        disabled: googleFitStatus.isConnecting,\n        className: \"w-full py-3 px-4 rounded-lg text-white font-medium transition-all flex items-center justify-center\",\n        style: {\n          background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n          opacity: googleFitStatus.isConnecting ? 0.7 : 1\n        },\n        children: googleFitStatus.isConnecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            size: 18,\n            className: \"animate-spin mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 19\n          }, this), \"Connecting...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            size: 18,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 19\n          }, this), \"Connect Google Fit\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }, this), isGoogleFitConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t mt-4 pt-3 flex items-center justify-between\",\n      style: {\n        borderColor: borderColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs\",\n        style: {\n          color: colors.textSecondary\n        },\n        children: [\"Last updated: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colors.primary\n          },\n          children: formatLastUpdated()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#privacy\",\n        className: \"text-xs flex items-center\",\n        style: {\n          color: colors.primary\n        },\n        children: [\"Privacy Policy\", /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 12,\n          className: \"ml-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 7\n  }, this);\n\n  // Render Google Fit health metrics\n  const renderGoogleFitMetrics = () => {\n    if (!isGoogleFitConnected || !hasGoogleFitData) {\n      return null;\n    }\n    const metrics = [{\n      name: \"Blood Pressure\",\n      value: googleFitData.systolic ? `${Math.round(googleFitData.systolic)}/${Math.round(googleFitData.diastolic)} mmHg` : \"N/A\",\n      icon: /*#__PURE__*/_jsxDEV(Heart, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this),\n      color: colors.danger\n    }, {\n      name: \"BMI\",\n      value: googleFitData.BMI ? googleFitData.BMI.toFixed(1) : \"N/A\",\n      subtext: googleFitData.BMI ? googleFitData.BMI < 18.5 ? \"Underweight\" : googleFitData.BMI < 25 ? \"Normal\" : googleFitData.BMI < 30 ? \"Overweight\" : \"Obese\" : \"\",\n      icon: /*#__PURE__*/_jsxDEV(User, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this),\n      color: colors.primary\n    }, {\n      name: \"Glucose\",\n      value: googleFitData.glucose ? `${Math.round(googleFitData.glucose)} mg/dL` : \"N/A\",\n      icon: /*#__PURE__*/_jsxDEV(BarChart2, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this),\n      color: colors.accent\n    }, {\n      name: \"Sleep\",\n      value: googleFitData.sleep_time ? `${googleFitData.sleep_time} - ${googleFitData.wake_time}` : \"N/A\",\n      icon: /*#__PURE__*/_jsxDEV(Moon, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this),\n      color: colors.gradientAlt1\n    }, {\n      name: \"Weight\",\n      value: googleFitData.weight ? `${googleFitData.weight.toFixed(1)} kg` : \"N/A\",\n      icon: /*#__PURE__*/_jsxDEV(Dumbbell, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this),\n      color: colors.gradientAlt2\n    }, {\n      name: \"Height\",\n      value: googleFitData.height ? `${googleFitData.height.toFixed(2)} m` : \"N/A\",\n      icon: /*#__PURE__*/_jsxDEV(Activity, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this),\n      color: colors.warning\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: sectionHeadingClass,\n          style: sectionHeadingStyle,\n          children: \"Google Fit Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs dark-mode-transition px-3 py-1 rounded-full\",\n          style: {\n            backgroundColor: `${colors.primary}15`,\n            color: colors.primary\n          },\n          children: \"Real-time data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 gap-4\",\n        children: metrics.map((metric, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 rounded-xl border hover:shadow-md transition-all duration-300 dark-mode-transition\",\n          style: {\n            backgroundColor: cardBg,\n            borderColor: borderColor\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 rounded-lg mr-2 flex items-center justify-center\",\n              style: {\n                backgroundColor: `${metric.color}20`\n              },\n              children: /*#__PURE__*/React.cloneElement(metric.icon, {\n                style: {\n                  color: metric.color\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs font-medium dark-mode-transition\",\n              style: {\n                color: colors.textSecondary\n              },\n              children: metric.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-bold dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: metric.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), metric.subtext && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: metric.subtext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this);\n  };\n\n  // No Google Fit data message\n  const renderNoGoogleFitDataMessage = () => {\n    if (isGoogleFitConnected && (!hasGoogleFitData || isRefreshing)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-4 rounded-xl border flex items-center dark-mode-transition\",\n        style: {\n          backgroundColor: `${colors.info}10`,\n          borderColor: `${colors.info}30`,\n          color: colors.info\n        },\n        children: [isRefreshing ? /*#__PURE__*/_jsxDEV(Loader, {\n          size: 20,\n          className: \"animate-spin mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Database, {\n          size: 20,\n          className: \"mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm\",\n            children: isRefreshing ? 'Fetching Google Fit Data...' : 'No Google Fit Data Available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs mt-1\",\n            children: isRefreshing ? 'Please wait while we fetch your latest health metrics...' : 'We could not retrieve your Google Fit data. Please refresh or reconnect.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this);\n    }\n    return null;\n  };\n\n  // Handle back button click\n  const handleBack = () => {\n    setView('main');\n  };\n\n  // Render UI based on the current view\n  if (view === 'add') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 pb-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"flex items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-10 h-10 rounded-full flex items-center justify-center mr-4 hover:bg-opacity-10 transition-colors duration-300 dark-mode-transition\",\n          onClick: handleBack,\n          style: {\n            backgroundColor: isDarkMode ? `${colors.primary}10` : 'transparent',\n            color: colors.textPrimary\n          },\n          children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 24,\n            style: {\n              transform: 'rotate(180deg)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold\",\n            style: {\n              background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`,\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent'\n            },\n            children: \"Log Symptom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: \"Track what your body's telling you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this), isGoogleFitConnected && hasGoogleFitData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 p-4 rounded-xl border flex items-start dark-mode-transition\",\n        style: {\n          backgroundColor: `${colors.success}10`,\n          borderColor: `${colors.success}30`,\n          color: colors.success\n        },\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 20,\n          className: \"mr-3 mt-0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm\",\n            children: \"Google Fit Data Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs mt-1\",\n            children: \"Your symptoms will be recorded with your current health metrics from Google Fit for better insights.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        style: cardStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-4 dark-mode-transition\",\n          style: {\n            color: colors.textPrimary\n          },\n          children: \"Symptom Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddSymptom({\n              symptom: \"Headache\",\n              severity: \"Moderate\",\n              time: new Date().toLocaleTimeString(),\n              date: new Date().toLocaleDateString(),\n              notes: \"Sample symptom with Google Fit data\"\n            }),\n            className: \"w-full py-3 px-4 rounded-lg text-white font-medium transition-all\",\n            style: {\n              background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`\n            },\n            children: \"Submit Symptom Demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 pb-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold\",\n          style: {\n            background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`,\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent'\n          },\n          children: \"Symptoms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm dark-mode-transition\",\n          style: {\n            color: colors.textSecondary\n          },\n          children: \"Track your health with Google Fit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-12 h-12 rounded-full flex items-center justify-center shadow-lg transition-transform hover:scale-110 duration-300\",\n        style: {\n          background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`,\n          boxShadow: `0 0 20px ${colors.primary}60`\n        },\n        onClick: () => setView('add'),\n        disabled: isLoading || healthDataLoading,\n        children: /*#__PURE__*/_jsxDEV(PlusCircle, {\n          size: 24,\n          color: \"white\",\n          className: isLoading || healthDataLoading ? \"animate-pulse\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-5 left-0 right-0 mx-auto w-max z-50 animate-bounce-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow-lg flex items-center max-w-md\",\n        style: {\n          backgroundColor: isDarkMode ? colors.cardBg : 'white',\n          borderLeft: `4px solid ${colors.success}`,\n          boxShadow: `0 10px 15px -3px ${colors.success}30`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 rounded-full mr-3 flex items-center justify-center\",\n          style: {\n            backgroundColor: `${colors.success}20`\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n            size: 18,\n            style: {\n              color: colors.success\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-sm dark-mode-transition\",\n            style: {\n              color: colors.textPrimary\n            },\n            children: \"Symptom Added Successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs dark-mode-transition\",\n            style: {\n              color: colors.textSecondary\n            },\n            children: isGoogleFitConnected && hasGoogleFitData ? 'Recorded with Google Fit health data' : 'Recorded without health metrics'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 11\n    }, this), renderGoogleFitConnection(), renderNoGoogleFitDataMessage(), renderGoogleFitMetrics(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: sectionHeadingClass,\n        style: sectionHeadingStyle,\n        children: \"Recent Symptoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this), symptoms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: symptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardClass + \" transform hover:scale-102\",\n          style: cardStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-10 h-10 rounded-xl mr-3 flex items-center justify-center\",\n              style: {\n                backgroundColor: `${colors.accent}15`,\n                color: colors.accent\n              },\n              children: symptom.symptom === \"Headache\" ? /*#__PURE__*/_jsxDEV(Activity, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 57\n              }, this) : /*#__PURE__*/_jsxDEV(LifeBuoy, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 82\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium dark-mode-transition\",\n                  style: {\n                    color: colors.textPrimary\n                  },\n                  children: symptom.symptom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"px-2 py-0.5 rounded-full text-xs\",\n                  style: {\n                    backgroundColor: `${symptom.severity === \"Severe\" ? colors.danger : symptom.severity === \"Moderate\" ? colors.warning : colors.success}15`,\n                    color: symptom.severity === \"Severe\" ? colors.danger : symptom.severity === \"Moderate\" ? colors.warning : colors.success\n                  },\n                  children: symptom.severity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs dark-mode-transition mt-1\",\n                style: {\n                  color: colors.textSecondary\n                },\n                children: formatTimeDisplay(symptom)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 23\n              }, this), symptom.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-3 text-sm p-3 rounded-lg dark-mode-transition\",\n                style: {\n                  backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                  color: colors.textPrimary\n                },\n                children: symptom.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 25\n              }, this), symptom.healthContext && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3 pt-3 border-t\",\n                style: {\n                  borderColor: borderColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs font-medium mb-2 flex items-center dark-mode-transition\",\n                  style: {\n                    color: colors.textSecondary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Activity, {\n                    size: 12,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 29\n                  }, this), \"Google Fit Health Context\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-3 gap-2\",\n                  children: [symptom.healthContext.bloodPressure && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2 rounded-lg text-xs dark-mode-transition\",\n                    style: {\n                      backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                      color: colors.textPrimary\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block text-xs\",\n                      style: {\n                        color: colors.textSecondary\n                      },\n                      children: \"BP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: [symptom.healthContext.bloodPressure.systolic, \"/\", symptom.healthContext.bloodPressure.diastolic]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 641,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 31\n                  }, this), symptom.healthContext.bmi && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2 rounded-lg text-xs dark-mode-transition\",\n                    style: {\n                      backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                      color: colors.textPrimary\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block text-xs\",\n                      style: {\n                        color: colors.textSecondary\n                      },\n                      children: \"BMI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: symptom.healthContext.bmi.toFixed(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 31\n                  }, this), symptom.healthContext.glucose && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2 rounded-lg text-xs dark-mode-transition\",\n                    style: {\n                      backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                      color: colors.textPrimary\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"block text-xs\",\n                      style: {\n                        color: colors.textSecondary\n                      },\n                      children: \"Glucose\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: symptom.healthContext.glucose\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5 border rounded-xl text-center dark-mode-transition\",\n        style: {\n          borderColor: borderColor,\n          backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Activity, {\n          size: 24,\n          className: \"mx-auto mb-2 opacity-50\",\n          style: {\n            color: colors.textSecondary\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm dark-mode-transition\",\n          style: {\n            color: colors.textSecondary\n          },\n          children: \"No symptoms logged yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 px-4 py-2 rounded-lg text-sm font-medium transition-all\",\n          style: {\n            color: colors.primary,\n            backgroundColor: `${colors.primary}15`\n          },\n          onClick: () => setView('add'),\n          children: \"Log your first symptom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 9\n    }, this), isGoogleFitConnected && hasGoogleFitData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: sectionHeadingClass,\n        style: sectionHeadingStyle,\n        children: \"Google Fit Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardClass,\n        style: cardStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 rounded-xl mr-4 flex items-center justify-center\",\n            style: {\n              background: `linear-gradient(135deg, ${colors.accent}, ${colors.gradientAlt1})`\n            },\n            children: /*#__PURE__*/_jsxDEV(Brain, {\n              size: 24,\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-bold text-base mb-2 dark-mode-transition\",\n              style: {\n                color: colors.textPrimary\n              },\n              children: \"Health Pattern Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm dark-mode-transition\",\n              style: {\n                color: colors.textSecondary\n              },\n              children: symptoms.length > 0 ? \"Our AI analysis has detected patterns in your symptoms and Google Fit data.\" : \"Log symptoms to get personalized insights from your Google Fit data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"py-2.5 px-4 rounded-lg transition-all flex items-center\",\n                style: {\n                  background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n                  color: 'white',\n                  boxShadow: `0 4px 6px -1px ${colors.primary}30`\n                },\n                children: [\"View analysis\", /*#__PURE__*/_jsxDEV(ChevronRight, {\n                  size: 16,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n          @keyframes bounce-in {\n            0% { transform: translateY(-20px); opacity: 0; }\n            50% { transform: translateY(10px); opacity: 0.8; }\n            100% { transform: translateY(0); opacity: 1; }\n          }\n          .animate-bounce-in {\n            animation: bounce-in 0.5s ease-out forwards;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 7\n  }, this);\n};\n_s(SymptomsScreen, \"IricrKZc31uo35APaW16L8dRGJg=\", false, function () {\n  return [useTheme, useApiMiddleware, useHealthData];\n});\n_c = SymptomsScreen;\nexport default SymptomsScreen;\nvar _c;\n$RefreshReg$(_c, \"SymptomsScreen\");","map":{"version":3,"names":["React","useState","useEffect","PlusCircle","Lightbulb","ChevronRight","Activity","Brain","TrendingUp","BarChart2","Clock","Calendar","Heart","RefreshCw","Loader","Link","AlertCircle","WifiOff","CheckCircle","User","LifeBuoy","Database","Dumbbell","Apple","Moon","Settings","useTheme","useHealthData","useApiMiddleware","api","jsxDEV","_jsxDEV","Fragment","_Fragment","SymptomsScreen","colors","_s","isDarkMode","isLoading","callApi","isGoogleFitConnected","connectGoogleFit","symptoms","addSymptom","healthMetrics","aiInsights","loading","healthDataLoading","fetchHealthData","prediction","view","setView","showSuccessMessage","setShowSuccessMessage","isRefreshing","setIsRefreshing","lastUpdated","setLastUpdated","googleFitStatus","setGoogleFitStatus","isConnecting","connectionError","dataFreshness","googleFitData","setGoogleFitData","refreshGoogleFitData","prev","freshData","days","Object","keys","length","Date","error","console","message","handleConnectGoogleFit","formatTimeDisplay","symptom","date","time","formatLastUpdated","now","diff","Math","floor","toLocaleDateString","cardBg","borderColor","primary","sectionHeadingClass","sectionHeadingStyle","color","textPrimary","cardClass","cardStyle","backgroundColor","boxShadow","hasGoogleFitData","handleAddSymptom","symptomData","enhancedSymptomData","healthContext","bmi","BMI","bloodPressure","systolic","diastolic","glucose","sleep","sleep_time","wake_time","setTimeout","renderGoogleFitConnection","className","style","children","background","accent","size","fileName","_jsxFileName","lineNumber","columnNumber","textSecondary","success","onClick","disabled","opacity","warning","danger","href","renderGoogleFitMetrics","metrics","name","value","round","icon","toFixed","subtext","gradientAlt1","weight","gradientAlt2","height","map","metric","idx","cloneElement","renderNoGoogleFitDataMessage","info","handleBack","transform","WebkitBackgroundClip","WebkitTextFillColor","severity","toLocaleTimeString","notes","borderLeft","index","jsx","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver4/frontend2/src/components/screens/SymptomsScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  PlusCircle, Lightbulb, ChevronRight, Activity, Brain, \n  TrendingUp, BarChart2, Clock, Calendar, Heart, RefreshCw,\n  Loader, Link, AlertCircle, WifiOff, CheckCircle, User,\n  LifeBuoy, Database, Dumbbell, Apple, Moon, Settings\n} from \"lucide-react\"; \nimport { useTheme } from '../ThemeContext';\nimport { useHealthData } from '../HealthDataContext';\nimport { useApiMiddleware } from '../ApiMiddleware';\nimport api from '../api';\n\nconst SymptomsScreen = ({ colors }) => {\n    const { isDarkMode } = useTheme();\n    const { isLoading, callApi } = useApiMiddleware();\n    const { \n      isGoogleFitConnected, \n      connectGoogleFit,\n      symptoms, \n      addSymptom, \n      healthMetrics, \n      aiInsights,\n      loading: healthDataLoading,\n      fetchHealthData,\n      prediction\n    } = useHealthData();\n    \n    // Local state\n    const [view, setView] = useState('main');\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [isRefreshing, setIsRefreshing] = useState(false);\n    const [lastUpdated, setLastUpdated] = useState(null);\n    const [googleFitStatus, setGoogleFitStatus] = useState({\n      isConnecting: false,\n      connectionError: null,\n      dataFreshness: 'unknown'\n    });\n    const [googleFitData, setGoogleFitData] = useState(null);\n    \n    // Fetch health data on component mount\n    useEffect(() => {\n      if (isGoogleFitConnected) {\n        refreshGoogleFitData();\n      }\n    }, [isGoogleFitConnected]);\n    \n    // Refresh Google Fit data\n    const refreshGoogleFitData = async () => {\n      if (!isGoogleFitConnected) {\n        setGoogleFitData(null);\n        return;\n      }\n      \n      try {\n        setIsRefreshing(true);\n        setGoogleFitStatus(prev => ({ ...prev, dataFreshness: 'refreshing' }));\n        \n        // Call the API directly to ensure we're not using mock data\n        const freshData = await callApi(api.fetchHealthData, { days: 7 });\n        \n        // Only update if we got actual data back\n        if (freshData && Object.keys(freshData).length > 0) {\n          setGoogleFitData(freshData);\n          setLastUpdated(new Date());\n          setGoogleFitStatus(prev => ({ ...prev, dataFreshness: 'fresh' }));\n        } else {\n          setGoogleFitStatus(prev => ({ \n            ...prev, \n            dataFreshness: 'unavailable',\n            connectionError: 'No data returned from Google Fit'\n          }));\n        }\n      } catch (error) {\n        console.error(\"Failed to refresh Google Fit data:\", error);\n        setGoogleFitStatus(prev => ({ \n          ...prev, \n          dataFreshness: 'error',\n          connectionError: error.message || 'Failed to fetch Google Fit data'\n        }));\n      } finally {\n        setIsRefreshing(false);\n      }\n    };\n    \n    // Connect to Google Fit\n    const handleConnectGoogleFit = async () => {\n      try {\n        setGoogleFitStatus(prev => ({ ...prev, isConnecting: true, connectionError: null }));\n        \n        // Make the actual connection to Google Fit\n        await connectGoogleFit();\n        \n        // Fetch data immediately after connection\n        await refreshGoogleFitData();\n        \n        setGoogleFitStatus(prev => ({ ...prev, isConnecting: false }));\n      } catch (error) {\n        console.error(\"Failed to connect to Google Fit:\", error);\n        setGoogleFitStatus(prev => ({ \n          ...prev, \n          isConnecting: false, \n          connectionError: error.message || 'Failed to connect to Google Fit'\n        }));\n      }\n    };\n    \n    // Format the display text for symptom date and time\n    const formatTimeDisplay = (symptom) => {\n      return `${symptom.date}, ${symptom.time}`;\n    };\n    \n    // Format last updated time\n    const formatLastUpdated = () => {\n      if (!lastUpdated) return \"Never\";\n      \n      const now = new Date();\n      const diff = Math.floor((now - lastUpdated) / 1000); // seconds\n      \n      if (diff < 60) return \"Just now\";\n      if (diff < 3600) return `${Math.floor(diff / 60)} minutes ago`;\n      if (diff < 86400) return `${Math.floor(diff / 3600)} hours ago`;\n      return lastUpdated.toLocaleDateString();\n    };\n    \n    // Style variables\n    const cardBg = isDarkMode ? colors.cardBg : 'white';\n    const borderColor = isDarkMode ? `${colors.primary}30` : 'rgba(219, 234, 254, 1)';\n    const sectionHeadingClass = \"font-bold text-lg dark-mode-transition mb-4\";\n    const sectionHeadingStyle = { color: colors.textPrimary };\n    const cardClass = \"p-5 rounded-2xl shadow-lg border overflow-hidden dark-mode-transition transform transition-all hover:shadow-xl\";\n    const cardStyle = { \n      backgroundColor: cardBg, \n      borderColor: borderColor,\n      boxShadow: `0 10px 15px -3px ${colors.primary}20`\n    };\n    \n    // Check if we have real data from Google Fit\n    const hasGoogleFitData = googleFitData && Object.keys(googleFitData).length > 0;\n    \n    // Handle adding a new symptom\n    const handleAddSymptom = async (symptomData) => {\n      if (!isGoogleFitConnected || !hasGoogleFitData) {\n        // If no Google Fit data, don't attach health context\n        await addSymptom(symptomData);\n      } else {\n        // Add health metrics from Google Fit\n        const enhancedSymptomData = {\n          ...symptomData,\n          healthContext: {\n            bmi: googleFitData.BMI,\n            bloodPressure: {\n              systolic: googleFitData.systolic,\n              diastolic: googleFitData.diastolic\n            },\n            glucose: googleFitData.glucose,\n            sleep: {\n              sleep_time: googleFitData.sleep_time,\n              wake_time: googleFitData.wake_time\n            }\n          }\n        };\n        \n        await addSymptom(enhancedSymptomData);\n      }\n      \n      // Show success message and return to main view\n      setShowSuccessMessage(true);\n      setTimeout(() => setShowSuccessMessage(false), 3000);\n      setView('main');\n    };\n    \n    // Render Google Fit connection component\n    const renderGoogleFitConnection = () => (\n      <div className={cardClass + \" mb-8\"} style={cardStyle}>\n        <div className=\"flex items-start mb-4\">\n          <div className=\"w-12 h-12 rounded-xl mr-4 flex items-center justify-center\"\n               style={{ \n                 background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`\n               }}>\n            <Activity size={24} color=\"white\" />\n          </div>\n          <div>\n            <h3 className=\"font-bold text-lg dark-mode-transition\" style={{ color: colors.textPrimary }}>\n              Google Fit Integration\n            </h3>\n            <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>\n              Connect to import your health metrics in real-time\n            </p>\n          </div>\n        </div>\n        \n        {isGoogleFitConnected ? (\n          <div>\n            <div className=\"p-3 rounded-lg flex items-center mb-4\"\n                 style={{ \n                   backgroundColor: `${colors.success}15`,\n                   color: colors.success\n                 }}>\n              <CheckCircle size={18} className=\"mr-2\" />\n              <span className=\"text-sm\">\n                Connected to Google Fit\n              </span>\n            </div>\n            \n            <div className=\"flex space-x-3\">\n              <button \n                onClick={refreshGoogleFitData}\n                disabled={isRefreshing}\n                className=\"flex-1 py-3 px-4 rounded-lg font-medium transition-all flex items-center justify-center\"\n                style={{ \n                  backgroundColor: `${colors.primary}15`,\n                  color: colors.primary,\n                  opacity: isRefreshing ? 0.7 : 1\n                }}\n              >\n                <RefreshCw size={18} className={`mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n                {isRefreshing ? 'Refreshing...' : 'Refresh Data'}\n              </button>\n              \n              <button \n                className=\"py-3 px-4 rounded-lg font-medium transition-all flex items-center justify-center\"\n                style={{ \n                  backgroundColor: `${colors.accent}15`,\n                  color: colors.accent\n                }}\n              >\n                <Settings size={18} className=\"mr-2\" />\n                Manage\n              </button>\n            </div>\n            \n            {googleFitStatus.connectionError && (\n              <div className=\"p-3 rounded-lg flex items-center mt-4\"\n                   style={{ \n                     backgroundColor: `${colors.warning}15`,\n                     color: colors.warning\n                   }}>\n                <AlertCircle size={18} className=\"mr-2\" />\n                <span className=\"text-sm\">\n                  {googleFitStatus.connectionError}\n                </span>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div>\n            {googleFitStatus.connectionError && (\n              <div className=\"p-3 rounded-lg flex items-center mb-4\"\n                   style={{ \n                     backgroundColor: `${colors.danger}15`,\n                     color: colors.danger\n                   }}>\n                <AlertCircle size={18} className=\"mr-2\" />\n                <span className=\"text-sm\">\n                  {googleFitStatus.connectionError}\n                </span>\n              </div>\n            )}\n            \n            <div className=\"p-3 rounded-lg flex items-start mb-4\"\n                 style={{ \n                   backgroundColor: `${colors.primary}15`,\n                   color: colors.primary\n                 }}>\n              <Lightbulb size={18} className=\"mr-2 mt-0.5\" />\n              <div>\n                <span className=\"text-sm font-medium\">Connect for better insights</span>\n                <p className=\"text-xs mt-1\">\n                  Google Fit provides real-time health metrics that improve AI analysis of your symptoms\n                </p>\n              </div>\n            </div>\n            \n            <button \n              onClick={handleConnectGoogleFit}\n              disabled={googleFitStatus.isConnecting}\n              className=\"w-full py-3 px-4 rounded-lg text-white font-medium transition-all flex items-center justify-center\"\n              style={{ \n                background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n                opacity: googleFitStatus.isConnecting ? 0.7 : 1\n              }}\n            >\n              {googleFitStatus.isConnecting ? (\n                <>\n                  <Loader size={18} className=\"animate-spin mr-2\" />\n                  Connecting...\n                </>\n              ) : (\n                <>\n                  <Link size={18} className=\"mr-2\" />\n                  Connect Google Fit\n                </>\n              )}\n            </button>\n          </div>\n        )}\n        \n        {isGoogleFitConnected && (\n          <div className=\"border-t mt-4 pt-3 flex items-center justify-between\"\n               style={{ borderColor: borderColor }}>\n            <p className=\"text-xs\" style={{ color: colors.textSecondary }}>\n              Last updated: <span style={{ color: colors.primary }}>{formatLastUpdated()}</span>\n            </p>\n            <a href=\"#privacy\" className=\"text-xs flex items-center\" style={{ color: colors.primary }}>\n              Privacy Policy\n              <ChevronRight size={12} className=\"ml-1\" />\n            </a>\n          </div>\n        )}\n      </div>\n    );\n    \n    // Render Google Fit health metrics\n    const renderGoogleFitMetrics = () => {\n      if (!isGoogleFitConnected || !hasGoogleFitData) {\n        return null;\n      }\n      \n      const metrics = [\n        {\n          name: \"Blood Pressure\",\n          value: googleFitData.systolic ? `${Math.round(googleFitData.systolic)}/${Math.round(googleFitData.diastolic)} mmHg` : \"N/A\",\n          icon: <Heart size={18} />,\n          color: colors.danger\n        },\n        {\n          name: \"BMI\",\n          value: googleFitData.BMI ? googleFitData.BMI.toFixed(1) : \"N/A\",\n          subtext: googleFitData.BMI ? \n            (googleFitData.BMI < 18.5 ? \"Underweight\" : \n             googleFitData.BMI < 25 ? \"Normal\" : \n             googleFitData.BMI < 30 ? \"Overweight\" : \"Obese\") : \"\",\n          icon: <User size={18} />,\n          color: colors.primary\n        },\n        {\n          name: \"Glucose\",\n          value: googleFitData.glucose ? `${Math.round(googleFitData.glucose)} mg/dL` : \"N/A\",\n          icon: <BarChart2 size={18} />,\n          color: colors.accent\n        },\n        {\n          name: \"Sleep\",\n          value: googleFitData.sleep_time ? `${googleFitData.sleep_time} - ${googleFitData.wake_time}` : \"N/A\",\n          icon: <Moon size={18} />,\n          color: colors.gradientAlt1\n        },\n        {\n          name: \"Weight\",\n          value: googleFitData.weight ? `${googleFitData.weight.toFixed(1)} kg` : \"N/A\",\n          icon: <Dumbbell size={18} />,\n          color: colors.gradientAlt2\n        },\n        {\n          name: \"Height\",\n          value: googleFitData.height ? `${googleFitData.height.toFixed(2)} m` : \"N/A\",\n          icon: <Activity size={18} />,\n          color: colors.warning\n        }\n      ];\n      \n      return (\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h3 className={sectionHeadingClass} style={sectionHeadingStyle}>\n              Google Fit Metrics\n            </h3>\n            <span className=\"text-xs dark-mode-transition px-3 py-1 rounded-full\" \n                  style={{ \n                    backgroundColor: `${colors.primary}15`,\n                    color: colors.primary\n                  }}>\n              Real-time data\n            </span>\n          </div>\n          \n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\n            {metrics.map((metric, idx) => (\n              <div key={idx} className=\"p-4 rounded-xl border hover:shadow-md transition-all duration-300 dark-mode-transition\"\n                   style={{ backgroundColor: cardBg, borderColor: borderColor }}>\n                <div className=\"flex items-center mb-2\">\n                  <div className=\"w-8 h-8 rounded-lg mr-2 flex items-center justify-center\"\n                       style={{ backgroundColor: `${metric.color}20` }}>\n                    {React.cloneElement(metric.icon, { style: { color: metric.color } })}\n                  </div>\n                  <span className=\"text-xs font-medium dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                    {metric.name}\n                  </span>\n                </div>\n                <p className=\"text-lg font-bold dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                  {metric.value}\n                </p>\n                {metric.subtext && (\n                  <p className=\"text-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                    {metric.subtext}\n                  </p>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    };\n    \n    // No Google Fit data message\n    const renderNoGoogleFitDataMessage = () => {\n      if (isGoogleFitConnected && (!hasGoogleFitData || isRefreshing)) {\n        return (\n          <div className=\"mb-8 p-4 rounded-xl border flex items-center dark-mode-transition\" \n               style={{ \n                 backgroundColor: `${colors.info}10`,\n                 borderColor: `${colors.info}30`,\n                 color: colors.info\n               }}>\n            {isRefreshing ? (\n              <Loader size={20} className=\"animate-spin mr-3\" />\n            ) : (\n              <Database size={20} className=\"mr-3\" />\n            )}\n            <div>\n              <h4 className=\"font-medium text-sm\">\n                {isRefreshing ? 'Fetching Google Fit Data...' : 'No Google Fit Data Available'}\n              </h4>\n              <p className=\"text-xs mt-1\">\n                {isRefreshing \n                  ? 'Please wait while we fetch your latest health metrics...'\n                  : 'We could not retrieve your Google Fit data. Please refresh or reconnect.'}\n              </p>\n            </div>\n          </div>\n        );\n      }\n      return null;\n    };\n    \n    // Handle back button click\n    const handleBack = () => {\n      setView('main');\n    };\n    \n    // Render UI based on the current view\n    if (view === 'add') {\n      return (\n        <div className=\"p-6 pb-20\">\n          <header className=\"flex items-center mb-6\">\n            <button \n              className=\"w-10 h-10 rounded-full flex items-center justify-center mr-4 hover:bg-opacity-10 transition-colors duration-300 dark-mode-transition\"\n              onClick={handleBack}\n              style={{ \n                backgroundColor: isDarkMode ? `${colors.primary}10` : 'transparent',\n                color: colors.textPrimary \n              }}\n            >\n              <ChevronRight size={24} style={{ transform: 'rotate(180deg)' }} />\n            </button>\n            <div>\n              <h1 className=\"text-2xl font-bold\" style={{ \n                background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`,\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent'\n              }}>Log Symptom</h1>\n              <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>Track what your body's telling you</p>\n            </div>\n          </header>\n          \n          {/* Google Fit health context notice */}\n          {isGoogleFitConnected && hasGoogleFitData && (\n            <div className=\"mb-6 p-4 rounded-xl border flex items-start dark-mode-transition\"\n                 style={{ \n                   backgroundColor: `${colors.success}10`,\n                   borderColor: `${colors.success}30`,\n                   color: colors.success\n                 }}>\n              <CheckCircle size={20} className=\"mr-3 mt-0.5\" />\n              <div>\n                <h4 className=\"font-medium text-sm\">Google Fit Data Available</h4>\n                <p className=\"text-xs mt-1\">\n                  Your symptoms will be recorded with your current health metrics from Google Fit for better insights.\n                </p>\n              </div>\n            </div>\n          )}\n          \n          {/* Form would go here */}\n          <div className={cardClass} style={cardStyle}>\n            <h3 className=\"font-semibold mb-4 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n              Symptom Details\n            </h3>\n            \n            {/* This would be your actual form component */}\n            <div className=\"space-y-4\">\n              <button \n                onClick={() => handleAddSymptom({\n                  symptom: \"Headache\",\n                  severity: \"Moderate\",\n                  time: new Date().toLocaleTimeString(),\n                  date: new Date().toLocaleDateString(),\n                  notes: \"Sample symptom with Google Fit data\"\n                })}\n                className=\"w-full py-3 px-4 rounded-lg text-white font-medium transition-all\"\n                style={{ \n                  background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`\n                }}\n              >\n                Submit Symptom Demo\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    \n    return (\n      <div className=\"p-6 pb-20\">\n        <header className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold\" style={{ \n              background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`,\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent'\n            }}>Symptoms</h1>\n            <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>Track your health with Google Fit</p>\n          </div>\n          <button \n            className=\"w-12 h-12 rounded-full flex items-center justify-center shadow-lg transition-transform hover:scale-110 duration-300\" \n            style={{ \n              background: `linear-gradient(135deg, ${colors.primary}, ${colors.accent})`,\n              boxShadow: `0 0 20px ${colors.primary}60`\n            }}\n            onClick={() => setView('add')}\n            disabled={isLoading || healthDataLoading}\n          >\n            <PlusCircle size={24} color=\"white\" className={isLoading || healthDataLoading ? \"animate-pulse\" : \"\"} />\n          </button>\n        </header>\n        \n        {/* Success message */}\n        {showSuccessMessage && (\n          <div className=\"fixed top-5 left-0 right-0 mx-auto w-max z-50 animate-bounce-in\">\n            <div className=\"p-4 rounded-xl shadow-lg flex items-center max-w-md\"\n                 style={{ \n                   backgroundColor: isDarkMode ? colors.cardBg : 'white',\n                   borderLeft: `4px solid ${colors.success}`,\n                   boxShadow: `0 10px 15px -3px ${colors.success}30`\n                 }}>\n              <div className=\"w-8 h-8 rounded-full mr-3 flex items-center justify-center\" \n                   style={{ backgroundColor: `${colors.success}20` }}>\n                <CheckCircle size={18} style={{ color: colors.success }} />\n              </div>\n              <div>\n                <h4 className=\"font-medium text-sm dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                  Symptom Added Successfully\n                </h4>\n                <p className=\"text-xs dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                  {isGoogleFitConnected && hasGoogleFitData \n                    ? 'Recorded with Google Fit health data'\n                    : 'Recorded without health metrics'}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Google Fit Connection Component */}\n        {renderGoogleFitConnection()}\n        \n        {/* No Google Fit data message */}\n        {renderNoGoogleFitDataMessage()}\n        \n        {/* Google Fit Metrics */}\n        {renderGoogleFitMetrics()}\n        \n        {/* Recent symptoms */}\n        <div className=\"mb-8\">\n          <h3 className={sectionHeadingClass} style={sectionHeadingStyle}>Recent Symptoms</h3>\n          \n          {symptoms.length > 0 ? (\n            <div className=\"space-y-4\">\n              {symptoms.map((symptom, index) => (\n                <div key={index} className={cardClass + \" transform hover:scale-102\"} style={cardStyle}>\n                  <div className=\"flex items-start\">\n                    <div className=\"w-10 h-10 rounded-xl mr-3 flex items-center justify-center\"\n                         style={{ \n                           backgroundColor: `${colors.accent}15`,\n                           color: colors.accent\n                         }}>\n                      {symptom.symptom === \"Headache\" ? <Activity size={20} /> : <LifeBuoy size={20} />}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"flex justify-between\">\n                        <h4 className=\"font-medium dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                          {symptom.symptom}\n                        </h4>\n                        <span className=\"px-2 py-0.5 rounded-full text-xs\"\n                              style={{ \n                                backgroundColor: `${symptom.severity === \"Severe\" \n                                  ? colors.danger \n                                  : symptom.severity === \"Moderate\" \n                                    ? colors.warning \n                                    : colors.success}15`,\n                                color: symptom.severity === \"Severe\" \n                                  ? colors.danger \n                                  : symptom.severity === \"Moderate\" \n                                    ? colors.warning \n                                    : colors.success\n                              }}>\n                          {symptom.severity}\n                        </span>\n                      </div>\n                      <p className=\"text-xs dark-mode-transition mt-1\" style={{ color: colors.textSecondary }}>\n                        {formatTimeDisplay(symptom)}\n                      </p>\n                      \n                      {symptom.notes && (\n                        <p className=\"mt-3 text-sm p-3 rounded-lg dark-mode-transition\"\n                           style={{ \n                             backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                             color: colors.textPrimary\n                           }}>\n                          {symptom.notes}\n                        </p>\n                      )}\n                      \n                      {/* Health metrics associated with this symptom */}\n                      {symptom.healthContext && (\n                        <div className=\"mt-3 pt-3 border-t\" style={{ borderColor: borderColor }}>\n                          <p className=\"text-xs font-medium mb-2 flex items-center dark-mode-transition\"\n                             style={{ color: colors.textSecondary }}>\n                            <Activity size={12} className=\"mr-1\" />\n                            Google Fit Health Context\n                          </p>\n                          \n                          <div className=\"grid grid-cols-3 gap-2\">\n                            {symptom.healthContext.bloodPressure && (\n                              <div className=\"p-2 rounded-lg text-xs dark-mode-transition\"\n                                  style={{ \n                                    backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                                    color: colors.textPrimary\n                                  }}>\n                                <span className=\"block text-xs\" style={{ color: colors.textSecondary }}>BP</span>\n                                <span className=\"font-medium\">\n                                  {symptom.healthContext.bloodPressure.systolic}/{symptom.healthContext.bloodPressure.diastolic}\n                                </span>\n                              </div>\n                            )}\n                            \n                            {symptom.healthContext.bmi && (\n                              <div className=\"p-2 rounded-lg text-xs dark-mode-transition\"\n                                  style={{ \n                                    backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                                    color: colors.textPrimary\n                                  }}>\n                                <span className=\"block text-xs\" style={{ color: colors.textSecondary }}>BMI</span>\n                                <span className=\"font-medium\">{symptom.healthContext.bmi.toFixed(1)}</span>\n                              </div>\n                            )}\n                            \n                            {symptom.healthContext.glucose && (\n                              <div className=\"p-2 rounded-lg text-xs dark-mode-transition\"\n                                  style={{ \n                                    backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB',\n                                    color: colors.textPrimary\n                                  }}>\n                                <span className=\"block text-xs\" style={{ color: colors.textSecondary }}>Glucose</span>\n                                <span className=\"font-medium\">{symptom.healthContext.glucose}</span>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"p-5 border rounded-xl text-center dark-mode-transition\" \n                 style={{ \n                   borderColor: borderColor,\n                   backgroundColor: isDarkMode ? `${colors.primary}10` : '#F9FAFB'\n                 }}>\n              <Activity size={24} className=\"mx-auto mb-2 opacity-50\" style={{ color: colors.textSecondary }} />\n              <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                No symptoms logged yet\n              </p>\n              <button \n                className=\"mt-3 px-4 py-2 rounded-lg text-sm font-medium transition-all\" \n                style={{ \n                  color: colors.primary,\n                  backgroundColor: `${colors.primary}15`\n                }}\n                onClick={() => setView('add')}\n              >\n                Log your first symptom\n              </button>\n            </div>\n          )}\n        </div>\n        \n        {/* Google Fit Analysis - Only if we have Google Fit data */}\n        {isGoogleFitConnected && hasGoogleFitData && (\n          <div className=\"mb-8\">\n            <h3 className={sectionHeadingClass} style={sectionHeadingStyle}>Google Fit Analysis</h3>\n            \n            <div className={cardClass} style={cardStyle}>\n              <div className=\"flex items-start\">\n                <div className=\"w-12 h-12 rounded-xl mr-4 flex items-center justify-center\"\n                     style={{ \n                       background: `linear-gradient(135deg, ${colors.accent}, ${colors.gradientAlt1})`\n                     }}>\n                  <Brain size={24} color=\"white\" />\n                </div>\n                <div>\n                  <h4 className=\"font-bold text-base mb-2 dark-mode-transition\" style={{ color: colors.textPrimary }}>\n                    Health Pattern Analysis\n                  </h4>\n                  <p className=\"text-sm dark-mode-transition\" style={{ color: colors.textSecondary }}>\n                    {symptoms.length > 0 \n                      ? \"Our AI analysis has detected patterns in your symptoms and Google Fit data.\"\n                      : \"Log symptoms to get personalized insights from your Google Fit data.\"}\n                  </p>\n                  <div className=\"mt-4\">\n                    <button \n                      className=\"py-2.5 px-4 rounded-lg transition-all flex items-center\" \n                      style={{ \n                        background: `linear-gradient(to right, ${colors.primary}, ${colors.accent})`,\n                        color: 'white',\n                        boxShadow: `0 4px 6px -1px ${colors.primary}30`\n                      }}\n                    >\n                      View analysis\n                      <ChevronRight size={16} className=\"ml-1\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Custom CSS for animations */}\n        <style jsx>{`\n          @keyframes bounce-in {\n            0% { transform: translateY(-20px); opacity: 0; }\n            50% { transform: translateY(10px); opacity: 0.8; }\n            100% { transform: translateY(0); opacity: 1; }\n          }\n          .animate-bounce-in {\n            animation: bounce-in 0.5s ease-out forwards;\n          }\n        `}</style>\n      </div>\n    );\n  };\n\nexport default SymptomsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}