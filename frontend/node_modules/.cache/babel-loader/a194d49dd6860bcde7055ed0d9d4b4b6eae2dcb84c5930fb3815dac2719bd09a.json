{"ast":null,"code":"var _jsxFileName = \"/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx\",\n  _s = $RefreshSig$();\n// Updated VideoDisplay.jsx without debug overlays\nimport React, { useEffect, useState } from 'react';\nimport { Users } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children\n}) => {\n  _s();\n  var _remoteVideoRef$curre2, _remoteVideoRef$curre3;\n  // Dark mode specific colors\n  const videoOffBg = isDarkMode ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n  const videoOnBg = isDarkMode ? `linear-gradient(45deg, #0a0a0a, #1e1e1e)` : `linear-gradient(45deg, #1e1e1e, #0a0a0a)`;\n\n  // Track stream readiness without visible indicators\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n\n  // Force display of remote stream\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      var _remoteVideoRef$curre;\n      // Force play if possible\n      const attemptAutoplay = () => {\n        if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n          remoteVideoRef.current.play().then(() => {\n            console.log('Remote video playing successfully');\n            setRemotePlaying(true);\n          }).catch(err => {\n            console.error('Remote video autoplay failed:', err);\n\n            // Try again with muted first, then unmute\n            remoteVideoRef.current.muted = true;\n            remoteVideoRef.current.play().then(() => {\n              console.log('Remote video playing (muted first)');\n              remoteVideoRef.current.muted = isSpeakerOff;\n              setRemotePlaying(true);\n            }).catch(e => console.error('Remote video autoplay failed even muted:', e));\n          });\n        }\n      };\n\n      // Attempt immediately if we have tracks\n      if (((_remoteVideoRef$curre = remoteVideoRef.current.srcObject) === null || _remoteVideoRef$curre === void 0 ? void 0 : _remoteVideoRef$curre.getTracks().length) > 0) {\n        attemptAutoplay();\n      }\n\n      // Set up event listeners to detect when video becomes ready\n      const handleLoadedData = () => {\n        console.log('Remote video loadeddata event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      const handleCanPlay = () => {\n        console.log('Remote video canplay event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      remoteVideoRef.current.addEventListener('loadeddata', handleLoadedData);\n      remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n      return () => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.removeEventListener('loadeddata', handleLoadedData);\n          remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n        }\n      };\n    }\n  }, [remoteVideoRef.current, (_remoteVideoRef$curre2 = remoteVideoRef.current) === null || _remoteVideoRef$curre2 === void 0 ? void 0 : _remoteVideoRef$curre2.srcObject]);\n\n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      console.log('Remote video srcObject changed');\n\n      // Set a backup timeout to ensure video plays\n      setTimeout(() => {\n        if (remoteVideoRef.current && !remotePlaying) {\n          console.log('Backup timeout: forcing play attempt');\n          remoteVideoRef.current.play().catch(e => console.error('Play attempt failed:', e));\n        }\n      }, 1000);\n    }\n  }, [(_remoteVideoRef$curre3 = remoteVideoRef.current) === null || _remoteVideoRef$curre3 === void 0 ? void 0 : _remoteVideoRef$curre3.srcObject, remotePlaying]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black dark-mode-transition\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: isSpeakerOff,\n          className: \"w-full h-full object-cover\",\n          style: {\n            visibility: 'visible',\n            display: 'block'\n          },\n          onError: e => console.error(\"Remote video error:\", e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), children, connectionQuality !== 'good' && reconnectAttempt > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\",\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            backdropFilter: 'blur(4px)'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-white font-medium\",\n              children: [\"Reconnecting\", reconnectAttempt > 1 ? ` (${reconnectAttempt})` : '', \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), (isVideoOff || !remoteReady) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center dark-mode-transition\",\n          style: {\n            background: isDarkMode ? colors.darkBg : '#000811'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (doctor === null || doctor === void 0 ? void 0 : doctor.image) || '/User_1.png',\n              alt: (doctor === null || doctor === void 0 ? void 0 : doctor.name) || 'Doctor',\n              className: \"w-full h-full object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\",\n      style: {\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n        zIndex: 999,\n        backgroundColor: 'black',\n        transform: showControls ? 'scale(1)' : 'scale(0.95)',\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true // Always mute local video to prevent feedback\n        ,\n        className: \"w-full h-full object-cover\",\n        style: {\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`,\n        style: {\n          background: videoOffBg\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), isVideoOff && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Users, {\n            size: 18,\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoDisplay, \"evP+n3NIfKtN+uBUH+jqEVBVLrY=\");\n_c = VideoDisplay;\nexport default VideoDisplay;\nvar _c;\n$RefreshReg$(_c, \"VideoDisplay\");","map":{"version":3,"names":["React","useEffect","useState","Users","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoDisplay","remoteVideoRef","localVideoRef","isSpeakerOff","isVideoOff","doctor","connectionQuality","reconnectAttempt","showControls","isDarkMode","colors","children","_s","_remoteVideoRef$curre2","_remoteVideoRef$curre3","videoOffBg","darkBg","primaryDark","videoOnBg","remoteReady","setRemoteReady","remotePlaying","setRemotePlaying","current","_remoteVideoRef$curre","attemptAutoplay","srcObject","play","then","console","log","catch","err","error","muted","e","getTracks","length","handleLoadedData","handleCanPlay","addEventListener","removeEventListener","setTimeout","className","ref","autoPlay","playsInline","style","visibility","display","onError","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","backdropFilter","background","src","image","alt","name","boxShadow","zIndex","transform","transition","size","_c","$RefreshReg$"],"sources":["/Users/ang/V_Hack_Ver2/frontend/src/components/screens/Connect/VideoDisplay.jsx"],"sourcesContent":["// Updated VideoDisplay.jsx without debug overlays\nimport React, { useEffect, useState } from 'react';\nimport { Users } from 'lucide-react';\n\nconst VideoDisplay = ({\n  remoteVideoRef,\n  localVideoRef,\n  isSpeakerOff,\n  isVideoOff,\n  doctor,\n  connectionQuality,\n  reconnectAttempt,\n  showControls,\n  isDarkMode,\n  colors,\n  children\n}) => {\n  // Dark mode specific colors\n  const videoOffBg = isDarkMode \n    ? `linear-gradient(135deg, ${colors.darkBg}, #031838)` \n    : `linear-gradient(135deg, ${colors.primaryDark}, #031838)`;\n  \n  const videoOnBg = isDarkMode\n    ? `linear-gradient(45deg, #0a0a0a, #1e1e1e)`\n    : `linear-gradient(45deg, #1e1e1e, #0a0a0a)`;\n    \n  // Track stream readiness without visible indicators\n  const [remoteReady, setRemoteReady] = useState(false);\n  const [remotePlaying, setRemotePlaying] = useState(false);\n\n  // Force display of remote stream\n  useEffect(() => {\n    if (remoteVideoRef.current) {\n      // Force play if possible\n      const attemptAutoplay = () => {\n        if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n          remoteVideoRef.current.play()\n            .then(() => {\n              console.log('Remote video playing successfully');\n              setRemotePlaying(true);\n            })\n            .catch(err => {\n              console.error('Remote video autoplay failed:', err);\n              \n              // Try again with muted first, then unmute\n              remoteVideoRef.current.muted = true;\n              remoteVideoRef.current.play()\n                .then(() => {\n                  console.log('Remote video playing (muted first)');\n                  remoteVideoRef.current.muted = isSpeakerOff;\n                  setRemotePlaying(true);\n                })\n                .catch(e => console.error('Remote video autoplay failed even muted:', e));\n            });\n        }\n      };\n      \n      // Attempt immediately if we have tracks\n      if (remoteVideoRef.current.srcObject?.getTracks().length > 0) {\n        attemptAutoplay();\n      }\n      \n      // Set up event listeners to detect when video becomes ready\n      const handleLoadedData = () => {\n        console.log('Remote video loadeddata event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      \n      const handleCanPlay = () => {\n        console.log('Remote video canplay event fired');\n        setRemoteReady(true);\n        attemptAutoplay();\n      };\n      \n      remoteVideoRef.current.addEventListener('loadeddata', handleLoadedData);\n      remoteVideoRef.current.addEventListener('canplay', handleCanPlay);\n      \n      return () => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.removeEventListener('loadeddata', handleLoadedData);\n          remoteVideoRef.current.removeEventListener('canplay', handleCanPlay);\n        }\n      };\n    }\n  }, [remoteVideoRef.current, remoteVideoRef.current?.srcObject]);\n  \n  // Handle srcObject changes\n  useEffect(() => {\n    if (remoteVideoRef.current && remoteVideoRef.current.srcObject) {\n      console.log('Remote video srcObject changed');\n        \n      // Set a backup timeout to ensure video plays\n      setTimeout(() => {\n        if (remoteVideoRef.current && !remotePlaying) {\n          console.log('Backup timeout: forcing play attempt');\n          remoteVideoRef.current.play().catch(e => console.error('Play attempt failed:', e));\n        }\n      }, 1000);\n    }\n  }, [remoteVideoRef.current?.srcObject, remotePlaying]);\n\n  return (\n    <>\n      {/* Doctor video (remote) */}\n      <div className=\"absolute inset-0 bg-black dark-mode-transition\">\n        <div className=\"h-full relative\">\n          {/* Remote video element */}\n          <video\n            ref={remoteVideoRef}\n            autoPlay\n            playsInline\n            muted={isSpeakerOff}\n            className=\"w-full h-full object-cover\"\n            style={{\n              visibility: 'visible',\n              display: 'block'\n            }}\n            onError={(e) => console.error(\"Remote video error:\", e)}\n          />\n          \n          {/* Pass children (call header & connection status) */}\n          {children}\n          \n          {/* Reconnecting indicator */}\n          {connectionQuality !== 'good' && reconnectAttempt > 0 && (\n            <div \n              className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 px-4 py-2 rounded-lg\"\n              style={{ \n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                backdropFilter: 'blur(4px)'\n              }}\n            >\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 rounded-full border-2 border-white border-opacity-20 border-t-white animate-spin mb-2\"></div>\n                <span className=\"text-sm text-white font-medium\">Reconnecting{reconnectAttempt > 1 ? ` (${reconnectAttempt})` : ''}...</span>\n              </div>\n            </div>\n          )}\n          \n          {/* Fallback when remote video is off or not available yet */}\n          {(isVideoOff || !remoteReady) && (\n            <div className=\"absolute inset-0 flex items-center justify-center dark-mode-transition\"\n                 style={{ background: isDarkMode ? colors.darkBg : '#000811' }}>\n              <div className=\"w-32 h-32 rounded-full overflow-hidden border-4 border-white border-opacity-20\">\n                <img src={doctor?.image || '/User_1.png'} alt={doctor?.name || 'Doctor'} className=\"w-full h-full object-cover\" />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* User video (local) - CLEANER VERSION WITHOUT DEBUG OVERLAYS */}\n      <div className=\"absolute bottom-24 right-4 w-32 h-48 rounded-xl overflow-hidden border-4 border-white\"\n           style={{ \n             boxShadow: '0 8px 32px rgba(0, 0, 0, 0.8)',\n             zIndex: 999,\n             backgroundColor: 'black',\n             transform: showControls ? 'scale(1)' : 'scale(0.95)',\n             transition: 'all 0.3s ease'\n           }}>\n        {/* Local video element */}\n        <video\n          ref={localVideoRef}\n          autoPlay\n          playsInline\n          muted={true} // Always mute local video to prevent feedback\n          className=\"w-full h-full object-cover\"\n          style={{ display: 'block' }}\n        />\n        \n        {/* Background when video is off */}\n        <div className={`absolute inset-0 dark-mode-transition ${isVideoOff ? '' : 'hidden'}`} \n             style={{ background: videoOffBg }}>\n        </div>\n        \n        {/* User placeholder when video is off */}\n        {isVideoOff && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-12 h-12 rounded-full bg-white bg-opacity-10 flex items-center justify-center\">\n              <Users size={18} className=\"text-white\" />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default VideoDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}